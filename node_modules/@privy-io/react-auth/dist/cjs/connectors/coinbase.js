"use strict";var e=require("@coinbase/wallet-sdk"),i=require("../errors.js"),r=require("../svg/coinbase-wallet.js"),s=require("./chains/index.js"),t=require("./errors.js"),n=require("./ethereum/index.js"),a=require("./privyProxyProvider.js");let o;require("ofetch"),require("react/jsx-runtime"),require("./chains/arbitrum.js"),require("./chains/arbitrumSepolia.js"),require("./chains/avalanche.js"),require("./chains/avalancheFuji.js"),require("./chains/base.js"),require("./chains/baseSepolia.js"),require("./chains/berachainArtio.js"),require("./chains/celo.js"),require("./chains/celoAlfajores.js"),require("./chains/filecoin.js"),require("./chains/filecoinCalibration.js"),require("./chains/garnetHolesky.js"),require("./chains/holesky.js"),require("./chains/linea.js"),require("./chains/lineaTestnet.js"),require("./chains/lukso.js"),require("./chains/mainnet.js"),require("./chains/optimism.js"),require("./chains/optimismSepolia.js"),require("./chains/polygon.js"),require("./chains/polygonAmoy.js"),require("./chains/redstone.js"),require("./chains/sepolia.js"),require("./chains/zora.js"),require("./chains/zoraSepolia.js"),require("./chains/zoraTestnet.js"),require("@ethersproject/logger"),require("@privy-io/js-sdk-core"),require("@ethersproject/address"),require("@ethersproject/providers"),require("../constants.js"),require("../storage.js"),require("../utils/index.js"),require("./get-legacy-injected-providers.js"),require("./is-wallet-installed.js"),require("./areWalletArraysEqual.js"),require("./isBaseConnectedEthereumWallet.js"),require("./base.js"),require("eventemitter3"),require("./getRpcTimeout.js");let c=[1,11155111,137,10,8453,84532,42161,7777777,43114,56],l=(e,i)=>e.makeWeb3Provider({options:i});class h extends n.EthereumWalletConnector{async initialize(){await this.syncAccounts(),this.initialized=!0,this.emit("initialized")}async connect(e){return e.showPrompt&&await this.promptConnection(),await this.isConnected()?this.getConnectedWallet():null}disconnect(){this.proxyProvider.walletProvider.disconnect(),this.onDisconnect()}get walletBranding(){return{name:this.displayName,icon:r.COINBASE_WALLET_DATA_URI,id:"com.coinbase.wallet"}}async promptConnection(){try{let e=await this.proxyProvider.request({method:"eth_requestAccounts"});if(!e||0===e.length||!e[0])throw new i.PrivyConnectorError("Unable to retrieve accounts");this.connected=!0,await this.syncAccounts([e[0]])}catch(e){throw t.formatConnectorError(e)}}updateConnectionPreference(e){this.connectionOptions=e,this.walletClientType="smartWalletOnly"===e?"coinbase_smart_wallet":"coinbase_wallet",this.proxyProvider.setWalletProvider(l(o,this.connectionOptions))}constructor(i,r,t,n,h,u){if(super("coinbase_wallet",i,r,t),this.connectorType="coinbase_wallet",this.displayName="Coinbase Wallet",this.proxyProvider=new a.PrivyProxyProvider(void 0,this.rpcTimeoutDuration),this.subscribeListeners(),this.connectionOptions=n.coinbaseWallet.connectionOptions??"all",this.walletClientType="smartWalletOnly"===this.connectionOptions?"coinbase_smart_wallet":"coinbase_wallet","coinbase_smart_wallet"===this.walletClientType&&(this.displayName="Coinbase Smart Wallet"),!o){let t=[r.id].concat(i.map((e=>e.id))),n="eoaOnly"!==this.connectionOptions?t.filter((e=>!c.includes(e))):[];n.length>0&&!n.every((e=>s.DEFAULT_SUPPORTED_CHAIN_IDS.has(e)))&&console.info(`The configured chains are not supported by Coinbase Smart Wallet: ${n.join(", ")}`),o=new e.CoinbaseWalletSDK({appName:h,appLogoUrl:u,appChainIds:t})}this.proxyProvider.setWalletProvider(l(o,this.connectionOptions))}}exports.CoinbaseWalletConnector=h;
