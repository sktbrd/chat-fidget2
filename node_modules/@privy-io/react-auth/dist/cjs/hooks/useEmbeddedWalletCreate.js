"use strict";var e=require("react"),r=require("../client/user.js"),t=require("../constants.js"),a=require("./internal-context.js"),s=require("./privy-context.js");require("@ethersproject/address"),require("./index.js"),exports.useCreateWallet=function(){let{getAccessToken:o}=s.usePrivyContext(),{refreshUser:i,createAnalyticsEvent:l,initializeWalletProxy:n}=a.usePrivyInternal(),d=e.useRef(!1);return{createWallet:e.useCallback((async({user:e,recoveryPassword:a})=>{let s=await o();if(!s)throw l({eventName:"embedded_wallet_creation_failed",payload:{error:"Missing access token for user."}}),Error("An error has occured, please login again.");try{l({eventName:"embedded_wallet_creation_started"});let o=await n(t.WALLET_PROXY_TIMEOUT);if(!o)throw Error("walletProxy does not exist.");let c=new Promise(((e,r)=>{setTimeout((()=>{r(Error("walletProxy.create timed out."))}),2e4)})),u=r.getPrivySolanaWallet(e);if(!await Promise.race([o.create({accessToken:s,recoveryPassword:a,recoveryMethod:a?"user-passcode":void 0,solanaAddress:u?.address}),c]))throw Error("walletProxy.create did not send a response.");let w=await i();if(!w)throw Error("Failed to refresh user.");let y=r.getPrivyEthereumWallet(w);if(!y)throw Error("Updated user is missing embedded wallet.");return l({eventName:"embedded_wallet_creation_completed",payload:{walletAddress:y.address}}),d.current=!0,y}catch(e){if(d.current)return;throw l({eventName:"embedded_wallet_creation_failed",payload:{error:e.toString()}}),console.warn(e),e}}),[])}};
