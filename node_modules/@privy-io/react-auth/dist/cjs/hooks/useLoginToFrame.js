"use strict";var e=require("react"),r=require("../auth-flows/frame.js"),t=require("../errors.js"),i=require("../lib/farcaster.js"),a=require("./internal-context.js");require("../paths.js"),require("ofetch"),require("./index.js");exports.useLoginToFrame=()=>{let{client:s,setAuthenticated:n,setUser:l}=a.usePrivyInternal();return{initLoginToFrame:e.useCallback((async()=>{let e=new r.FarcasterFramesFlow;if(!s)throw new t.PrivyClientError("Must initialize Privy client first.");return s.startAuthFlow(e),await e.init()}),[s]),loginToFrame:e.useCallback((async({message:e,signature:a})=>{if(!s)throw new t.PrivyClientError("Must initialize Privy client first.");if(!(s.authFlow instanceof r.FarcasterFramesFlow))throw new t.PrivyClientError("Must initialize Farcaster frame flow first.");let o=i.parseFidFromMessage(e);if(!o)throw new t.PrivyClientError("Invalid message format; could not parse Farcaster ID.");s.authFlow.setAuthData({message:e,signature:a,fid:o});let{user:u}=await s.authenticate();return u&&(l(u),n(!0)),u}),[s,l,n])}};
