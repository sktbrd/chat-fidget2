"use strict";var e=require("../../errors.js"),n=require("../caip2.js"),r=require("./filterSupportedOptions.js"),i=require("./moonpay/index.js"),o=require("./usdc.js");require("ofetch"),require("react"),require("../../connectors/chains/arbitrum.js"),require("../../connectors/chains/base.js"),require("../../connectors/chains/celo.js"),require("../../connectors/chains/mainnet.js"),require("../../connectors/chains/optimism.js"),require("../../connectors/chains/polygon.js"),require("../../constants.js"),require("../../hooks/internal-context.js"),require("../../hooks/index.js"),require("../../hooks/modal-context.js"),require("react/jsx-runtime"),require("../../components/PrefetchedImage.js"),require("../../configuration/context.js"),require("../../config.js"),require("../../configuration/defaultClientConfig.js"),require("../../configuration/login-methods.js"),require("../../configuration/wallets.js"),require("../../connectors/chains/index.js"),require("../../connectors/chains/arbitrumSepolia.js"),require("../../connectors/chains/avalanche.js"),require("../../connectors/chains/avalancheFuji.js"),require("../../connectors/chains/baseSepolia.js"),require("../../connectors/chains/berachainArtio.js"),require("../../connectors/chains/celoAlfajores.js"),require("../../connectors/chains/filecoin.js"),require("../../connectors/chains/filecoinCalibration.js"),require("../../connectors/chains/garnetHolesky.js"),require("../../connectors/chains/holesky.js"),require("../../connectors/chains/linea.js"),require("../../connectors/chains/lineaTestnet.js"),require("../../connectors/chains/lukso.js"),require("../../connectors/chains/optimismSepolia.js"),require("../../connectors/chains/polygonAmoy.js"),require("../../connectors/chains/redstone.js"),require("../../connectors/chains/sepolia.js"),require("../../connectors/chains/zora.js"),require("../../connectors/chains/zoraSepolia.js"),require("../../connectors/chains/zoraTestnet.js"),require("../../connectors/chains/utils.js"),require("../solana/index.js"),require("../../theme.js"),require("tinycolor2"),require("../cybr53.js"),require("../../screens/index.js"),require("./analytics.js");exports.prepareFundingModalData=({address:s,appConfig:t,fundWalletConfig:a,methodScreen:c,chainIdOverride:u,comingFromSendTransactionScreen:d=!1})=>{let l,f;if(!t.fundingConfig)throw Error("Wallet funding is not enabled");let h=r.filterSupportedOptions(t.fundingConfig.options);if(h.length<1)throw Error("Wallet funding is not enabled");l=u||(i.isNewFundWalletConfig(a)&&a.chain?a.chain.id:n.extractChainIdFromCAIP2(t.fundingConfig.defaultRecommendedCurrency.chain));let g=t.chains.find((e=>e.id===l));if(!g)throw new e.PrivyClientError(`Funding chain ${l} is not in PrivyProvider chains list`);let m=i.isNewFundWalletConfig(a)&&a.amount?a.amount:t.fundingConfig.defaultRecommendedAmount,p=!1;function q(){if(!l)return;let e=o.UsdcAddressMap[l];h.find((e=>"wallets"===e.method))&&!e&&console.warn("Attempting to fund with USDC on chain where USDC address is not known. Funding via external wallet will be disabled."),f=e,p=!0}i.isNewFundWalletConfig(a)&&"asset"in a?"USDC"===a.asset?q():"string"!=typeof a.asset&&"erc20"in a.asset&&(p=o.getIsTokenUsdc(f=a.asset.erc20,g)):"USDC"===t.fundingConfig.defaultRecommendedCurrency.asset&&q();let j=a?.defaultFundingMethod;return{chainType:"ethereum",address:s,amount:m,chain:g,erc20Address:f,erc20ContractInfo:p?{symbol:"USDC",decimals:6}:void 0,isUSDC:p,methodScreen:c,supportedOptions:h,comingFromSendTransactionScreen:d,defaultFundingMethod:j,usingDefaultFundingMethod:!!j,preferredCardProvider:a?.card?.preferredProvider,crossChainBridgingEnabled:t.fundingConfig.crossChainBridgingEnabled??!1,cluster:{name:"mainnet-beta",rpcUrl:t.solanaClusters["mainnet-beta"]},...i.isLegacyMoonpayConfig(a)?{moonpayConfigOverride:a.config}:{}}},exports.prepareSolanaFundingModalData=function({address:e,fundWalletConfig:n,appConfig:i,comingFromSendTransactionScreen:o,methodScreen:s}){if(!i.fundingConfig)throw Error("Wallet funding is not enabled");let t=r.filterSupportedOptions(i.fundingConfig.options);if(t.length<1)throw Error("Wallet funding is not enabled");let a=n?.amount??i.fundingConfig.defaultRecommendedAmount,c=n?.defaultFundingMethod;return{chainType:"solana",address:e,supportedOptions:t,amount:a,isUSDC:!1,methodScreen:s,comingFromSendTransactionScreen:o,cluster:{name:n?.cluster?.name??"mainnet-beta",rpcUrl:i.solanaClusters[n?.cluster?.name??"mainnet-beta"]},crossChainBridgingEnabled:i.fundingConfig.crossChainBridgingEnabled??!1,defaultFundingMethod:c,preferredCardProvider:n?.card?.preferredProvider,usingDefaultFundingMethod:!!c}};
