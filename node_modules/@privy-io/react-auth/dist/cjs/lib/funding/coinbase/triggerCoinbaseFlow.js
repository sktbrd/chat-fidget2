"use strict";var e=require("@privy-io/js-sdk-core"),n=require("../../../screens/index.js"),i=require("../../popup/triggerPopup.js"),r=require("./toCoinbaseBlockchainFromChainId.js");require("../../../connectors/chains/arbitrum.js"),require("../../../connectors/chains/base.js"),require("../../../connectors/chains/mainnet.js"),require("../../../connectors/chains/optimism.js"),require("../../../connectors/chains/polygon.js"),require("../../../errors.js"),require("ofetch");exports.triggerCoinbaseFlow=(a,s,o,t,c,u)=>new Promise((async(p,d)=>{let h=i.triggerPopup();if(!h)return void d(Error("Unable to initialize flow"));let l="ethereum"===s.chainType?r.toCoinbaseBlockchainFromChainId(s.chain.id):"solana",m=s.isUSDC?"USDC":"ethereum"===s.chainType?"ETH":"SOL",g=await a.initCoinbaseOnRamp({addresses:[{address:s.address,blockchains:[l]}],assets:[m]}),{url:b}=e.getCoinbaseOnRampUrl({input:g,amount:s.amount,blockchain:l,asset:m,experience:u});h.location=b.toString();let q={...c?.funding,showAlternateFundingMethod:!0};s.usingDefaultFundingMethod&&(q.usingDefaultFundingMethod=!1),o({funding:q,coinbaseOnrampStatus:{popup:h}}),t(n.ModalScreen.COINBASE_ONRAMP_STATUS_SCREEN),a.createAnalyticsEvent({eventName:"sdk_fiat_on_ramp_started",payload:{provider:"buy"===u?"coinbase-onramp":"coinbase-exchange",value:s.amount,chainType:s.chainType,chainId:"ethereum"===s.chainType?s.chain.id:s.cluster.name}}),setTimeout((()=>{o({funding:q,coinbaseOnrampStatus:{partnerUserId:g.partner_user_id,popup:h}})}),5e3),p()}));
