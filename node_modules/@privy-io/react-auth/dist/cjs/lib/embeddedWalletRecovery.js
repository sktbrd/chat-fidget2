"use strict";var e=require("../errors.js"),r=require("../paths.js"),t=require("../screens/index.js"),o=require("./pkce.js");function i({isCreatingWallet:e,skipSplashScreen:r}){return e?t.ModalScreen.EMBEDDED_WALLET_PASSWORD_CREATE_SCREEN:r?t.ModalScreen.EMBEDDED_WALLET_PASSWORD_UPDATE_SCREEN:t.ModalScreen.EMBEDDED_WALLET_PASSWORD_UPDATE_SPLASH_SCREEN}require("ofetch"),require("jose"),require("../constants.js"),require("../crypto.js"),require("../storage.js"),exports.authenticateRecovery=async function({api:t,provider:o,stateCode:i,codeVerifier:a,authorizationCode:n}){if(!n||!i)throw new e.PrivyClientError("[OAuth AuthFlow] Authorization and state codes code must be set prior to calling authenicate.");if("undefined"===n)throw new e.PrivyClientError("User denied confirmation during OAuth flow");try{return(await t.post(r.recoveryOAuthAuthenticatePath,{authorization_code:n,state_code:i,code_verifier:a,provider:o})).access_token}catch(t){let r=e.formatApiError(t);if(r.privyErrorCode)throw new e.PrivyClientError(r.message||"Invalid code during OAuth flow.",void 0,r.privyErrorCode);if("User denied confirmation during OAuth flow"===r.message)throw new e.PrivyClientError("Invalid code during oauth flow.",void 0,e.PrivyErrorCode.OAUTH_USER_DENIED);throw new e.PrivyClientError("Invalid code during OAuth flow.",void 0,e.PrivyErrorCode.UNKNOWN_AUTH_ERROR)}},exports.embeddedWalletRecoveryScreen=function(e){switch(e){case"user-passcode":return t.ModalScreen.EMBEDDED_WALLET_PASSWORD_RECOVERY_SCREEN;case"google-drive":case"icloud":return t.ModalScreen.EMBEDDED_WALLET_RECOVERY_OAUTH_SCREEN;default:throw Error("Recovery method not supported")}},exports.embeddedWalletSetPasswordScreen=i,exports.getRecoveryAuthorizationUrl=async function({api:t,provider:i}){let a=o.createCodeVerifier(),n=o.createStateCode(),d=await o.deriveCodeChallengeFromCodeVerifier(a);try{return"icloud"===i?{url:(await t.post(r.recoveryOAuthInitICloudPath,{client_type:"web"})).url}:{url:(await t.post(r.recoveryOAuthInitPath,{redirect_to:window.location.href,code_challenge:d,state_code:n})).url,codeVerifier:a,stateCode:n,provider:i}}catch(t){throw e.formatApiError(t)}},exports.toEmbeddedWalletSetRecoveryScreen=function({walletAction:e,availableRecoveryMethods:r,legacySetWalletPasswordFlow:o,isResettingPassword:a,showAutomaticRecovery:n}){return n?t.ModalScreen.EMBEDDED_WALLET_SET_AUTOMATIC_RECOVERY_SCREEN:o||1===r.length?i({isCreatingWallet:"create"===e,skipSplashScreen:a}):t.ModalScreen.EMBEDDED_WALLET_RECOVERY_SELECTION_SCREEN};
