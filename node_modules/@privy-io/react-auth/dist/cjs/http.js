"use strict";var t=require("ofetch"),e=require("./constants.js"),r=require("./errors.js"),s=require("./paths.js");let i=[s.sessionsRefreshPath,s.recoverForkedSessionsPath,s.sessionsLogoutPath,s.analyticsEventsPath];exports.Http=class{async get(t,e){try{return await this.baseFetch(t,e)}catch(t){throw r.formatApiError(t)}}async post(t,e,s){try{return await this.baseFetch(t,{method:"POST",...e?{body:e}:{},...s})}catch(t){throw r.formatApiError(t)}}async delete(t,e){try{return await this.baseFetch(t,{method:"DELETE",...e})}catch(t){throw r.formatApiError(t)}}constructor({appId:s,appClientId:a,client:o,defaults:n}){this.appId=s,this.appClientId=a,this.clientAnalyticsId=o.clientAnalyticsId,this.sdkVersion=e.VERSION,this.client=o,this.defaults=n,this.fallbackApiUrl=o.fallbackApiUrl,this.baseFetch=t.ofetch.create({baseURL:this.defaults.baseURL,timeout:this.defaults.timeout,retry:3,retryDelay:500,retryStatusCodes:[408,409,425,500,502,503,504],credentials:"include",onRequest:async({request:t,options:e})=>{let r=new Headers(e.headers);r.set("privy-app-id",this.appId),this.appClientId&&r.set("privy-client-id",this.appClientId),r.set("privy-ca-id",this.clientAnalyticsId||""),r.set("privy-client",`react-auth:${this.sdkVersion}`);let s=i.includes(t.toString());if(!r.has("authorization")){let t=await this.client.getAccessToken({disableAutoRefresh:s});null!==t&&r.set("authorization",`Bearer ${t}`)}e.headers=r,e.retryDelay&&(e.retryDelay=3*e.retryDelay)},onRequestError:({error:t})=>{if(t instanceof DOMException&&"AbortError"===t.name)throw new r.PrivyTimeoutError}})}};
