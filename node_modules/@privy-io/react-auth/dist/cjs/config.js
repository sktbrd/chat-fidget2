"use strict";var e=require("./configuration/defaultClientConfig.js"),n=require("./configuration/login-methods.js"),a=require("./configuration/wallets.js"),o=require("./connectors/chains/index.js"),t=require("./connectors/chains/mainnet.js"),i=require("./connectors/chains/utils.js"),l=require("./lib/solana/index.js"),r=require("./theme.js");function s({additionalChains:e,supportedChains:n,defaultChainFromConfig:a,hasRpcConfigDefined:l}){let r;if(e&&n&&console.warn("You should only specify one of `additionalChains` or `supportedChains`. Using `supportedChains`."),n){if(0===n.length)throw Error("`supportedChains` must contain at least one chain");n.filter((e=>e.rpcUrls.privyWalletOverride)).length>0&&l&&console.warn("You have specified at least one `supportedChain` with `privyWalletOverride` but also have `rpcConfig` defined. The `rpcConfig` will be ignored. `rpcConfig` is deprecated and you should use `privyWalletOverride` in a `supportedChain`."),r=n.map((e=>{if(e.rpcUrls.privyWalletOverride)return e;let n=o.DEFAULT_SUPPORTED_CHAINS.find((n=>n.id===e.id)),a=n?.rpcUrls.privy?.http[0];return a?i.addPrivyRpcToChain(e,a):e}))}else r=o.DEFAULT_SUPPORTED_CHAINS.concat(e??[]);let s=n?r[0]:t.mainnet,d=a??s;if(!r.find((e=>e.id===d.id)))throw Error("`defaultChain` must be included in `supportedChains`");return{chains:r,defaultChain:d}}require("./constants.js"),require("./connectors/chains/arbitrum.js"),require("./connectors/chains/arbitrumSepolia.js"),require("./connectors/chains/avalanche.js"),require("./connectors/chains/avalancheFuji.js"),require("./connectors/chains/base.js"),require("./connectors/chains/baseSepolia.js"),require("./connectors/chains/berachainArtio.js"),require("./connectors/chains/celo.js"),require("./connectors/chains/celoAlfajores.js"),require("./connectors/chains/filecoin.js"),require("./connectors/chains/filecoinCalibration.js"),require("./connectors/chains/garnetHolesky.js"),require("./connectors/chains/holesky.js"),require("./connectors/chains/linea.js"),require("./connectors/chains/lineaTestnet.js"),require("./connectors/chains/lukso.js"),require("./connectors/chains/optimism.js"),require("./connectors/chains/optimismSepolia.js"),require("./connectors/chains/polygon.js"),require("./connectors/chains/polygonAmoy.js"),require("./connectors/chains/redstone.js"),require("./connectors/chains/sepolia.js"),require("./connectors/chains/zora.js"),require("./connectors/chains/zoraSepolia.js"),require("./connectors/chains/zoraTestnet.js"),require("tinycolor2"),exports.buildChainsAndDefaultChain=s,exports.generateAppConfig=function(o,t,i){let d,c,u,h,g,p,f,C,m,y,b,w,A,W,q,O,j=i?console.warn:()=>{};t?.loginMethods?(d=t.loginMethods.includes("email"),c=t.loginMethods.includes("sms"),h=t.loginMethods.includes("wallet"),g=t.loginMethods.includes("google"),p=t.loginMethods.includes("twitter"),f=t.loginMethods.includes("discord"),m=t.loginMethods.includes("spotify"),y=t.loginMethods.includes("instagram"),C=t.loginMethods.includes("tiktok"),w=t.loginMethods.includes("github"),b=t.loginMethods.includes("linkedin"),A=t.loginMethods.includes("apple"),W=t.loginMethods.includes("farcaster"),q=t.loginMethods.includes("telegram")):(d=o.emailAuth,c=o.smsAuth,h=o.walletAuth||o.solanaWalletAuth,g=o.googleOAuth,p=o.twitterOAuth,f=o.discordOAuth,w=o.githubOAuth,m=o.spotifyOAuth,y=o.instagramOAuth,C=o.tiktokOAuth,b=o.linkedinOAuth,A=o.appleOAuth,W=o.farcasterAuth,q=o.telegramAuth),"undefined"!=typeof window&&"function"!=typeof window.PublicKeyCredential?u=!1:o.passkeyAuth&&(u=!0);let M=[d,c].filter(Boolean),v=[g,p,f,w,m,y,C,b,A,W,q].filter(Boolean),U=[h].filter(Boolean);if(M.length+v.length+U.length===0)throw Error("You must enable at least one login method");let P=void 0!==t?.appearance?.showWalletLoginFirst?t?.appearance?.showWalletLoginFirst:o.showWalletLoginFirst;P&&0===U.length?(j("You should only enable `showWalletLoginFirst` when `wallet` logins are also enabled. `showWalletLoginFirst` has been set to false"),P=!1):P||v.length+M.length!==0||(j("You should only disable `showWalletLoginFirst` when `email`, `sms`, or social logins are also enabled. `showWalletLoginFirst` has been set to true"),P=!0);let T=t?.externalWallets?.walletConnect?.enabled??!0;t?.loginMethods&&t.loginMethodsAndOrder&&j("You should only configure one of `loginMethods` or `loginMethodsAndOrder`");let S=a.toWalletListConfig({input:t?.appearance?.walletList,overrides:t?.loginMethodsAndOrder}),E=n.toCustomLoginMethodConfig({input:t?.loginMethodsAndOrder}),x=t?.intl?.defaultCountry??"US",{chains:L,defaultChain:k}=s({additionalChains:t?.additionalChains,supportedChains:t?.supportedChains,defaultChainFromConfig:t?.defaultChain,hasRpcConfigDefined:Object.keys(t?.rpcConfig?.rpcUrls??{}).length>0}),F=!!t?.defaultChain,R=t?.customAuth?.getCustomAccessToken&&!1!==t?.customAuth?.enabled,_=!(o.enforceWalletUis??1);if(O=o.legacyWalletUiConfig??1?R?t?.embeddedWallets?.noPromptOnSignature??!0:t?.embeddedWallets?.noPromptOnSignature??_:_,!1===t?.embeddedWallets?.waitForTransactionConfirmation&&!0!==O)throw Error("Overriding `config.embeddedWallets.waitForTransactionConfirmation` requires that you disable wallet UIs in the dashboard.");let{requireUserPasswordOnCreate:D,...I}=t?.embeddedWallets??{},N=t?.solanaClusters??[];return o.solanaWalletAuth&&!t?.externalWallets?.solana?.connectors&&console.warn("App configuration has Solana wallet login enabled, but no Solana wallet connectors have been passed to Privy. Make sure to pass Solana connectors to the `config.externalWallets.solana.connectors` field of the `PrivyProvider`"),{id:o.id,name:o.name,allowlistConfig:o.allowlistConfig,legacyWalletUiConfig:o.legacyWalletUiConfig,appearance:{logo:t?.appearance?.logo??o.logoUrl,landingHeader:t?.appearance?.landingHeader??e.defaultClientConfig.appearance.landingHeader,loginMessage:"string"==typeof t?.appearance?.loginMessage?t?.appearance?.loginMessage.slice(0,100):t?.appearance?.loginMessage,palette:r.generatePalette({backgroundTheme:t?.appearance?.theme??e.defaultClientConfig.appearance.theme,accentHex:t?.appearance?.accentColor??o.accentColor??e.defaultClientConfig.appearance.accentColor}),loginGroupPriority:P?"web3-first":"web2-first",hideDirectWeb2Inputs:!!t?.appearance?.hideDirectWeb2Inputs,walletList:S,walletChainType:t?.appearance?.walletChainType??(({evmWalletAuth:e,solanaWalletAuth:n})=>e&&n?"ethereum-and-solana":e?"ethereum-only":n?"solana-only":"ethereum-only")({evmWalletAuth:o.walletAuth??!1,solanaWalletAuth:o.solanaWalletAuth??!1})},loginMethods:{wallet:h,email:d,sms:c,passkey:u,google:g,twitter:p,discord:f,github:w,spotify:m,instagram:y,tiktok:C,linkedin:b,apple:A,farcaster:W,telegram:q},disablePlusEmails:o.disablePlusEmails,loginMethodsAndOrder:E,legal:{termsAndConditionsUrl:t?.legal?.termsAndConditionsUrl??o.termsAndConditionsUrl,privacyPolicyUrl:t?.legal?.privacyPolicyUrl??o.privacyPolicyUrl,requireUsersAcceptTerms:o.requireUsersAcceptTerms??!1},walletConnectCloudProjectId:t?.walletConnectCloudProjectId??o.walletConnectCloudProjectId??e.defaultClientConfig.walletConnectCloudProjectId,rpcConfig:{rpcUrls:t?.rpcConfig?.rpcUrls??e.defaultClientConfig.rpcConfig.rpcUrls,rpcTimeouts:t?.rpcConfig?.rpcTimeouts??e.defaultClientConfig.rpcConfig.rpcTimeouts},chains:L,solanaClusters:{"mainnet-beta":N.find((e=>"mainnet-beta"===e.name))?.rpcUrl||l.SOLANA_MAINNET_RPC_URL,testnet:N.find((e=>"testnet"===e.name))?.rpcUrl||l.SOLANA_TESTNET_RPC_URL,devnet:N.find((e=>"devnet"===e.name))?.rpcUrl||l.SOLANA_DEVNET_RPC_URL},defaultChain:k,intl:{defaultCountry:x},shouldEnforceDefaultChainOnConnect:F,captchaEnabled:o.captchaEnabled??e.defaultClientConfig.captchaEnabled,captchaSiteKey:o.captchaSiteKey,externalWallets:{coinbaseWallet:{connectionOptions:t?.externalWallets?.coinbaseWallet?.connectionOptions??e.defaultClientConfig.externalWallets.coinbaseWallet.connectionOptions},walletConnect:{enabled:T},solana:{connectors:t?.externalWallets?.solana?.connectors}},embeddedWallets:{...o.embeddedWalletConfig,..."boolean"==typeof D?{requireUserOwnedRecoveryOnCreate:D}:{},...R?{createOnLogin:"all-users",requireUserOwnedRecoveryOnCreate:!1,userOwnedRecoveryOptions:["user-passcode"]}:{},waitForTransactionConfirmation:!0,priceDisplay:{primary:"fiat-currency",secondary:"native-token"},...I,noPromptOnSignature:O,showWalletUIs:t?.embeddedWallets?.showWalletUIs,extendedCalldataDecoding:t?.embeddedWallets?.extendedCalldataDecoding},mfa:{methods:o.mfaMethods??[],noPromptOnMfaRequired:t?.mfa?.noPromptOnMfaRequired??!1},customAuth:R?{enabled:!0,...t.customAuth}:void 0,loginConfig:{telegramAuthConfiguration:o.telegramAuthConfiguration},headless:!!t?.headless,render:{standalone:t?._render?.standalone??e.defaultClientConfig._render.standalone},fundingConfig:o.fundingConfig,fundingMethodConfig:{...t?.fundingMethodConfig??e.defaultClientConfig.fundingMethodConfig,moonpay:{...t?.fundingMethodConfig?.moonpay??e.defaultClientConfig.fundingMethodConfig.moonpay,useSandbox:t?.fundingMethodConfig?.moonpay.useSandbox??t?.fiatOnRamp?.useSandbox??e.defaultClientConfig.fundingMethodConfig.moonpay.useSandbox}}}},exports.generateClientConfigAnalyticsPayload=function(e,n){if(!e)return{legacyCreateEmbeddedWalletFlag:n};let{appearance:a,additionalChains:o,supportedChains:t,defaultChain:i,externalWallets:l,...r}=e;return{...r,...o?{additionalChains:o.map((e=>e.id))}:void 0,...t?{supportedChains:t.map((e=>e.id))}:void 0,...i?{defaultChain:i.id}:void 0,...l?{walletConnect:l.walletConnect,coinbaseWallet:l.coinbaseWallet,solana:{connectors:l.solana?.connectors?.get().map((e=>e.walletClientType))}}:void 0,legacyCreateEmbeddedWalletFlag:n}};
