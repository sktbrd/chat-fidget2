"use strict";var e=require("@ethersproject/address");function t(e){return e?new Date(1e3*e):null}function i(e,t){return e.slice().sort(((e,t)=>(t.firstVerifiedAt??t.verifiedAt).getTime()-(e.firstVerifiedAt??e.verifiedAt).getTime())).find((e=>e.type===t))}const r=e=>e?.linkedAccounts.find((e=>"wallet"===e.type&&"privy"===e.walletClientType&&!e.imported&&"ethereum"===e.chainType&&0===e.walletIndex))||null,a=e=>(e?.linkedAccounts??[]).filter((e=>"wallet"===e.type&&"privy"===e.walletClientType&&!e.imported&&"ethereum"===e.chainType)),s=(e,t)=>(e?.linkedAccounts??[]).filter((e=>"wallet"===e.type&&"privy"===e.walletClientType&&e.chainType===t)),l=e=>(e?.linkedAccounts??[]).filter((e=>"wallet"===e.type&&"privy"===e.walletClientType&&!e.imported&&"solana"===e.chainType)),d=e=>e?.linkedAccounts.find((e=>"wallet"===e.type&&"privy"===e.walletClientType&&!e.imported&&"solana"===e.chainType&&0===e.walletIndex))||null,n=e=>r(e)??d(e),f=e=>{if("ethereum"===e.chainType)return{entropyId:e.address,entropyIdVerifier:"ethereum-address-verifier"};if("solana"===e.chainType)return{entropyId:e.address,entropyIdVerifier:"solana-address-verifier"};throw Error("Failed to get account entropy details")};exports.convertUserResponseToUser=function(e){if(!e)return null;let r=function(e){let i=[];for(let r of e){let e=r.type;switch(r.type){case"wallet":let a={address:r.address,type:r.type,imported:r.imported,delegated:r.delegated,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at),chainType:r.chain_type,chainId:r.chain_id,walletClient:"privy"===r.wallet_client_type?"privy":"unknown",walletClientType:r.wallet_client_type,connectorType:r.connector_type,recoveryMethod:r.recovery_method,walletIndex:r.wallet_index};i.push(a);break;case"smart_wallet":let s={address:r.address,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at),smartWalletType:r.smart_wallet_type};i.push(s);break;case"cross_app":let l={type:r.type,subject:r.subject,embeddedWallets:r.embedded_wallets,smartWallets:r.smart_wallets,providerApp:{id:r.provider_app_id},verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(l);break;case"email":let d={address:r.address,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(d);break;case"phone":let n={number:r.phoneNumber,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(n);break;case"google_oauth":let f={subject:r.subject,email:r.email,name:r.name,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(f);break;case"spotify_oauth":let p={subject:r.subject,email:r.email,name:r.name,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(p);break;case"instagram_oauth":let o={subject:r.subject,username:r.username,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(o);break;case"twitter_oauth":let u={subject:r.subject,username:r.username,name:r.name,type:r.type,profilePictureUrl:r.profile_picture_url,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(u);break;case"discord_oauth":let c={subject:r.subject,username:r.username,email:r.email,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(c);break;case"github_oauth":let m={subject:r.subject,username:r.username,name:r.name,email:r.email,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(m);break;case"tiktok_oauth":let _={subject:r.subject,username:r.username,name:r.name,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(_);break;case"linkedin_oauth":let y={subject:r.subject,name:r.name,email:r.email,vanityName:r.vanity_name,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(y);break;case"apple_oauth":let v={subject:r.subject,email:r.email,type:r.type,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(v);break;case"custom_auth":i.push({type:r.type,customUserId:r.custom_user_id,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)});break;case"farcaster":let h={type:r.type,fid:r.fid,ownerAddress:r.owner_address,displayName:r.display_name,username:r.username,bio:r.bio,pfp:r.profile_picture_url,url:r.homepage_url,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at),signerPublicKey:r.signer_public_key};i.push(h);break;case"passkey":let A={type:r.type,enrolledInMfa:r.enrolled_in_mfa,credentialId:r.credential_id,authenticatorName:r.authenticator_name,createdWithDevice:r.created_with_device,createdWithOs:r.created_with_os,createdWithBrowser:r.created_with_browser,verifiedAt:t(r.verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(A);break;case"telegram":let b={type:r.type,telegramUserId:r.telegram_user_id,firstName:r.first_name,lastName:r.last_name,username:r.username,photoUrl:r.photo_url,verifiedAt:t(r.first_verified_at),firstVerifiedAt:t(r.first_verified_at),latestVerifiedAt:t(r.latest_verified_at)};i.push(b);break;default:console.warn(`Unrecognized account type: ${e}. Please consider upgrading the Privy SDK.`)}}return i}(e.linked_accounts),a=i(r,"wallet"),s=i(r,"smart_wallet"),l=i(r,"email"),d=i(r,"phone"),n=i(r,"google_oauth"),f=i(r,"twitter_oauth"),p=i(r,"discord_oauth"),o=i(r,"github_oauth"),u=i(r,"spotify_oauth"),c=i(r,"instagram_oauth"),m=i(r,"tiktok_oauth"),_=i(r,"linkedin_oauth"),y=i(r,"apple_oauth"),v=i(r,"farcaster"),h=i(r,"telegram"),A=e.mfa_methods.map((({type:e,verified_at:i})=>({type:e,verifiedAt:t(i)})));return{id:e.id,createdAt:t(e.created_at),linkedAccounts:r,email:l&&{address:l?.address},phone:d&&{number:d?.number},wallet:a&&{address:a.address,chainType:a.chainType,chainId:a.chainId,walletClient:a.walletClient,walletClientType:a.walletClientType,connectorType:a.connectorType,recoveryMethod:a.recoveryMethod,imported:a.imported,delegated:a.delegated,walletIndex:a.walletIndex},smartWallet:s&&{address:s.address,smartWalletType:s.smartWalletType},google:n&&{subject:n.subject,email:n.email,name:n.name},twitter:f&&{subject:f.subject,username:f.username,name:f.name,profilePictureUrl:f.profilePictureUrl},discord:p&&{subject:p.subject,username:p.username,email:p.email},github:o&&{subject:o.subject,username:o.username,name:o.name,email:o.email},spotify:u&&{subject:u.subject,email:u.email,name:u.name},instagram:c&&{subject:c.subject,username:c.username},tiktok:m&&{subject:m.subject,username:m.username,name:m.name},linkedin:_&&{subject:_.subject,name:_.name,email:_.email,vanityName:_.vanityName},apple:y&&{subject:y.subject,email:y.email},farcaster:v&&{fid:v.fid,ownerAddress:v.ownerAddress,displayName:v.displayName,username:v.username,bio:v.bio,pfp:v.pfp,url:v.url,signerPublicKey:v.signerPublicKey},telegram:h&&{telegramUserId:h.telegramUserId,firstName:h.firstName,lastName:h.lastName,username:h.username,photoUrl:h.photoUrl},delegatedWallets:[],mfaMethods:A.map((e=>e.type)),hasAcceptedTerms:e.has_accepted_terms??!1,isGuest:e.is_guest,customMetadata:e.custom_metadata}},exports.getAllPrivyWalletsForChainType=s,exports.getEntropyDetailsFromAccount=f,exports.getEntropyDetailsFromUser=e=>{let t=n(e);if(!t)throw Error("Failed to find primary wallet");return f(t)},exports.getEthereumSigningAndRootWallet=(t,i)=>{let a=s(t,"ethereum").find((t=>e.getAddress(t.address)===e.getAddress(i)));return{signingWallet:a,rootWallet:a?a.imported?a:r(t):void 0}},exports.getImportedPrivyEthereumWallet=e=>e?.linkedAccounts.find((e=>"wallet"===e.type&&"privy"===e.walletClientType&&e.imported&&"ethereum"===e.chainType))||null,exports.getImportedPrivySolanaWallet=e=>e?.linkedAccounts.find((e=>"wallet"===e.type&&e.imported&&"privy"===e.walletClientType&&"solana"===e.chainType))||null,exports.getLatestPrivyEthereumWallet=e=>a(e).reduce(((e,t)=>!e||e.walletIndex<t.walletIndex?t:e),null),exports.getLatestPrivySolanaWallet=e=>l(e).reduce(((e,t)=>!e||e.walletIndex<t.walletIndex?t:e),null),exports.getPrivyEthereumHDWallets=a,exports.getPrivyEthereumWallet=r,exports.getPrivyPrimaryWallet=n,exports.getPrivySolanaHDWallets=l,exports.getPrivySolanaWallet=d,exports.getPrivyWalletWithAddress=(e,t)=>e?.linkedAccounts.find((e=>"wallet"===e.type&&"privy"===e.walletClientType&&e.address===t))||null,exports.getSolanaSigningAndRootWallet=(e,t)=>{let i=s(e,"solana").find((e=>e.address===t));return i?i.imported||0===i.walletIndex?{signingWallet:i,rootWallet:i}:{signingWallet:i,rootWallet:d(e)}:{}},exports.shouldProceedtoEmbeddedWalletCreationFlow=(e,t)=>!(r(e)||d(e)||"all-users"!==t&&("users-without-wallets"!==t||(e=>e.linkedAccounts.filter((e=>"wallet"===e.type)))(e)?.length));
