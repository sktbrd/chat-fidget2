"use strict";var e=require("react/jsx-runtime"),r=require("../index.js"),n=require("@heroicons/react/24/outline/CheckCircleIcon"),i=require("react"),o=require("viem"),s=require("../../components/Layouts.js"),t=require("../../components/ModalFooter.js"),a=require("../../components/ScreenHeader.js"),c=require("../../components/embedded-wallets/FundWalletMethodHeader.js"),u=require("../../components/primitives/NeutralSpinner/index.js"),l=require("../../constants.js"),d=require("../../errors.js"),j=require("../../hooks/internal-context.js"),q=require("../../hooks/modal-context.js"),h=require("../../lib/external-wallets/displayHelpers.js"),p=require("../../lib/funding/analytics.js"),g=require("../../lib/funding/reservoir.js"),m=require("../../lib/solana/index.js"),v=require("../../plugins/context/PrivyPluginContext.js"),f=require("../../plugins/solana-funding/id.js"),y=require("../../utils/index.js"),S=require("./TransferOrBridgeLoadingScreen.js"),C=require("../../hooks/useSolanaWallets.js");function E(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("styled-components"),require("../../svg/protected-by-privy.js"),require("../../components/ModalHeader.js"),require("@heroicons/react/24/outline/ArrowLeftIcon"),require("@heroicons/react/24/outline/ArrowRightIcon"),require("@heroicons/react/24/outline/QuestionMarkCircleIcon"),require("@heroicons/react/24/outline/XMarkIcon"),require("../../configuration/context.js"),require("../../config.js"),require("../../configuration/defaultClientConfig.js"),require("../../configuration/login-methods.js"),require("../../configuration/wallets.js"),require("../../connectors/chains/index.js"),require("../../connectors/chains/arbitrum.js"),require("../../connectors/chains/arbitrumSepolia.js"),require("../../connectors/chains/avalanche.js"),require("../../connectors/chains/avalancheFuji.js"),require("../../connectors/chains/base.js"),require("../../connectors/chains/baseSepolia.js"),require("../../connectors/chains/berachainArtio.js"),require("../../connectors/chains/celo.js"),require("../../connectors/chains/celoAlfajores.js"),require("../../connectors/chains/filecoin.js"),require("../../connectors/chains/filecoinCalibration.js"),require("../../connectors/chains/garnetHolesky.js"),require("../../connectors/chains/holesky.js"),require("../../connectors/chains/linea.js"),require("../../connectors/chains/lineaTestnet.js"),require("../../connectors/chains/lukso.js"),require("../../connectors/chains/mainnet.js"),require("../../connectors/chains/optimism.js"),require("../../connectors/chains/optimismSepolia.js"),require("../../connectors/chains/polygon.js"),require("../../connectors/chains/polygonAmoy.js"),require("../../connectors/chains/redstone.js"),require("../../connectors/chains/sepolia.js"),require("../../connectors/chains/zora.js"),require("../../connectors/chains/zoraSepolia.js"),require("../../connectors/chains/zoraTestnet.js"),require("../../connectors/chains/utils.js"),require("../../theme.js"),require("tinycolor2"),require("../../lib/cybr53.js"),require("../../hooks/index.js"),require("ofetch"),require("../../components/PrefetchedImage.js"),require("../../svg/brave-browser-icon.js"),require("../../svg/bybit.js"),require("../../svg/coinbase-wallet.js"),require("../../svg/cryptocom.js"),require("../../svg/metamask.js"),require("../../svg/phantom.js"),require("../../svg/rabby.js"),require("../../svg/rainbow.js"),require("../../svg/safe.js"),require("../../svg/uniswap.js"),require("../../svg/universal-profile.js"),require("../../svg/wallet-connect.js"),require("../../svg/zerion.js"),require("@ethersproject/providers"),require("../../connectors/get-legacy-injected-providers.js"),require("../../connectors/is-wallet-installed.js"),require("../../components/external-wallets/InjectedWalletIcon.js"),require("@heroicons/react/24/outline/WalletIcon"),require("../../components/ui/layout/Row.js"),require("../../components/ui/typography/LabelSm.js"),require("../../components/ui/typography/Value.js"),require("../../components/ui/animation/LoadingSkeleton.js"),require("../../components/ui/wallet/Address.js"),require("@heroicons/react/24/outline/CheckIcon"),require("@heroicons/react/24/outline/Square2StackIcon"),require("../../components/ui/wallet/NetworkIcon.js"),require("@heroicons/react/24/outline/GlobeAltIcon"),require("../../components/ui/icons/Arbitum.js"),require("../../components/ui/icons/Avalanche.js"),require("../../components/ui/icons/Base.js"),require("../../components/ui/icons/Celo.js"),require("../../components/ui/icons/Linea.js"),require("../../components/ui/icons/Mainnnet.js"),require("../../components/ui/icons/Optimism.js"),require("../../components/ui/icons/Polygon.js"),require("../../components/ui/icons/Solana.js"),require("../../components/ui/icons/Zora.js"),require("../../client/user.js"),require("@ethersproject/address"),require("../../hooks/privy-context.js"),require("../../hooks/useWallets.js");var A=/*#__PURE__*/E(n);exports.AwaitingSolToEvmBridgingScreen=function(){let{closePrivyModal:n,createAnalyticsEvent:E}=j.usePrivyInternal(),{navigate:I,setModalData:N,app:w,data:T}=q.usePrivyModal(),{wallets:b}=C.useSolanaWallets(),_=i.useRef(!1),x=v.usePlugins(),[R,P]=i.useState(!1),[L,F]=i.useState(!1),[U,k]=i.useState(null);if(!T?.funding||"ethereum"!==T.funding.chainType)throw Error("Invalid funding data");let{amount:O,connectedWalletAddress:M,chain:D,cluster:W,isUSDC:B}=T.funding,H=T.funding.address,$=T.funding.erc20Address,G=T.funding.isUSDC?"USDC":D.nativeCurrency.symbol,Y=W??{name:"mainnet-beta"},z=M?b.find((({address:e})=>e===M)):b[0];if(i.useEffect((()=>{(async function(){if(!z||!D||_.current)return;let e=x(f.SOLANA_FUNDING_PLUGIN_ID);if(!e)return void k(new d.PrivyClientError("Unable to solana plugin"));_.current=!0,D?.testnet&&console.warn("Solana testnets are not supported for bridging");let r=B?1e6*parseFloat(O):o.parseEther(O),n=await g.getQuote({isTestnet:!!D.testnet,input:g.toGetQuoteInput({amount:r.toString(),user:z.address,recipient:H,destinationChainId:D.id,originChainId:m.RELAY_SOLANA_MAINNET_CLUSTER_CHAIN_ID,originCurrency:B?m.RELAY_SOLANA_USDC_TOKEN_ID:m.RELAY_SOLANA_NATIVE_CURRENCY_ID,destinationCurrency:B?$:void 0})}).catch(console.error);if(!n)return void k(new d.PrivyClientError(`Unable to fetch quotes for bridging. Wallet ${y.formatSolanaWalletAddress(z.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE));let i=await e.createBridgeTransactionFromRelayQuote({quote:n,from:z.address,cluster:Y});if(i)try{P(!0);let{connection:e,transaction:o}=i,s=await e.simulateTransaction(o);if(s.value.err)return s.value.logs?.find((e=>/insufficient (lamports|funds)/gi.test(e)))?void k(new d.PrivyClientError(`Wallet ${y.formatSolanaWalletAddress(z?.address)} does not have enough funds. ${n.details.currencyIn.amountFormatted} ${G} are needed to complete the transaction.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE)):(console.error("Transaction failed:",s.value.err),void k(new d.PrivyClientError("Something went wrong",void 0,d.PrivyErrorCode.TRANSACTION_FAILURE)));let t=await z.sendTransaction(o,e),a=await e.confirmTransaction(t);if(a.value.err)return console.error("Transaction failed:",a.value.err),void k(new d.PrivyClientError("Something went wrong",void 0,d.PrivyErrorCode.TRANSACTION_FAILURE));E({eventName:p.ON_RAMP_COMPLETE_ANALYTICS_EVENT,payload:{provider:"external",status:"success",address:z.address,chainId:D.id,value:r.toString(),txHash:t}}),F(!0)}catch(e){if(console.error(e),/user rejected the request/gi.test(e.message||""))return void k(new d.PrivyClientError("Transaction was rejected by the user",void 0,d.PrivyErrorCode.TRANSACTION_FAILURE));k(new d.PrivyClientError("Something went wrong",void 0,d.PrivyErrorCode.TRANSACTION_FAILURE))}else k(new d.PrivyClientError(`Unable to select bridge option from quotes. Wallet ${y.formatSolanaWalletAddress(z.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE))})().catch(console.error)}),[]),i.useEffect((()=>{if(!L)return;let e=setTimeout(n,l.DEFAULT_SUCCESS_SCREEN_EXTRA_LONG_DURATION_MS);return()=>clearTimeout(e)}),[L]),i.useEffect((()=>{if(!U)return;let e={error:U,previousScreen:r.ModalScreen.FUNDING_TRANSFER_FROM_WALLET_SCREEN};N({funding:T?.funding,sendTransaction:T?.sendTransaction,errorModalData:e}),I(r.ModalScreen.ERROR_SCREEN,!1)}),[U]),L/*#__PURE__*/)return e.jsxs(e.Fragment,{children:[/*#__PURE__*/e.jsx(c.default,{}),/*#__PURE__*/e.jsx(s.RefactorSpacerTop,{}),/*#__PURE__*/e.jsxs(s.CenteredItemWithGap,{children:[/*#__PURE__*/e.jsx(A.default,{color:"var(--privy-color-success)",width:"64px",height:"64px"}),/*#__PURE__*/e.jsx(a.CenteredScreenHeader,{title:"Success!",description:`Youâ€™ve successfully added ${O} ${G} to your ${w.name} wallet. It may take a minute before the funds are available to use.`})]}),/*#__PURE__*/e.jsx(s.RefactorSpacerBottom,{}),/*#__PURE__*/e.jsx(t.BlobbyFooter,{})]});if(R&&z){let r=z?h.toDisplayName(z.walletClientType,z.connectorType,z.walletClientType)||"wallet":null;/*#__PURE__*/return e.jsx(S.TransferOrBridgeLoadingScreen,{wallet:z,displayName:r,addressToFund:H,isBridging:R,isErc20Flow:!1,chainId:D.id,chainName:D.name,totalPriceInUsd:void 0,totalPriceInNativeCurrency:void 0,gasPriceInUsd:void 0,gasPriceInNativeCurrency:void 0})}/*#__PURE__*/
return e.jsxs(e.Fragment,{children:[/*#__PURE__*/e.jsx(c.default,{}),/*#__PURE__*/e.jsx(u.NeutralSpinner,{}),/*#__PURE__*/e.jsx("div",{style:{marginTop:"1rem"}}),/*#__PURE__*/e.jsx(t.BlobbyFooter,{})]})};
