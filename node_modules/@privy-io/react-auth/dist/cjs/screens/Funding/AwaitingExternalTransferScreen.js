"use strict";var e=require("react/jsx-runtime"),r=require("@heroicons/react/24/outline/CheckCircleIcon"),n=require("react"),i=require("viem"),t=require("../../components/Layouts.js"),o=require("../../components/ModalFooter.js"),s=require("../../components/ScreenHeader.js"),a=require("../../components/embedded-wallets/FundWalletMethodHeader.js"),c=require("../../components/primitives/NeutralSpinner/index.js"),u=require("../../connectors/chains/utils.js"),l=require("../../constants.js"),d=require("../../errors.js"),h=require("../../hooks/internal-context.js"),q=require("../../hooks/modal-context.js"),g=require("../../hooks/useGetTokenPrice.js"),j=require("../../hooks/useWallets.js"),p=require("../../lib/erc20/actions/abis/transfer.js"),m=require("../../lib/erc20/formatErc20TokenAmount.js"),f=require("../../lib/ethers.js"),v=require("../../lib/external-wallets/displayHelpers.js"),y=require("../../lib/funding/analytics.js"),C=require("../../lib/funding/reservoir.js"),S=require("../../lib/wallets/actions/getBalanceForChains.js"),b=require("../../lib/wallets/actions/getErc20Balance.js"),E=require("../../utils/index.js"),w=require("../index.js"),I=require("./BridgeNetworkSelectionView.js"),T=require("./TransferOrBridgeLoadingScreen.js");function A(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("styled-components"),require("../../svg/protected-by-privy.js"),require("../../components/ModalHeader.js"),require("@heroicons/react/24/outline/ArrowLeftIcon"),require("@heroicons/react/24/outline/ArrowRightIcon"),require("@heroicons/react/24/outline/QuestionMarkCircleIcon"),require("@heroicons/react/24/outline/XMarkIcon"),require("../../configuration/context.js"),require("../../config.js"),require("../../configuration/defaultClientConfig.js"),require("../../configuration/login-methods.js"),require("../../configuration/wallets.js"),require("../../connectors/chains/index.js"),require("../../connectors/chains/arbitrum.js"),require("../../connectors/chains/arbitrumSepolia.js"),require("../../connectors/chains/avalanche.js"),require("../../connectors/chains/avalancheFuji.js"),require("../../connectors/chains/base.js"),require("../../connectors/chains/baseSepolia.js"),require("../../connectors/chains/berachainArtio.js"),require("../../connectors/chains/celo.js"),require("../../connectors/chains/celoAlfajores.js"),require("../../connectors/chains/filecoin.js"),require("../../connectors/chains/filecoinCalibration.js"),require("../../connectors/chains/garnetHolesky.js"),require("../../connectors/chains/holesky.js"),require("../../connectors/chains/linea.js"),require("../../connectors/chains/lineaTestnet.js"),require("../../connectors/chains/lukso.js"),require("../../connectors/chains/mainnet.js"),require("../../connectors/chains/optimism.js"),require("../../connectors/chains/optimismSepolia.js"),require("../../connectors/chains/polygon.js"),require("../../connectors/chains/polygonAmoy.js"),require("../../connectors/chains/redstone.js"),require("../../connectors/chains/sepolia.js"),require("../../connectors/chains/zora.js"),require("../../connectors/chains/zoraSepolia.js"),require("../../connectors/chains/zoraTestnet.js"),require("../../lib/solana/index.js"),require("../../theme.js"),require("tinycolor2"),require("../../lib/cybr53.js"),require("../../hooks/index.js"),require("ofetch"),require("../../components/PrefetchedImage.js"),require("../../hooks/useGetSolPrice.js"),require("@ethersproject/bignumber"),require("@ethersproject/units"),require("@privy-io/js-sdk-core"),require("@ethersproject/providers"),require("../../connectors/get-legacy-injected-providers.js"),require("../../connectors/is-wallet-installed.js"),require("../../svg/brave-browser-icon.js"),require("../../svg/bybit.js"),require("../../svg/coinbase-wallet.js"),require("../../svg/cryptocom.js"),require("../../svg/metamask.js"),require("../../svg/phantom.js"),require("../../svg/rabby.js"),require("../../svg/rainbow.js"),require("../../svg/safe.js"),require("../../svg/uniswap.js"),require("../../svg/universal-profile.js"),require("../../svg/wallet-connect.js"),require("../../svg/zerion.js"),require("../../components/Button.js"),require("../../components/Loader.js"),require("../../components/ui/layout/Row.js"),require("../../components/ui/typography/ErrorMessage.js"),require("../../components/ui/typography/LabelSm.js"),require("../../components/ui/typography/Subtitle.js"),require("../../components/ui/typography/Title.js"),require("../../components/ui/wallet/NetworkBalanceCard.js"),require("@heroicons/react/24/outline/WalletIcon"),require("../../components/ui/chips/Chip.js"),require("../../components/ui/animation/LoadingSkeleton.js"),require("../../components/ui/typography/Value.js"),require("../../components/ui/wallet/NetworkIcon.js"),require("@heroicons/react/24/outline/GlobeAltIcon"),require("../../components/ui/icons/Arbitum.js"),require("../../components/ui/icons/Avalanche.js"),require("../../components/ui/icons/Base.js"),require("../../components/ui/icons/Celo.js"),require("../../components/ui/icons/Linea.js"),require("../../components/ui/icons/Mainnnet.js"),require("../../components/ui/icons/Optimism.js"),require("../../components/ui/icons/Polygon.js"),require("../../components/ui/icons/Solana.js"),require("../../components/ui/icons/Zora.js"),require("../../components/ui/wallet/shared.js"),require("../../components/ui/wallet/NetworkSelectorPanel.js"),require("@headlessui/react"),require("@heroicons/react/24/outline/ChevronDownIcon"),require("./styles.js"),require("../LinkPasskeyScreen.js"),require("@heroicons/react/24/outline/ClockIcon"),require("@heroicons/react/24/outline/TrashIcon"),require("@heroicons/react/24/solid/CheckBadgeIcon"),require("@heroicons/react/24/solid/LockClosedIcon"),require("../../hooks/privy-context.js"),require("../../svg/face-id.js"),require("../../svg/fingerprint.js"),require("../MfaScreens/StyledComponents.js"),require("../../components/external-wallets/InjectedWalletIcon.js"),require("../../components/ui/wallet/Address.js"),require("@heroicons/react/24/outline/CheckIcon"),require("@heroicons/react/24/outline/Square2StackIcon");var N=/*#__PURE__*/A(r);exports.AwaitingExternalTransferScreen=()=>{let{rpcConfig:r,appId:A,closePrivyModal:x,createAnalyticsEvent:F}=h.usePrivyInternal(),{navigate:k,setModalData:P,app:R,data:B}=q.usePrivyModal(),{wallets:_}=j.useWallets(),[W,M]=n.useState(!1),[L,U]=n.useState(0n),[D,O]=n.useState(!1),[H,G]=n.useState(null),[$,Q]=n.useState(null),[z,V]=n.useState([]),[J,X]=n.useState(0),[Y,Z]=n.useState(!1),[K,ee]=n.useState(!1),[re,ne]=n.useState(!1),[ie,te]=n.useState(!1);if(!B?.funding||"ethereum"!==B.funding.chainType)throw Error("Invalid funding data");let{erc20ContractInfo:oe,chain:se,connectedWalletAddress:ae}=B.funding,ce=B.funding.address,ue=B.funding.erc20Address,[le,de]=n.useState(B.funding.amount);n.useEffect((()=>{ue&&!oe&&G(Error("Unable to fetch token details"))}),[]);let he=!!ue&&!!oe,qe=he?BigInt(parseFloat(le)*10**oe.decimals):i.parseEther(le),ge=ae?_.find((({address:e})=>e===ae)):_[0],[je,pe]=n.useState(null);n.useEffect((()=>{(async()=>{if(!ge)return;let e=await ge.getEthereumProvider();pe(i.createWalletClient({account:ge.address,transport:i.custom(e)}).extend(i.publicActions))})().catch(console.error)}),[ge]);let[me,fe]=n.useState(0n);n.useEffect((()=>{i.createPublicClient({chain:se,transport:i.http(E.getJsonRpcEndpointFromChain(se,r,A))}).getBalance({address:ce}).then(fe).catch(console.error)}),[]);let[ve,ye]=n.useState(0n);n.useEffect((()=>{he&&b.getErc20Balance({chain:se,address:ce,appId:A,rpcConfig:r,erc20Address:ue}).then((e=>ye(e.balance))).catch(console.error)}),[]);let{tokenPrice:Ce}=g.useGetTokenPrice(se.id),[Se,be]=n.useState({to:ce,chain:se,value:qe,data:void 0});n.useEffect((()=>{(async()=>{let e,n;if(!je||!ge||Y||re)return;Z(!0);let t=i.createPublicClient({chain:Se.chain,transport:i.http(E.getJsonRpcEndpointFromChain(Se.chain,r,A))});if(he&&!Se.data)return await t.simulateContract({address:ue,chain:Se.chain,abi:p.ERC20_TRANSFER_ABI_STUB,functionName:"transfer",args:[ce,qe],account:ge.address}).catch((e=>{console.warn("Simulated token transfer failed with error, fetching bridge options.",e)}))?(Z(!1),void be({to:ue,chain:Se.chain,data:i.encodeFunctionData({abi:p.ERC20_TRANSFER_ABI_STUB,functionName:"transfer",args:[ce,qe]}),value:"0x0"})):(Z(!1),void O(!0));try{e=await t.prepareTransactionRequest({account:ge.address,to:Se.to,chain:Se.chain,data:Se.data,value:BigInt(Se.value??0)})}catch(e){if(console.error(e),z.length>1)Q(e.shortMessage??"Something went wrong");else if(K&&0===z.length)return void G(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ge.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE))}if(!e)return Z(!1),void O(!0);Z(!1),ne(!0),M(!0),U(e.gas);try{await je.switchChain({id:Se.chain.id})}catch(e){await je.addChain({chain:Se.chain}),await je.switchChain({id:Se.chain.id})}try{n=await je.sendTransaction(e),F({eventName:y.ON_RAMP_COMPLETE_ANALYTICS_EVENT,payload:{provider:"external",status:"success",address:ge.address,chainId:Se.chain.id,value:Se.value?.toString(),txHash:n}})}catch(e){if(console.error(e),"TransactionExecutionError"===e.name)if(z.length<1){let r=e.shortMessage;(e.shortMessage.includes("rejected the request")||e.details.includes("rejected the request"))&&(r="User rejected the request."),G(new d.PrivyClientError(r,void 0,d.PrivyErrorCode.TRANSACTION_FAILURE))}else Q(e.shortMessage??"Something went wrong")}n?(await je.waitForTransactionReceipt({hash:n}),ne(!1),te(!0)):ne(!1)})().catch(console.error)}),[je,Se]),n.useEffect((()=>{(async()=>{if(!D||!je||!ge)return;let e=u.addToDefaultChains(R.chains).filter((e=>e.id!==se.id&&!!e.testnet==!!se.testnet));he&&e.unshift(se);let n=await S.getBalanceForChains({chains:e,address:ge.address,appId:A,rpcConfig:r}),i=he?n.filter((e=>e.balance>0n)):n.filter((e=>e.balance>qe));if(i.length<1)return void G(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ge.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE));i.sort(((e,r)=>Number(r.balance-e.balance)));let t=(await Promise.allSettled(i.map((async e=>({quote:await C.getQuote({isTestnet:!!se.testnet,input:C.toGetQuoteInput({amount:qe.toString(),user:ge.address,recipient:ce,destinationChainId:se.id,destinationCurrency:ue,originChainId:e.chain.id})}),...e}))))).filter((e=>"fulfilled"===e.status)).map((e=>e.value));if(t.length<1)return void G(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ge.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE));let o=t.map((e=>({bridgeTx:C.toEvmTransactionRequestInfoFromQuote(e.quote),balance:e.balance,chain:e.chain}))).filter((e=>!!e.bridgeTx));if(o.length>1)return void V(o);let s=o[0];s?(ee(!0),be({data:s.bridgeTx.data,to:s.bridgeTx.to,value:s.bridgeTx.value,chain:s.chain})):G(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ge.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE))})().catch(console.error)}),[D]),n.useEffect((()=>{if(!H)return;let e={error:H,previousScreen:w.ModalScreen.FUNDING_TRANSFER_FROM_WALLET_SCREEN};P({funding:B?.funding,sendTransaction:B?.sendTransaction,errorModalData:e}),k(w.ModalScreen.ERROR_SCREEN,!1)}),[H]);let Ee=ge?v.toDisplayName(ge.walletClientType,ge.connectorType,ge.walletClientType)||"wallet":null,we=!he&&Ce?f.getDollarsFromStringFloat(le??"0",Ce):void 0,Ie=he?L:f.sumWeiQuantitiesToHexString([L,qe]),Te=Ie&&Ce?f.getDollarsFromWei(Ie,Ce):void 0,Ae=Ie?f.getNativeCurrencyFromWei(Ie,"ETH"):void 0,Ne=L&&Ce?f.getDollarsFromWei(L,Ce):void 0,xe=L?f.getNativeCurrencyFromWei(L,"ETH"):void 0;if(n.useEffect((()=>{if(!ie)return;let e=setTimeout(x,l.DEFAULT_SUCCESS_SCREEN_EXTRA_LONG_DURATION_MS);return()=>clearTimeout(e)}),[ie]),ie/*#__PURE__*/)return e.jsxs(e.Fragment,{children:[/*#__PURE__*/e.jsx(a.default,{}),/*#__PURE__*/e.jsx(t.RefactorSpacerTop,{}),/*#__PURE__*/e.jsxs(t.CenteredItemWithGap,{children:[/*#__PURE__*/e.jsx(N.default,{color:"var(--privy-color-success)",width:"64px",height:"64px"}),/*#__PURE__*/e.jsx(s.CenteredScreenHeader,{title:"Success!",description:`You’ve successfully added ${le} ${he?oe.symbol:se.nativeCurrency.symbol} to your ${R.name} wallet. It may take a minute before the funds are available to use.`})]}),/*#__PURE__*/e.jsx(t.RefactorSpacerBottom,{}),/*#__PURE__*/e.jsx(o.BlobbyFooter,{})]});let Fe=he?`${m.formatErc20TokenAmount({amount:ve,decimals:oe.decimals})}  ${oe.symbol}`:f.getNativeCurrencyFromWei(me,se.nativeCurrency.symbol,3,!0),ke=z[J];return z.length>1&&ke?/*#__PURE__*/e.jsx(I.BridgeNetworkSelectionView,{displayName:Ee,configuredFundingChain:se,formattedBalance:Fe,fundingAmount:le,fundingCurrency:he?oe.symbol:se.nativeCurrency.symbol,fundingAmountInUsd:we,options:z,selectedOption:ke,isPreparing:Y,isSubmitting:re,addressToFund:ce,fundingWalletAddress:ge?.address||"",errorMessage:$,onSubmit:()=>{B.funding?.amount!==le?async function(){if(ge&&ke)try{let e=await C.getQuote({isTestnet:!!se.testnet,input:C.toGetQuoteInput({amount:qe.toString(),user:ge.address,recipient:ce,destinationChainId:se.id,destinationCurrency:ue,originChainId:ke.chain.id})}),r=C.toEvmTransactionRequestInfoFromQuote(e);if(!r)throw Error("Invalid transaction request");ee(!0),be({data:r.data,to:r.to,value:r.value,chain:ke.chain})}catch(e){console.error(e),G(new d.PrivyClientError("Unable to fetch quotes for bridging",e,d.PrivyErrorCode.INSUFFICIENT_BALANCE))}}().catch(console.error):be({to:ke.bridgeTx.to,data:ke.bridgeTx.data,value:ke.bridgeTx.value,chain:ke.chain})},onSelect:e=>{e!==J&&(Q(null),X(e))},onAmountChange:de}):W&&L&&ge&&B?.funding?/*#__PURE__*/e.jsx(T.TransferOrBridgeLoadingScreen,{wallet:ge,displayName:Ee,addressToFund:ce,isBridging:K,isErc20Flow:he,totalPriceInUsd:Te,totalPriceInNativeCurrency:Ae,gasPriceInUsd:Ne,gasPriceInNativeCurrency:xe,chainId:se.id,chainName:se.name}):
/*#__PURE__*/e.jsxs(e.Fragment,{children:[/*#__PURE__*/e.jsx(a.default,{}),/*#__PURE__*/e.jsx(c.NeutralSpinner,{}),/*#__PURE__*/e.jsx("div",{style:{marginTop:"1rem"}}),/*#__PURE__*/e.jsx(o.BlobbyFooter,{})]})};
