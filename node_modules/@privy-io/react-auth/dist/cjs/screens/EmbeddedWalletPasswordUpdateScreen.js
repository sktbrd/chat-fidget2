"use strict";var e=require("react/jsx-runtime"),r=require("./index.js"),s=require("react"),o=require("../client/user.js"),t=require("../errors.js"),n=require("../hooks/internal-context.js"),a=require("../hooks/modal-context.js"),i=require("../hooks/privy-context.js"),c=require("../password.js"),l=require("../components/embedded-wallets/SetWalletPasswordForm/SetWalletPasswordForm.js");require("@ethersproject/address"),require("ofetch"),require("../hooks/index.js"),require("../components/PrefetchedImage.js"),require("../configuration/context.js"),require("../config.js"),require("../configuration/defaultClientConfig.js"),require("../constants.js"),require("../configuration/login-methods.js"),require("../configuration/wallets.js"),require("../connectors/chains/index.js"),require("../connectors/chains/arbitrum.js"),require("../connectors/chains/arbitrumSepolia.js"),require("../connectors/chains/avalanche.js"),require("../connectors/chains/avalancheFuji.js"),require("../connectors/chains/base.js"),require("../connectors/chains/baseSepolia.js"),require("../connectors/chains/berachainArtio.js"),require("../connectors/chains/celo.js"),require("../connectors/chains/celoAlfajores.js"),require("../connectors/chains/filecoin.js"),require("../connectors/chains/filecoinCalibration.js"),require("../connectors/chains/garnetHolesky.js"),require("../connectors/chains/holesky.js"),require("../connectors/chains/linea.js"),require("../connectors/chains/lineaTestnet.js"),require("../connectors/chains/lukso.js"),require("../connectors/chains/mainnet.js"),require("../connectors/chains/optimism.js"),require("../connectors/chains/optimismSepolia.js"),require("../connectors/chains/polygon.js"),require("../connectors/chains/polygonAmoy.js"),require("../connectors/chains/redstone.js"),require("../connectors/chains/sepolia.js"),require("../connectors/chains/zora.js"),require("../connectors/chains/zoraSepolia.js"),require("../connectors/chains/zoraTestnet.js"),require("../connectors/chains/utils.js"),require("../lib/solana/index.js"),require("../theme.js"),require("tinycolor2"),require("../lib/cybr53.js"),require("fast-password-entropy"),require("secure-password-utilities"),require("secure-password-utilities/wordlists"),require("../components/embedded-wallets/SetWalletPasswordForm/ConfimWalletPasswordForm.js"),require("@heroicons/react/24/outline/ExclamationTriangleIcon"),require("../components/Layouts.js"),require("styled-components"),require("../components/ModalFooter.js"),require("../svg/protected-by-privy.js"),require("../components/ModalHeader.js"),require("@heroicons/react/24/outline/ArrowLeftIcon"),require("@heroicons/react/24/outline/ArrowRightIcon"),require("@heroicons/react/24/outline/QuestionMarkCircleIcon"),require("@heroicons/react/24/outline/XMarkIcon"),require("../components/embedded-wallets/SetWalletPasswordForm/shared.js"),require("@heroicons/react/24/outline/ArrowPathIcon"),require("@heroicons/react/24/outline/EyeIcon"),require("@heroicons/react/24/outline/EyeSlashIcon"),require("../components/Button.js"),require("../components/Loader.js"),require("../components/embedded-wallets/SetWalletPasswordForm/ConfimWalletPasswordSaved.js"),require("../components/Checkbox.js"),require("../components/embedded-wallets/SetWalletPasswordForm/CreateWalletPassword.js"),require("@heroicons/react/24/outline/KeyIcon"),require("@heroicons/react/24/solid/CheckCircleIcon"),require("../components/embedded-wallets/SetWalletPasswordForm/SaveWalletPassword.js"),require("@heroicons/react/24/outline/ArrowDownTrayIcon"),require("@heroicons/react/24/outline/ClipboardDocumentCheckIcon"),require("@heroicons/react/24/outline/DocumentDuplicateIcon"),require("../components/embedded-wallets/SetWalletPasswordForm/SetWalletPasswordComplete.js"),require("@heroicons/react/24/solid/XCircleIcon"),require("../components/ScreenHeader.js"),require("../components/embedded-wallets/SetWalletPasswordForm/setWalletPassword.hooks.js");exports.EmbeddedWalletPasswordUpdateScreen=()=>{let[d,u]=s.useState(null),[h,q]=s.useState(!1),[w,m]=s.useState(null),[p,y]=s.useState(""),{authenticated:j,getAccessToken:v,user:g}=i.usePrivyContext(),{walletProxy:P,refreshUser:b,closePrivyModal:f,createAnalyticsEvent:S}=n.usePrivyInternal(),{app:C,navigate:W,data:A,onUserCloseViaDialogOrKeybindRef:I}=a.usePrivyModal(),{onSuccess:M,onFailure:x}=A.createWallet,E=o.getPrivyPrimaryWallet(g),_="user-passcode"===d?.recoveryMethod,R="user-passcode"===E?.recoveryMethod;s.useEffect((()=>{j||(W(r.ModalScreen.LANDING),x(new t.PrivyUnauthenticatedError("User must be authenticated before setting a password on a Privy wallet")))}),[j]);let k=()=>w?(x(w),void f({shouldCallAuthOnSuccess:!1})):_?(M(d),void f({shouldCallAuthOnSuccess:!1})):(x(new t.PrivyEmbeddedWalletError("Exited before password was added to wallet")),void f({shouldCallAuthOnSuccess:!1}));I.current=k;/*#__PURE__*/return e.jsx(l.SetWalletPasswordForm,{appName:C?.name||"privy",config:{initiatedBy:"user",onCancel:k},error:w?"An error has occurred, please try again.":void 0,buttonLoading:h,buttonHideAnimations:!1,password:p,isResettingPassword:R,onPasswordGenerate:()=>y(c.generatePassphrase()),onPasswordChange:y,onSubmit:async()=>{_?(M(d),f({shouldCallAuthOnSuccess:!1})):(q(!0),m(null),await(async()=>{let e=await v();if(e&&E?.address&&p&&P)try{S({eventName:"embedded_wallet_set_recovery_started",payload:{walletAddress:E.address,existingRecoveryMethod:E.recoveryMethod,targetRecoveryMethod:"user-passcode",isResettingPassword:R}});let{entropyId:r,entropyIdVerifier:s}=o.getEntropyDetailsFromAccount(E);if(!(await P.setRecovery({accessToken:e,entropyId:r,entropyIdVerifier:s,recoveryPassword:p,recoveryMethod:"user-passcode"})).entropyId)return m(new t.PrivyEmbeddedWalletError("Error setting password on privy wallet")),void S({eventName:"embedded_wallet_set_recovery_failed",payload:{walletAddress:E.address,existingRecoveryMethod:E.recoveryMethod,targetRecoveryMethod:"user-passcode",isResettingPassword:R,reason:"error setting password"}});let n=await b(),a=o.getPrivyPrimaryWallet(n);if(!a)return m(new t.PrivyEmbeddedWalletError("Error setting password on privy wallet")),void S({eventName:"embedded_wallet_set_recovery_failed",payload:{walletAddress:E.address,existingRecoveryMethod:E.recoveryMethod,targetRecoveryMethod:"user-passcode",isResettingPassword:R,reason:"wallet disconnected"}});u(a),S({eventName:"embedded_wallet_set_recovery_completed",payload:{walletAddress:E.address,existingRecoveryMethod:E.recoveryMethod,targetRecoveryMethod:"user-passcode",isResettingPassword:R}})}catch(e){console.warn(e),m(e instanceof Error?e:Error("Error setting password on privy wallet")),S({eventName:"embedded_wallet_set_password_failed",payload:{walletAddress:E.address,reason:e}})}})(),q(!1))},onClose:k})};
