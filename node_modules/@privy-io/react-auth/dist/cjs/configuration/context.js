"use strict";var e=require("react/jsx-runtime"),r=require("react"),n=require("../config.js"),i=require("../lib/cybr53.js");require("./defaultClientConfig.js"),require("../constants.js"),require("./login-methods.js"),require("./wallets.js"),require("../connectors/chains/index.js"),require("../connectors/chains/arbitrum.js"),require("../connectors/chains/arbitrumSepolia.js"),require("../connectors/chains/avalanche.js"),require("../connectors/chains/avalancheFuji.js"),require("../connectors/chains/base.js"),require("../connectors/chains/baseSepolia.js"),require("../connectors/chains/berachainArtio.js"),require("../connectors/chains/celo.js"),require("../connectors/chains/celoAlfajores.js"),require("../connectors/chains/filecoin.js"),require("../connectors/chains/filecoinCalibration.js"),require("../connectors/chains/garnetHolesky.js"),require("../connectors/chains/holesky.js"),require("../connectors/chains/linea.js"),require("../connectors/chains/lineaTestnet.js"),require("../connectors/chains/lukso.js"),require("../connectors/chains/mainnet.js"),require("../connectors/chains/optimism.js"),require("../connectors/chains/optimismSepolia.js"),require("../connectors/chains/polygon.js"),require("../connectors/chains/polygonAmoy.js"),require("../connectors/chains/redstone.js"),require("../connectors/chains/sepolia.js"),require("../connectors/chains/zora.js"),require("../connectors/chains/zoraSepolia.js"),require("../connectors/chains/zoraTestnet.js"),require("../connectors/chains/utils.js"),require("../lib/solana/index.js"),require("../theme.js"),require("tinycolor2");let s={showWalletLoginFirst:!0,allowlistConfig:{errorTitle:null,errorDetail:null,errorCtaText:null,errorCtaLink:null},walletAuth:!0,emailAuth:!0,smsAuth:!1,googleOAuth:!1,twitterOAuth:!1,discordOAuth:!1,githubOAuth:!1,linkedinOAuth:!1,appleOAuth:!1,disablePlusEmails:!1,termsAndConditionsUrl:null,privacyPolicyUrl:null,embeddedWalletConfig:{createOnLogin:"off",requireUserOwnedRecoveryOnCreate:!1,userOwnedRecoveryOptions:["user-passcode"]},fiatOnRampEnabled:!1,captchaEnabled:!1,captchaSiteKey:"",enforceWalletUis:!1,legacyWalletUiConfig:!1};const o=n.generateAppConfig(s,void 0,!1);let t=/*#__PURE__*/r.createContext({appConfig:o,isServerConfigLoaded:!1});exports.DEFAULT_APP_CONFIG=o,exports.PrivyAppConfigProvider=({children:o,legacyCreateEmbeddedWalletFlag:c,client:a,clientConfig:l})=>{let[u,h]=r.useState(null),g=r.useMemo((()=>n.generateAppConfig(u??s,l,!!u)),[u,l]);return r.useEffect((()=>{if(!u)return;let e=n.generateClientConfigAnalyticsPayload(l,c),r=i.cyrb53(JSON.stringify(e)).toString(),s=`privy:sent:${u.id}:${r}`;localStorage.getItem(s)||(a.createAnalyticsEvent({eventName:"sdk_initialize",payload:e}),localStorage.setItem(s,"t"))}),[l,c,u]),r.useEffect((()=>{u||(async()=>{try{let e=await a.getServerConfig();e.customApiUrl&&a.updateApiUrl(e.customApiUrl),h(e)}catch(e){console.warn("Error generating app config: ",e)}})()}),[]),/*#__PURE__*/e.jsx(t.Provider,{value:{appConfig:g,isServerConfigLoaded:!!u},children:o})},exports.useAppConfig=()=>{let{appConfig:e}=r.useContext(t);return e},exports.useIsServerConfigLoaded=()=>{let{isServerConfigLoaded:e}=r.useContext(t);return e};
