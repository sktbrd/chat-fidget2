"use strict";var e=require("@ethersproject/providers"),r=require("../connectors/get-legacy-injected-providers.js"),t=require("../connectors/is-wallet-installed.js"),n=require("../errors.js");require("ofetch");const o=(e,r=3,t=4,n="ethereum")=>{if(!e)return"";let o="ethereum"===n?2:0;return r+t+o+3>=e.length?e:`${e.slice(0,o+r)}...${e.slice(e.length-t,e.length)}`},i=e=>new Promise((r=>setTimeout(r,e)));const s=(e,r)=>e.toLowerCase()===r.toLowerCase(),l=e=>e.replace(/([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g,"");const p=(e,r,t)=>{let o,i=e.id,s=Number(e.id);if(e.rpcUrls.privyWalletOverride&&e.rpcUrls.privyWalletOverride.http[0])o=e.rpcUrls.privyWalletOverride.http[0];else if(r.rpcUrls&&r.rpcUrls[s])o=r.rpcUrls[s];else if(e.rpcUrls.privy?.http[0]){let r=new URL(e.rpcUrls.privy.http[0]);r.searchParams.append("privyAppId",t),o=r.toString()}else o=e.rpcUrls.public?.http[0]?e.rpcUrls.public.http[0]:e.rpcUrls.default?.http[0];if(!o)throw new n.PrivyConnectorError(`No RPC url found for ${i}`);return o};exports.clamp=function(e,{min:r,max:t}){return Math.min(Math.max(e,r),t)},exports.constructURL=(e,r,t={},n={})=>{let o=new URL(r,e);for(let[e,r]of Object.entries(t))void 0!==r&&o.searchParams.set(e,r);let i=Object.entries(n);if(i.length>0){let e=new URLSearchParams;for(let[r,t]of i)e.append(r,t);o.hash=e.toString()}return o.href},exports.containsEthAddress=(e,r)=>{for(let t of e)if(s(t,r))return!0;return!1},exports.convert1dTo2dArray=(e,r)=>{let t=e.slice(0),n=[];for(;t.length;)n.push(t.splice(0,r));return n},exports.detectInjectedConnectors=async function({store:e,walletList:n,externalWalletConfig:o,walletChainType:i,timeout:s=3e3}){let l=!1,p=window;return new Promise((a=>{function c(){if(l)return;l=!0,window.removeEventListener("ethereum#initialized",c);let s=e.getProviders();console.debug("Detected injected providers:",s.map((e=>e.info)));let p=[];for(let e of s)n.includes("coinbase_wallet")&&"com.coinbase.wallet"===e.info.rdns||"solana-only"===i&&"app.phantom"===e.info.rdns||p.push({type:e.info.name.toLowerCase().replace(/\s/g,"_"),eip6963InjectedProvider:e});if("solana-only"!==i)for(let e of r.getLegacyInjectedProviders()){let n=r.getLegacyInjectedName(e);if(!s.some((e=>e.info.name===n))){if(t.isMetaMask(e,!0)&&!p.find((e=>"metamask"===e.type))){p.push({type:"metamask",legacyInjectedProvider:e});continue}if("Phantom"===n&&!p.find((e=>"phantom"===e.type))){p.push({type:"phantom",legacyInjectedProvider:e});continue}if("Coinbase Wallet"===n&&!p.find((e=>"coinbase_wallet"===e.type&&"smartWalletOnly"!==o.coinbaseWallet?.connectionOptions))){p.push({type:"coinbase_wallet",legacyInjectedProvider:e});continue}p.find((e=>"unknown_browser_extension"===e.type))||p.push({type:"unknown_browser_extension",legacyInjectedProvider:e})}}a(p)}p.ethereum?c():(window.addEventListener("ethereum#initialized",c,{once:!0}),setTimeout((()=>{c()}),s))}))},exports.formatChainIdToCAIP2=function(e){return`eip155:${String(Number(e))}`},exports.formatSolanaWalletAddress=(e,r=3,t=4)=>o(e,r,t,"solana"),exports.formatWalletAddress=o,exports.generateTypedDataWithDomainType=e=>{let r={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},t=e.types.EIP712Domain??Object.entries(e.domain).map((([e,t])=>{if(null!=t&&"string"==typeof e&&e in r)return{name:e,type:r[e]}})).filter((e=>void 0!==e));return{...e,types:{...e.types,EIP712Domain:t}}},exports.getBlockExplorer=(e,r)=>{let t=Number(e),o=r.find((e=>e.id===t));if(!o)throw new n.PrivyConnectorError(`Unsupported chainId ${e}`,4901);return o.blockExplorers?.default.url},exports.getJsonRpcEndpoint=(e,r,t,o)=>{let i=Number(e),s=r.find((e=>e.id===i));if(!s)throw new n.PrivyConnectorError(`Unsupported chainId ${e}`,4901);return p(s,t,o)},exports.getJsonRpcEndpointFromChain=p,exports.getJsonRpcProvider=(r,t,o,i)=>{let s=Number(r),l=t.find((e=>e.id===s));if(!l)throw new n.PrivyConnectorError(`Unsupported chainId ${r}`,4901);return new e.StaticJsonRpcProvider(l.rpcUrls.privyWalletOverride&&l.rpcUrls.privyWalletOverride.http[0]?l.rpcUrls.privyWalletOverride.http[0]:o.rpcUrls&&o.rpcUrls[s]?o.rpcUrls[s]:l.rpcUrls.privy?.http[0]?{url:l.rpcUrls.privy.http[0],headers:{"privy-app-id":i.appId}}:l.rpcUrls.public?.http[0]?l.rpcUrls.public.http[0]:l.rpcUrls.default?.http[0])},exports.invokeUntilSettled=(e,r={})=>{let t=r.delayMs||150,n=r.maxAttempts||270;return new Promise((async(o,s)=>{let l=!1,p=0;for(;!l&&p<n;){if(r.abortSignal?.aborted)return;e().then((e=>{l=!0,o(e)}),((...e)=>{l=!0,s(...e)})),p+=1,await i(t)}l||s(Error("Exceeded max attempts before resolving function"))}))},exports.normalizeWalletShortName=e=>l(e).toLowerCase().replace(/[^a-zA-Z0-9 ]/g,"").replace(/\s/g,"_"),exports.pollForResult=function(e,{interval:r=100,timeout:t=5e3}={}){return new Promise(((n,o)=>{let i,s=0,l=()=>{s>=t?o("Max attempts reached without result"):(i=e(),s+=r,null==i?setTimeout(l,r):n(i))};l()}))},exports.sameEthAddress=s,exports.sleep=i,exports.splitAtIndex=(e,r)=>{let t=[],n=[];for(let[o,i]of e.entries())o<r?t.push(i):n.push(i);return[t,n]},exports.stripEmoji=l,exports.toHex=e=>"string"==typeof e?e:"0x"+e.toString(16),exports.validateEmail=e=>!!String(e).toLowerCase().match(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
