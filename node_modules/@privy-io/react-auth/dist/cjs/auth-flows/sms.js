"use strict";var e=require("../errors.js"),t=require("../paths.js"),r=require("./getUiHeader.js");require("ofetch");class o{async authenticate(){if(!this.api)throw new e.PrivyClientError("Auth flow has no API instance");if(!this.meta.phoneNumber||!this.meta.smsCode)throw new e.PrivyClientError("phone number and sms code must be set prior to calling authenticate.");try{return await this.api.post(t.passwordlessSmsAuthenticatePath,{phoneNumber:this.meta.phoneNumber,code:this.meta.smsCode,mode:this.meta.disableSignup?"no-signup":"login-or-sign-up"})}catch(t){throw e.formatApiError(t)}}async link(){if(!this.api)throw new e.PrivyClientError("Auth flow has no API instance");if(!this.meta.phoneNumber||!this.meta.smsCode)throw new e.PrivyClientError("phone number and sms code must be set prior to calling authenticate.");try{return await this.api.post(t.passwordlessSmsLinkPath,{phoneNumber:this.meta.phoneNumber,code:this.meta.smsCode})}catch(t){throw e.formatApiError(t)}}async sendSmsCode({phoneNumber:o,captchaToken:i,withPrivyUi:s}){if(!this.api)throw new e.PrivyClientError("Auth flow has no API instance");if(o&&(this.meta.phoneNumber=o),i&&(this.meta.captchaToken=i),!this.meta.phoneNumber)throw new e.PrivyClientError("phone nNumber must be set when initialzing authentication.");let n=r.getUiHeader(s);try{return await this.api.post(t.passwordlessSmsInitPath,{phoneNumber:this.meta.phoneNumber,token:this.meta.captchaToken},{headers:{...n}})}catch(t){throw e.formatApiError(t)}}constructor({phoneNumber:e,captchaToken:t,disableSignup:r}){this.meta={phoneNumber:e,captchaToken:t,disableSignup:r??!1}}}exports.SmsFlow=o,exports.UpdateSmsFlow=class extends o{async link(){if(!this.api)throw new e.PrivyClientError("Auth flow has no API instance");if(!this.meta.phoneNumber||!this.meta.smsCode||!this.meta.oldPhoneNumber)throw new e.PrivyClientError("Phone number, sms code, and an old phone number must be set prior to calling update.");try{return await this.api.post(t.updatePhonePath,{old_phone_number:this.meta.oldPhoneNumber,new_phone_number:this.meta.phoneNumber,code:this.meta.smsCode})}catch(t){throw e.formatApiError(t)}}constructor(e,t,r){super({phoneNumber:t,captchaToken:r}),this.meta={phoneNumber:t,captchaToken:r,oldPhoneNumber:e,disableSignup:!1}}};
