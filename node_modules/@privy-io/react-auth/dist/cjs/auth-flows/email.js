"use strict";var t=require("../errors.js"),e=require("../paths.js"),i=require("./getUiHeader.js");require("ofetch");class a{async authenticate(){if(!this.api)throw new t.PrivyClientError("Auth flow has no API instance");if(!this.meta.email||!this.meta.emailCode)throw new t.PrivyClientError("Email and email code must be set prior to calling authenticate.");try{return await this.api.post(e.passwordlessAuthenticatePath,{email:this.meta.email,code:this.meta.emailCode,mode:this.meta.disableSignup?"no-signup":"login-or-sign-up"})}catch(e){throw t.formatApiError(e)}}async link(){if(!this.api)throw new t.PrivyClientError("Auth flow has no API instance");if(!this.meta.email||!this.meta.emailCode)throw new t.PrivyClientError("Email and email code must be set prior to calling authenticate.");try{return await this.api.post(e.passwordlessLinkPath,{email:this.meta.email,code:this.meta.emailCode})}catch(e){throw t.formatApiError(e)}}async sendCodeEmail({email:a,captchaToken:r,withPrivyUi:s}){if(!this.api)throw new t.PrivyClientError("Auth flow has no API instance");if(a&&(this.meta.email=a),r&&(this.meta.captchaToken=r),!this.meta.email)throw new t.PrivyClientError("Email must be set when initialzing authentication.");let o=i.getUiHeader(s);try{return await this.api.post(e.passwordlessInitPath,{email:this.meta.email,token:this.meta.captchaToken},{headers:{...o}})}catch(e){throw t.formatApiError(e)}}constructor({email:t,captchaToken:e,disableSignup:i}){this.meta={email:t,captchaToken:e,disableSignup:i??!1}}}exports.EmailFlow=a,exports.UpdateEmailFlow=class extends a{async link(){if(!this.api)throw new t.PrivyClientError("Auth flow has no API instance");if(!this.meta.email||!this.meta.emailCode||!this.meta.oldAddress)throw new t.PrivyClientError("Email, email code, and an old email address must be set prior to calling update.");try{return await this.api.post(e.updateEmailPath,{oldAddress:this.meta.oldAddress,newAddress:this.meta.email,code:this.meta.emailCode})}catch(e){throw t.formatApiError(e)}}constructor(t,e,i){super({email:e,captchaToken:i}),this.meta={email:e,captchaToken:i,oldAddress:t,disableSignup:!1}}};
