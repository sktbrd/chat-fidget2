import{ErrorCode as e}from"@ethersproject/logger";import{ProviderErrors as t}from"@privy-io/js-sdk-core";import{PrivyConnectorError as s,PrivyError as r}from"../errors.mjs";import"ofetch";class a extends s{constructor(){super("Wallet timeout"),this.type="wallet_error"}}class o extends s{constructor(){super("User rejected connection"),this.type="wallet_error"}}const i=r=>{if(r instanceof s)return r;if(r?.code&&r?.reason){let s=new l(r);return r.code===e.ACTION_REJECTED&&(s.details=t.E4001_USER_REJECTED_REQUEST),s}return r?.code?new l(r):new s("Unknown connector error",r)};class n extends r{constructor(e,t,s){super(e),this.type="provider_error",this.code=t,this.data=s}}class l extends n{constructor(e){super(e.message,e.code,e.data);let s=Object.values(t).find((t=>t.eipCode===e.code));this.details=s||t.UNKNOWN_ERROR,-32002===e.code&&(e.message?.includes("already pending for origin")?e.message?.includes("wallet_requestPermissions")?this.details=t.E32002_CONNECTION_ALREADY_PENDING:this.details=t.E32002_REQUEST_ALREADY_PENDING:e.message?.includes("Already processing")&&e.message.includes("eth_requestAccounts")&&(this.details=t.E32002_WALLET_LOCKED))}}const c={ERROR_USER_EXISTS:{message:"User already exists for this address",detail:"Try another address!",retryable:!1},ERROR_TIMED_OUT:{message:"Wallet request timed out",detail:"Please try connecting again.",retryable:!0},ERROR_WALLET_CONNECTION:{message:"Could not log in with wallet",detail:"Please try connecting again.",retryable:!0},ERROR_USER_REJECTED_CONNECTION:{message:"You rejected the request",detail:"Please try connecting again.",retryable:!0},ERROR_USER_LIMIT_REACHED:{message:"Unable to link",detail:"You've reached the maximum number of linked wallets.",retryable:!1},...t};export{c as ConnectorErrors,l as PrivyProviderRpcError,n as ProviderRpcError,o as UserRejectedConnectionError,a as WalletTimeoutError,i as formatConnectorError};
