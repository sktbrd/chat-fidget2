import{Blobby as e}from"../svg/blobby.mjs";import{toHex as t}from"../utils/index.mjs";import{EthereumWalletConnector as i}from"./ethereum/index.mjs";import"react/jsx-runtime";import"@ethersproject/providers";import"./get-legacy-injected-providers.mjs";import"./is-wallet-installed.mjs";import"../errors.mjs";import"ofetch";import"@ethersproject/address";import"../constants.mjs";import"../storage.mjs";import"./areWalletArraysEqual.mjs";import"./isBaseConnectedEthereumWallet.mjs";import"./base.mjs";import"eventemitter3";import"./getRpcTimeout.mjs";import"./privyProxyProvider.mjs";import"./errors.mjs";import"@ethersproject/logger";import"@privy-io/js-sdk-core";class r extends i{async initialize(){await this.syncAccounts(),this.initialized=!0,this.emit("initialized")}async connect(e){return await this.isConnected()?(await this.proxyProvider.request({method:"wallet_switchEthereumChain",params:[t(e?.chainId||"0x1")]}),this.getConnectedWallet()):null}get walletBranding(){return{name:"Privy Wallet",icon:e,id:"io.privy.wallet"}}disconnect(){this.connected=!1}async promptConnection(){}constructor({provider:e,chains:t,defaultChain:i,rpcConfig:r,imported:o,walletIndex:s}){super("privy",t,i,r),this.connectorType="embedded",this.proxyProvider=e,this.walletIndex=s,o&&(this.connectorType="embedded_imported"),this.subscribeListeners()}}export{r as EmbeddedWalletConnector};
