import{CoinbaseWalletSDK as i}from"@coinbase/wallet-sdk";import{PrivyConnectorError as t}from"../errors.mjs";import{COINBASE_WALLET_DATA_URI as e}from"../svg/coinbase-wallet.mjs";import{DEFAULT_SUPPORTED_CHAIN_IDS as o}from"./chains/index.mjs";import{formatConnectorError as s}from"./errors.mjs";import{EthereumWalletConnector as n}from"./ethereum/index.mjs";import{PrivyProxyProvider as r}from"./privyProxyProvider.mjs";import"ofetch";import"react/jsx-runtime";import"./chains/arbitrum.mjs";import"./chains/arbitrumSepolia.mjs";import"./chains/avalanche.mjs";import"./chains/avalancheFuji.mjs";import"./chains/base.mjs";import"./chains/baseSepolia.mjs";import"./chains/berachainArtio.mjs";import"./chains/celo.mjs";import"./chains/celoAlfajores.mjs";import"./chains/filecoin.mjs";import"./chains/filecoinCalibration.mjs";import"./chains/garnetHolesky.mjs";import"./chains/holesky.mjs";import"./chains/linea.mjs";import"./chains/lineaTestnet.mjs";import"./chains/lukso.mjs";import"./chains/mainnet.mjs";import"./chains/optimism.mjs";import"./chains/optimismSepolia.mjs";import"./chains/polygon.mjs";import"./chains/polygonAmoy.mjs";import"./chains/redstone.mjs";import"./chains/sepolia.mjs";import"./chains/zora.mjs";import"./chains/zoraSepolia.mjs";import"./chains/zoraTestnet.mjs";import"@ethersproject/logger";import"@privy-io/js-sdk-core";import"@ethersproject/address";import"@ethersproject/providers";import"../constants.mjs";import"../storage.mjs";import"../utils/index.mjs";import"./get-legacy-injected-providers.mjs";import"./is-wallet-installed.mjs";import"./areWalletArraysEqual.mjs";import"./isBaseConnectedEthereumWallet.mjs";import"./base.mjs";import"eventemitter3";import"./getRpcTimeout.mjs";let a,m=[1,11155111,137,10,8453,84532,42161,7777777,43114,56],c=(i,t)=>i.makeWeb3Provider({options:t});class l extends n{async initialize(){await this.syncAccounts(),this.initialized=!0,this.emit("initialized")}async connect(i){return i.showPrompt&&await this.promptConnection(),await this.isConnected()?this.getConnectedWallet():null}disconnect(){this.proxyProvider.walletProvider.disconnect(),this.onDisconnect()}get walletBranding(){return{name:this.displayName,icon:e,id:"com.coinbase.wallet"}}async promptConnection(){try{let i=await this.proxyProvider.request({method:"eth_requestAccounts"});if(!i||0===i.length||!i[0])throw new t("Unable to retrieve accounts");this.connected=!0,await this.syncAccounts([i[0]])}catch(i){throw s(i)}}updateConnectionPreference(i){this.connectionOptions=i,this.walletClientType="smartWalletOnly"===i?"coinbase_smart_wallet":"coinbase_wallet",this.proxyProvider.setWalletProvider(c(a,this.connectionOptions))}constructor(t,e,s,n,l,p){if(super("coinbase_wallet",t,e,s),this.connectorType="coinbase_wallet",this.displayName="Coinbase Wallet",this.proxyProvider=new r(void 0,this.rpcTimeoutDuration),this.subscribeListeners(),this.connectionOptions=n.coinbaseWallet.connectionOptions??"all",this.walletClientType="smartWalletOnly"===this.connectionOptions?"coinbase_smart_wallet":"coinbase_wallet","coinbase_smart_wallet"===this.walletClientType&&(this.displayName="Coinbase Smart Wallet"),!a){let s=[e.id].concat(t.map((i=>i.id))),n="eoaOnly"!==this.connectionOptions?s.filter((i=>!m.includes(i))):[];n.length>0&&!n.every((i=>o.has(i)))&&console.info(`The configured chains are not supported by Coinbase Smart Wallet: ${n.join(", ")}`),a=new i({appName:l,appLogoUrl:p,appChainIds:s})}this.proxyProvider.setWalletProvider(c(a,this.connectionOptions))}}export{l as CoinbaseWalletConnector};
