import{getPrivySolanaWallet as e}from"../client/user.mjs";import{PrivyClientError as t}from"../errors.mjs";import{usePrivyInternal as r}from"./internal-context.mjs";import{usePrivyContext as a}from"./privy-context.mjs";import{useWallets as o}from"./useWallets.mjs";import"@ethersproject/address";import"ofetch";import"react";import"./index.mjs";const l=()=>{let{exportSolanaWallet:l,createEmbeddedSolanaWallet:s,solanaWallets:m,delegateWallet:n}=r(),{ready:i}=o(),{user:d}=a();return{ready:i,createWallet:s,exportWallet:l,delegateWalletAction:async()=>{let r=e(d);if(!r)throw new t("User must have a solana wallet in order to delegate actions");return await n({address:r.address,chainType:"solana"})},wallets:m}};export{l as useSolanaWallets};
