import{useCallback as r}from"react";import{PrivyErrorCode as t}from"../errors.mjs";import{useCaptcha as e,CaptchaError as o}from"./captcha-context.mjs";import{usePrivyInternal as s}from"./internal-context.mjs";import"ofetch";import"react/jsx-runtime";import"./index.mjs";import"../utils/index.mjs";import"@ethersproject/providers";import"../connectors/get-legacy-injected-providers.mjs";import"../connectors/is-wallet-installed.mjs";const i=i=>{let n=e(),{smsOtpState:a,setSmsOtpState:c,initLoginWithSms:m,loginWithCode:p}=s();return{sendCode:r((async({phoneNumber:r,disableSignup:e})=>{try{let s;if(!r)throw Error("SMS required to send OTP code");if(n.enabled&&"error"===n.status)throw new o(n.error,null,t.CAPTCHA_FAILURE);return n.enabled&&"success"!==n.status&&(n.execute(),s=await n.waitForResult()),await m({phoneNumber:r,captchaToken:s,disableSignup:e,withPrivyUi:!1})}catch(r){throw c({status:"error",error:r}),i?.onError?.(r.privyErrorCode||t.UNKNOWN_AUTH_ERROR),r}}),[m]),loginWithCode:r((async({code:r})=>{try{if(n.enabled&&"success"!==n.status)throw new o(n.error,null,t.CAPTCHA_FAILURE);let{user:e,isNewUser:s,wasAlreadyAuthenticated:a,linkedAccount:c}=await p(r);i?.onComplete?.(e,s,a,"sms",c)}catch(r){throw c({status:"error",error:r}),i?.onError?.(r.privyErrorCode||t.UNKNOWN_AUTH_ERROR),r}}),[p,n.status]),state:a}};export{i as useLoginWithSms};
