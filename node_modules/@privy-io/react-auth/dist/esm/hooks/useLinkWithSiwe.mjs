import{useCallback as e}from"react";import{PrivyErrorCode as r}from"../errors.mjs";import{useCaptcha as t,CaptchaError as o}from"./captcha-context.mjs";import{usePrivyInternal as s}from"./internal-context.mjs";import"ofetch";import"react/jsx-runtime";import"./index.mjs";import"../utils/index.mjs";import"@ethersproject/providers";import"../connectors/get-legacy-injected-providers.mjs";import"../connectors/is-wallet-installed.mjs";const i=i=>{let n=t(),{siweState:a,setSiweState:c,linkWithSiwe:d,generateSiweMessage:l}=s();return{generateSiweMessage:e((async({address:e,chainId:t})=>{try{if(!e||!t)throw Error("wallet address and chainId required to generate nonce");return await l({address:e,chainId:t}).then((e=>e))}catch(e){throw c({status:"error",error:e}),i?.onError?.(e.privyErrorCode||r.UNKNOWN_AUTH_ERROR,{linkMethod:"siwe"}),e}}),[l]),linkWithSiwe:e((async({signature:e,message:t,chainId:s,walletClientType:a,connectorType:l})=>{try{if(n.enabled&&"success"!==n.status)throw new o(n.error,null,r.CAPTCHA_FAILURE);let{user:c,linkedAccount:m}=await d({message:t,signature:e,chainId:s,walletClientType:a,connectorType:l});m&&i?.onSuccess?.(c,"siwe",m)}catch(e){throw c({status:"error",error:e}),i?.onError?.(e.privyErrorCode||r.UNKNOWN_AUTH_ERROR,{linkMethod:"siwe"}),e}}),[d,n.status]),state:a}};export{i as useLinkWithSiwe};
