import{useRef as e,useCallback as r}from"react";import{getPrivySolanaWallet as t,getPrivyEthereumWallet as o}from"../client/user.mjs";import{WALLET_PROXY_TIMEOUT as a}from"../constants.mjs";import{usePrivyInternal as s}from"./internal-context.mjs";import{usePrivyContext as i}from"./privy-context.mjs";import"@ethersproject/address";import"./index.mjs";function d(){let{getAccessToken:d}=i(),{refreshUser:n,createAnalyticsEvent:l,initializeWalletProxy:c}=s(),m=e(!1);return{createWallet:r((async({user:e,recoveryPassword:r})=>{let s=await d();if(!s)throw l({eventName:"embedded_wallet_creation_failed",payload:{error:"Missing access token for user."}}),Error("An error has occured, please login again.");try{l({eventName:"embedded_wallet_creation_started"});let i=await c(a);if(!i)throw Error("walletProxy does not exist.");let d=new Promise(((e,r)=>{setTimeout((()=>{r(Error("walletProxy.create timed out."))}),2e4)})),w=t(e);if(!await Promise.race([i.create({accessToken:s,recoveryPassword:r,recoveryMethod:r?"user-passcode":void 0,solanaAddress:w?.address}),d]))throw Error("walletProxy.create did not send a response.");let p=await n();if(!p)throw Error("Failed to refresh user.");let f=o(p);if(!f)throw Error("Updated user is missing embedded wallet.");return l({eventName:"embedded_wallet_creation_completed",payload:{walletAddress:f.address}}),m.current=!0,f}catch(e){if(m.current)return;throw l({eventName:"embedded_wallet_creation_failed",payload:{error:e.toString()}}),console.warn(e),e}}),[])}}export{d as useCreateWallet};
