import{useState as o,useEffect as n}from"react";import{addToDefaultChains as i}from"../connectors/chains/utils.mjs";import{CHAIN_ID_MAINNET as r}from"../constants.mjs";import{usePrivyInternal as c}from"./internal-context.mjs";import{useGetSolPrice as s}from"./useGetSolPrice.mjs";import"../connectors/chains/index.mjs";import"../connectors/chains/arbitrum.mjs";import"../connectors/chains/arbitrumSepolia.mjs";import"../connectors/chains/avalanche.mjs";import"../connectors/chains/avalancheFuji.mjs";import"../connectors/chains/base.mjs";import"../connectors/chains/baseSepolia.mjs";import"../connectors/chains/berachainArtio.mjs";import"../connectors/chains/celo.mjs";import"../connectors/chains/celoAlfajores.mjs";import"../connectors/chains/filecoin.mjs";import"../connectors/chains/filecoinCalibration.mjs";import"../connectors/chains/garnetHolesky.mjs";import"../connectors/chains/holesky.mjs";import"../connectors/chains/linea.mjs";import"../connectors/chains/lineaTestnet.mjs";import"../connectors/chains/lukso.mjs";import"../connectors/chains/mainnet.mjs";import"../connectors/chains/optimism.mjs";import"../connectors/chains/optimismSepolia.mjs";import"../connectors/chains/polygon.mjs";import"../connectors/chains/polygonAmoy.mjs";import"../connectors/chains/redstone.mjs";import"../connectors/chains/sepolia.mjs";import"../connectors/chains/zora.mjs";import"../connectors/chains/zoraSepolia.mjs";import"../connectors/chains/zoraTestnet.mjs";import"./index.mjs";function e(e){let{tokenPrice:t,isTokenPriceLoading:a,tokenPriceError:m}=(s=>{let{showFiatPrices:e,getUsdTokenPrice:t,chains:a}=c(),[m,p]=o(!0),[h,l]=o(void 0),[j,d]=o(void 0);return n((()=>{s||=r;let o=i(a).find((o=>o.id===Number(s)));(async()=>{if(e){if(!o)return p(!1),void l(Error(`Unable to fetch token price on chain id ${s}`));try{p(!0);let n=await t(o);n?d(n):l(Error(`Unable to fetch token price on chain id ${o.id}`))}catch(o){l(o)}finally{p(!1)}}else p(!1)})()}),[s]),{tokenPrice:j,isTokenPriceLoading:m,tokenPriceError:h}})("solana"===e?-1:e),{solPrice:p,isSolPriceLoading:h,solPriceError:l}=s({enabled:"solana"===e});return"solana"===e?{tokenPrice:p,isTokenPriceLoading:h,tokenPriceError:l}:{tokenPrice:t,isTokenPriceLoading:a,tokenPriceError:m}}export{e as useGetTokenPrice};
