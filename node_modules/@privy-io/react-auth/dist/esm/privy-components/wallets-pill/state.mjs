import{create as e}from"zustand";import{shallow as t}from"zustand/shallow";import{createWithEqualityFn as l}from"zustand/traditional";import a from"../../storage.mjs";const o=e((()=>({isModalOpen:!1,resolvers:null})));let s=l((()=>({})),t);const r=(e,t)=>s((l=>l[e]?.[t])),n=(e,t,l)=>{s.setState((a=>({...a,[e]:{...a[e],[t]:l}})))},i=async()=>{let e,t,l=new Promise(((l,a)=>{e=l,t=a}));return s.setState({}),o.setState({isModalOpen:!0,resolvers:{resolve:e,reject:t}}),await l},p=()=>{let e=o.getState().resolvers;e||console.warn("useActiveWalletStore: Called close while modal was not open"),o.setState({isModalOpen:!1}),e?.resolve({wallet:o.getState().wallet})},d=({address:e,client:t,appId:l})=>{let s=`${t}:${e}`;l&&a.put(m(l),s),o.setState({wallet:s})},c=()=>o((e=>e.isModalOpen)),m=e=>`privy:${e}:active-wallet-connection`;export{p as close,i as open,d as setActiveWallet,m as toActiveWalletKey,n as updateBalance,o as useActiveWalletStore,r as useBalance,c as useIsModalOpen};
