import{getImportedPrivySolanaWallet as e,getImportedPrivyEthereumWallet as t}from"../client/user.mjs";import{PrivyErrorCode as r,PrivyClientError as o}from"../errors.mjs";import"@ethersproject/address";import"ofetch";const i=async({emitPrivyEvent:i,getAccessToken:a,initializeWalletProxy:n,refreshUser:s,user:c},{privateKey:l,chainType:E})=>{if(!c)throw i("linkAccount","onError",r.MUST_BE_AUTHENTICATED,{linkMethod:"siwe"}),new o("User must be authenticated before linking an account.");let[m,T]=await Promise.all([a(),n(15e3)]);if(!T||!m)throw i("linkAccount","onError",r.MUST_BE_AUTHENTICATED,{linkMethod:"siwe"}),new o("User must be authenticated before linking an account.");await T.importWallet({privateKey:l,accessToken:m,chainType:E});let h=await s(),p="solana"===E?e(h):t(h);if(!p)throw i("createWallet","onError",r.UNKNOWN_EMBEDDED_WALLET_ERROR),Error("Failed to import wallet");return i("createWallet","onSuccess",p),p};export{i as importWallet};
