import{jsx as o}from"react/jsx-runtime";import{useState as n,useEffect as t}from"react";import{getImportedPrivySolanaWallet as r,getPrivyPrimaryWallet as e,getSolanaSigningAndRootWallet as i,getEntropyDetailsFromAccount as s}from"../../client/user.mjs";import{useAppConfig as a}from"../../configuration/context.mjs";import{sendSolanaTransaction as c}from"../../embedded-wallets/solana/transaction.mjs";import{usePrivyInternal as m}from"../../hooks/internal-context.mjs";import{usePrivyModal as p}from"../../hooks/modal-context.mjs";import{usePrivyContext as l}from"../../hooks/privy-context.mjs";import{useGetSolPrice as d}from"../../hooks/useGetSolPrice.mjs";import{getSolanaNetworkFromRpcEndpoint as u}from"../../lib/solana/index.mjs";import{decodeSolanaTransaction as h,getNativeCurrencyFromLamports as j,getDollarsFromLamport as f,isVersionedTransaction as g,createSolanaTransactionReceipt as y}from"../../lib/solana/transaction.mjs";import{ErrorScreenView as S}from"../ErrorScreen.mjs";import{SendTransactionScreenView as T}from"../SendTransactionScreen/SendTransactionScreenView.mjs";import{TransactionErrorView as b}from"../SendTransactionScreen/TransactionErrorView.mjs";import{ModalScreen as I}from"../index.mjs";import{SolanaTransactionReceiptView as w}from"./SolanaTransactionReceiptView.mjs";import"@ethersproject/address";import"../../config.mjs";import"../../configuration/defaultClientConfig.mjs";import"../../constants.mjs";import"../../configuration/login-methods.mjs";import"../../configuration/wallets.mjs";import"../../connectors/chains/index.mjs";import"../../connectors/chains/arbitrum.mjs";import"../../connectors/chains/arbitrumSepolia.mjs";import"../../connectors/chains/avalanche.mjs";import"../../connectors/chains/avalancheFuji.mjs";import"../../connectors/chains/base.mjs";import"../../connectors/chains/baseSepolia.mjs";import"../../connectors/chains/berachainArtio.mjs";import"../../connectors/chains/celo.mjs";import"../../connectors/chains/celoAlfajores.mjs";import"../../connectors/chains/filecoin.mjs";import"../../connectors/chains/filecoinCalibration.mjs";import"../../connectors/chains/garnetHolesky.mjs";import"../../connectors/chains/holesky.mjs";import"../../connectors/chains/linea.mjs";import"../../connectors/chains/lineaTestnet.mjs";import"../../connectors/chains/lukso.mjs";import"../../connectors/chains/mainnet.mjs";import"../../connectors/chains/optimism.mjs";import"../../connectors/chains/optimismSepolia.mjs";import"../../connectors/chains/polygon.mjs";import"../../connectors/chains/polygonAmoy.mjs";import"../../connectors/chains/redstone.mjs";import"../../connectors/chains/sepolia.mjs";import"../../connectors/chains/zora.mjs";import"../../connectors/chains/zoraSepolia.mjs";import"../../connectors/chains/zoraTestnet.mjs";import"../../connectors/chains/utils.mjs";import"../../theme.mjs";import"tinycolor2";import"../../lib/cybr53.mjs";import"../../utils/buffer/readBigInt64LE.mjs";import"../../hooks/index.mjs";import"../../components/PrefetchedImage.mjs";import"@heroicons/react/24/outline/ExclamationTriangleIcon";import"@heroicons/react/24/outline/PhoneIcon";import"styled-components";import"../../components/Button.mjs";import"../../components/Loader.mjs";import"../../components/CircleBorder.mjs";import"../../components/ModalHeader.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../../components/layout/StackedContainer.mjs";import"../../embedded-wallets/errors.mjs";import"../../embedded-wallets/types.mjs";import"../../errors.mjs";import"ofetch";import"../../hooks/captcha-context.mjs";import"../../utils/index.mjs";import"@ethersproject/providers";import"../../connectors/get-legacy-injected-providers.mjs";import"../../connectors/is-wallet-installed.mjs";import"../../svg/lock-closed.mjs";import"@heroicons/react/24/outline";import"../../components/ModalFooter.mjs";import"../../svg/protected-by-privy.mjs";import"../../components/ui/layout/Row.mjs";import"../../components/ui/typography/ErrorMessage.mjs";import"../../components/ui/typography/LabelSm.mjs";import"../../components/ui/typography/Subtitle.mjs";import"../../components/ui/typography/Title.mjs";import"../../components/ui/typography/Value.mjs";import"../../components/ui/animation/LoadingSkeleton.mjs";import"../../components/ui/wallet/Address.mjs";import"@heroicons/react/24/outline/CheckIcon";import"@heroicons/react/24/outline/Square2StackIcon";import"../../components/ui/wallet/WalletInfoCard.mjs";import"../../components/ui/chips/Chip.mjs";import"../../components/ui/layout/Column.mjs";import"../../components/ui/typography/LabelXs.mjs";import"../../components/ui/wallet/shared.mjs";import"../LandingScreen/styles.mjs";import"../SendTransactionScreen/TransactionDetail.mjs";import"../SendTransactionScreen/useTransactionDetails.mjs";import"@heroicons/react/24/outline/ClipboardDocumentCheckIcon";import"@heroicons/react/24/outline/ClipboardDocumentIcon";import"@heroicons/react/24/outline/ExclamationCircleIcon";import"../SendTransactionScreen/EthersTransactionError.mjs";import"@ethersproject/logger";import"@heroicons/react/24/outline/CheckCircleIcon";import"../../components/CircleBackground.mjs";import"../../components/Layouts.mjs";import"../../components/ScreenHeader.mjs";import"../../components/embedded-wallets/SolanaTransactionDetails.mjs";import"@heroicons/react/24/outline/ChevronDownIcon";import"../../components/embedded-wallets/PriceDisplay.mjs";import"../../lib/ethers.mjs";import"@ethersproject/bignumber";import"@ethersproject/units";import"@privy-io/js-sdk-core";import"../../components/embedded-wallets/WalletLink.mjs";const k=()=>{let{data:k,onUserCloseViaDialogOrKeybindRef:C,setModalData:v,navigate:x}=p(),{closePrivyModal:E,walletProxy:O}=m(),L=a(),{user:A,getAccessToken:D}=l(),[B,P]=n(k?.sendSolanaTransaction?.transactionRequest),[F,M]=n(),[V,R]=n(),[W,H]=n(0),[N,U]=n(!1),[q,z]=n(),[_,G]=n(null),X=k?.sendSolanaTransaction?.connection,K=k?.sendSolanaTransaction?.transactingWallet,Q=F?.instructions.at(W),$=F?.instructions.length??1,J=u(X?.rpcEndpoint||""),Y=K?.imported?r(A):e(A);if(t((()=>{!async function(){if(B&&X)try{R(void 0);let o=await h(B,X);M(o),H(0)}catch(o){console.warn("Failed to prepare transaction",o),R(o)}}()}),[B,X]),!(B&&k?.sendSolanaTransaction&&K&&X)){let n=Error("Invalid transaction request");/*#__PURE__*/return o(S,{error:n,onClick:()=>{k?.sendSolanaTransaction?.onFailure(n),E({shouldCallAuthOnSuccess:!1})}})}let{solPrice:Z,isSolPriceLoading:oo}=d(),no=()=>{if(!N)return q?k?.sendSolanaTransaction?.onSuccess(q):(k?.sendSolanaTransaction?.onFailure(_??V??Error("User exited the modal before submitting the transaction")),H(0)),E({shouldCallAuthOnSuccess:!1})};C.current=no;let to="fiat-currency"===L.embeddedWallets.priceDisplay.primary,ro=k.sendTransaction?.uiOptions?.transactionInfo?.title||("approve"===Q?.action?"Confirm address":"Approve transaction"),eo=k.sendTransaction?.uiOptions?.description||`${L.name} wants your permission to approve the following transaction.`,io=k.sendTransaction?.uiOptions?.transactionInfo?.contractInfo?.imgUrl?/*#__PURE__*/o("img",{src:k.sendTransaction.uiOptions.transactionInfo.contractInfo.imgUrl,alt:k.sendTransaction.uiOptions.transactionInfo.contractInfo.imgAltText}):null,so=Q?.amount||0n,ao=0===W&&F?.fees||0n,co=Q?.balance||0n,mo=Q?.to,po=so+ao,lo=j(po),uo=to&&Z?f(po,Z):void 0,ho=ao?j(ao):void 0,jo=to&&Z?f(ao,Z):void 0,fo=co?j(co):void 0,go=to&&Z?f(co,Z):void 0,yo=!V&&!Q?.hasFunds,So=!!(k.funding&&k.funding.supportedOptions.length>0),To=yo&&So,bo=To?"Add funds":k.sendTransaction?.uiOptions?.buttonText||"Approve";return q?/*#__PURE__*/o(w,{instructions:F?.instructions.map((({from:o,to:n,amount:t})=>({from:o?.toBase58(),to:n?.toBase58(),amount:t})))??[],fees:0===W?q.fees:0n,onClose:no,transactionInfo:k.sendTransaction?.uiOptions.transactionInfo,solPrice:Z,receiptHeader:k.sendTransaction?.uiOptions.successHeader,receiptDescription:k.sendTransaction?.uiOptions.successDescription,rpcEndpoint:X.rpcEndpoint}):_?/*#__PURE__*/o(b,{transactionError:_,connection:X,onClose:no,network:"solana",onRetry:async()=>{G(null);let{blockhash:o}=await X.getLatestBlockhash();g(B)?B.message.recentBlockhash=o:B.recentBlockhash=o,P(B)}}):/*#__PURE__*/o(T,{isSubmitting:N,submitError:_,isPreparing:!F,isTokenPriceLoading:oo,isTokenContractInfoLoading:!1,symbol:"SOL",chain:void 0,img:io,title:ro,subtitle:eo,from:K.address||"",to:mo?.toBase58(),fee:jo??ho,total:null!=so?uo??lo:void 0,txValue:so,spender:Q?.spender?.toBase58(),network:J,cta:bo,missingFunds:yo,action:Q?.action,balance:go??fo,prepareError:V,chainName:"Solana",onClose:no,onClick:To?async()=>{if(!K)return;if(!So)throw Error("Funding wallet is not enabled");let o=I.FUNDING_METHOD_SELECTION_SCREEN;v({...k,funding:{...k.funding,methodScreen:o}}),x(o)}:async()=>{if(W<(F?.instructions.length??1)-1)H(W+1);else try{U(!0);let o=await D();if(N||!o||!K||!O||!A||!Y)return;let{rootWallet:n}=i(A,K.address);if(!n)throw Error("No root wallet for transacting wallet found");let{entropyId:t,entropyIdVerifier:r}=s(n),{signature:e,receipt:a}=await c({tx:B,accessToken:o,connection:X,walletProxy:O,entropyId:t,entropyIdVerifier:r,transactingWalletAddress:K.address,transactingWalletIndex:K.walletIndex??0,transactionOptions:k.sendSolanaTransaction?.transactionOptions});z(y(e,a))}catch(o){console.warn({transaction:B,error:o}),G(o)}finally{U(!1)}},isSponsored:!1,transactionIndex:W,maxIndex:$-1,disabled:yo&&!So,onBack:W>0&&$>1?()=>H(W-1):void 0})};export{k as SendSolanaTransactionScreen};
