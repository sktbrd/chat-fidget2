import{BigNumber as t}from"@ethersproject/bignumber";import{useState as e,useEffect as s}from"react";import{populateTransactionRequest as r,calculateTotalGasEstimate as o}from"@privy-io/js-sdk-core";import{getAndCheckBalance as a}from"../../embedded-wallets/rpc/index.mjs";import{usePrivyInternal as i}from"../../hooks/internal-context.mjs";import{usePrivyContext as n}from"../../hooks/privy-context.mjs";import"@ethersproject/providers";import"../../constants.mjs";import"../../hooks/index.mjs";const m=(m,l,c)=>{let[u,p]=e(null),{getAccessToken:h}=n(),{walletProxy:d}=i();return s((()=>{u&&p(null),(async()=>{if(!await h()||!d||!l)return null;let e=[],s=await r(l.address,m,c).catch((t=>(e.push(t),m))),{totalGasEstimate:i,l1ExecutionFeeEstimate:n}=await o(s,c).catch((t=>(e.push(t),{totalGasEstimate:null,l1ExecutionFeeEstimate:null}))),{balance:u,hasSufficientFunds:p}=await a(l.address,s,i??t.from(0),c).catch((t=>(e.push(t),{balance:null,hasSufficientFunds:!1})));return{tx:s,totalGasEstimate:i,l1ExecutionFeeEstimate:n,balance:u,hasFunds:p,errors:e}})().then(p)}),[m]),u};export{m as usePrepareTransaction};
