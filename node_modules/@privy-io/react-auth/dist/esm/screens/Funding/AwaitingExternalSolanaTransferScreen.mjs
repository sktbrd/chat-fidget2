import{jsxs as o,Fragment as t,jsx as e}from"react/jsx-runtime";import n from"@heroicons/react/24/outline/CheckCircleIcon";import{useState as r,useRef as i,useEffect as s}from"react";import{RefactorSpacerTop as m,CenteredItemWithGap as a,RefactorSpacerBottom as c}from"../../components/Layouts.mjs";import{BlobbyFooter as l}from"../../components/ModalFooter.mjs";import{CenteredScreenHeader as p}from"../../components/ScreenHeader.mjs";import u from"../../components/embedded-wallets/FundWalletMethodHeader.mjs";import{NeutralSpinner as d}from"../../components/primitives/NeutralSpinner/index.mjs";import{DEFAULT_SUCCESS_SCREEN_EXTRA_LONG_DURATION_MS as j}from"../../constants.mjs";import{PrivyClientError as h,PrivyErrorCode as f}from"../../errors.mjs";import{usePrivyInternal as g}from"../../hooks/internal-context.mjs";import{usePrivyModal as v}from"../../hooks/modal-context.mjs";import{useGetTokenPrice as y}from"../../hooks/useGetTokenPrice.mjs";import{toDisplayName as w}from"../../lib/external-wallets/displayHelpers.mjs";import{ON_RAMP_COMPLETE_ANALYTICS_EVENT as I}from"../../lib/funding/analytics.mjs";import{getSolanaRpcEndpointForCluster as T}from"../../lib/solana/index.mjs";import{getSolanaFormattedAmounts as b}from"../../lib/solana/transaction.mjs";import{usePlugins as S}from"../../plugins/context/PrivyPluginContext.mjs";import{SOLANA_FUNDING_PLUGIN_ID as A}from"../../plugins/solana-funding/id.mjs";import{formatWalletAddress as k}from"../../utils/index.mjs";import{ModalScreen as N}from"../index.mjs";import{TransferOrBridgeLoadingScreen as C}from"./TransferOrBridgeLoadingScreen.mjs";import{useSolanaWallets as x}from"../../hooks/useSolanaWallets.mjs";import"styled-components";import"../../svg/protected-by-privy.mjs";import"../../components/ModalHeader.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../../configuration/context.mjs";import"../../config.mjs";import"../../configuration/defaultClientConfig.mjs";import"../../configuration/login-methods.mjs";import"../../configuration/wallets.mjs";import"../../connectors/chains/index.mjs";import"../../connectors/chains/arbitrum.mjs";import"../../connectors/chains/arbitrumSepolia.mjs";import"../../connectors/chains/avalanche.mjs";import"../../connectors/chains/avalancheFuji.mjs";import"../../connectors/chains/base.mjs";import"../../connectors/chains/baseSepolia.mjs";import"../../connectors/chains/berachainArtio.mjs";import"../../connectors/chains/celo.mjs";import"../../connectors/chains/celoAlfajores.mjs";import"../../connectors/chains/filecoin.mjs";import"../../connectors/chains/filecoinCalibration.mjs";import"../../connectors/chains/garnetHolesky.mjs";import"../../connectors/chains/holesky.mjs";import"../../connectors/chains/linea.mjs";import"../../connectors/chains/lineaTestnet.mjs";import"../../connectors/chains/lukso.mjs";import"../../connectors/chains/mainnet.mjs";import"../../connectors/chains/optimism.mjs";import"../../connectors/chains/optimismSepolia.mjs";import"../../connectors/chains/polygon.mjs";import"../../connectors/chains/polygonAmoy.mjs";import"../../connectors/chains/redstone.mjs";import"../../connectors/chains/sepolia.mjs";import"../../connectors/chains/zora.mjs";import"../../connectors/chains/zoraSepolia.mjs";import"../../connectors/chains/zoraTestnet.mjs";import"../../connectors/chains/utils.mjs";import"../../theme.mjs";import"tinycolor2";import"../../lib/cybr53.mjs";import"../../hooks/index.mjs";import"ofetch";import"../../components/PrefetchedImage.mjs";import"../../hooks/useGetSolPrice.mjs";import"../../svg/brave-browser-icon.mjs";import"../../svg/bybit.mjs";import"../../svg/coinbase-wallet.mjs";import"../../svg/cryptocom.mjs";import"../../svg/metamask.mjs";import"../../svg/phantom.mjs";import"../../svg/rabby.mjs";import"../../svg/rainbow.mjs";import"../../svg/safe.mjs";import"../../svg/uniswap.mjs";import"../../svg/universal-profile.mjs";import"../../svg/wallet-connect.mjs";import"../../svg/zerion.mjs";import"../../utils/buffer/readBigInt64LE.mjs";import"@ethersproject/providers";import"../../connectors/get-legacy-injected-providers.mjs";import"../../connectors/is-wallet-installed.mjs";import"../../components/external-wallets/InjectedWalletIcon.mjs";import"@heroicons/react/24/outline/WalletIcon";import"../../components/ui/layout/Row.mjs";import"../../components/ui/typography/LabelSm.mjs";import"../../components/ui/typography/Value.mjs";import"../../components/ui/animation/LoadingSkeleton.mjs";import"../../components/ui/wallet/Address.mjs";import"@heroicons/react/24/outline/CheckIcon";import"@heroicons/react/24/outline/Square2StackIcon";import"../../components/ui/wallet/NetworkIcon.mjs";import"@heroicons/react/24/outline/GlobeAltIcon";import"../../components/ui/icons/Arbitum.mjs";import"../../components/ui/icons/Avalanche.mjs";import"../../components/ui/icons/Base.mjs";import"../../components/ui/icons/Celo.mjs";import"../../components/ui/icons/Linea.mjs";import"../../components/ui/icons/Mainnnet.mjs";import"../../components/ui/icons/Optimism.mjs";import"../../components/ui/icons/Polygon.mjs";import"../../components/ui/icons/Solana.mjs";import"../../components/ui/icons/Zora.mjs";import"../../client/user.mjs";import"@ethersproject/address";import"../../hooks/privy-context.mjs";import"../../hooks/useWallets.mjs";const E=()=>{let{closePrivyModal:E,createAnalyticsEvent:P}=g(),{navigate:R,setModalData:F,app:L,data:U}=v(),{wallets:M}=x(),_=S(),[O,W]=r(0n),[B,H]=r(null),[z,G]=r(!1),[D,$]=r(!1),q=i(!1);if(!U?.funding||"solana"!==U.funding.chainType)throw Error("Invalid funding data");let{address:Q,amount:V,cluster:X,connectedWalletAddress:Y}=U.funding,Z=T(X),{tokenPrice:J}=y("solana"),{fundingAmountInBaseUnit:K,totalPriceInUsd:oo,totalPriceInNativeCurrency:to,feePriceInNativeCurrency:eo,feePriceInUsd:no}=b({amount:V,fee:O,tokenPrice:J}),ro=Y?M.find((({address:o})=>o===Y)):M[0];if(s((()=>{(async()=>{if("solana"===ro?.type&&ro.sendTransaction&&!z&&!q.current){q.current=!0;try{let o=_(A);if(!o)throw new h("Unable to load solana plugin");let{connection:t,transaction:e}=await o.createTransferTransaction({from:ro.address,to:Q,amount:K,cluster:X}),n=await e.getEstimatedFee(t);null!=n&&W(BigInt(n)),G(!0);let r=await t.simulateTransaction(e);if(r.value.err)return r.value.logs?.find((o=>/insufficient (lamports|funds)/gi.test(o)))?void H(new h(`Wallet ${k(ro.address,void 0,void 0,"solana")} does not have enough funds.`,void 0,f.INSUFFICIENT_BALANCE)):(console.error("Transaction failed:",r.value.err),void H(new h("Something went wrong",void 0,f.TRANSACTION_FAILURE)));let i=await ro.sendTransaction(e,t);P({eventName:I,payload:{provider:"external",status:"success",address:ro.address,value:K.toString(),txHash:i,chainType:"solana",rpcEndpoint:Z}}),G(!1),$(!0)}catch(o){if(console.error(o),G(!1),/user rejected the request/gi.test(o.message||""))return void H(new h("Transaction was rejected by the user",void 0,f.TRANSACTION_FAILURE));H(new h("Something went wrong",void 0,f.TRANSACTION_FAILURE))}}})().catch(console.error).finally((()=>q.current=!1))}),[]),s((()=>{if(!B)return;let o={error:B,previousScreen:N.FUNDING_TRANSFER_FROM_WALLET_SCREEN};F({funding:U?.funding,sendTransaction:U?.sendTransaction,errorModalData:o}),R(N.ERROR_SCREEN,!1)}),[B]),s((()=>{if(!D)return;let o=setTimeout(E,j);return()=>clearTimeout(o)}),[D]),D/*#__PURE__*/)return o(t,{children:[/*#__PURE__*/e(u,{}),/*#__PURE__*/e(m,{}),/*#__PURE__*/o(a,{children:[/*#__PURE__*/e(n,{color:"var(--privy-color-success)",width:"64px",height:"64px"}),/*#__PURE__*/e(p,{title:"Success!",description:`Youâ€™ve successfully added ${V} SOL to your ${L.name} wallet. It may take a minute before the funds are available to use.`})]}),/*#__PURE__*/e(c,{}),/*#__PURE__*/e(l,{})]});let io=ro?w(ro.walletClientType,ro.connectorType,ro.walletClientType)||"wallet":null;return ro&&z?/*#__PURE__*/e(C,{wallet:ro,displayName:io,addressToFund:Q,isBridging:!1,isErc20Flow:!1,totalPriceInUsd:oo,totalPriceInNativeCurrency:to,gasPriceInUsd:no,gasPriceInNativeCurrency:eo,chainId:"solana",chainName:X.name}):
/*#__PURE__*/o(t,{children:[/*#__PURE__*/e(u,{}),/*#__PURE__*/e(d,{}),/*#__PURE__*/e("div",{style:{marginTop:"1rem"}}),/*#__PURE__*/e(l,{})]})};export{E as AwaitingExternalSolanaTransferScreen};
