import{defaultClientConfig as e}from"./configuration/defaultClientConfig.mjs";import{toCustomLoginMethodConfig as n}from"./configuration/login-methods.mjs";import{toWalletListConfig as o}from"./configuration/wallets.mjs";import{DEFAULT_SUPPORTED_CHAINS as t}from"./connectors/chains/index.mjs";import{mainnet as a}from"./connectors/chains/mainnet.mjs";import{addPrivyRpcToChain as i}from"./connectors/chains/utils.mjs";import{SOLANA_MAINNET_RPC_URL as l,SOLANA_TESTNET_RPC_URL as s,SOLANA_DEVNET_RPC_URL as r}from"./lib/solana/index.mjs";import{generatePalette as c}from"./theme.mjs";import"./constants.mjs";import"./connectors/chains/arbitrum.mjs";import"./connectors/chains/arbitrumSepolia.mjs";import"./connectors/chains/avalanche.mjs";import"./connectors/chains/avalancheFuji.mjs";import"./connectors/chains/base.mjs";import"./connectors/chains/baseSepolia.mjs";import"./connectors/chains/berachainArtio.mjs";import"./connectors/chains/celo.mjs";import"./connectors/chains/celoAlfajores.mjs";import"./connectors/chains/filecoin.mjs";import"./connectors/chains/filecoinCalibration.mjs";import"./connectors/chains/garnetHolesky.mjs";import"./connectors/chains/holesky.mjs";import"./connectors/chains/linea.mjs";import"./connectors/chains/lineaTestnet.mjs";import"./connectors/chains/lukso.mjs";import"./connectors/chains/optimism.mjs";import"./connectors/chains/optimismSepolia.mjs";import"./connectors/chains/polygon.mjs";import"./connectors/chains/polygonAmoy.mjs";import"./connectors/chains/redstone.mjs";import"./connectors/chains/sepolia.mjs";import"./connectors/chains/zora.mjs";import"./connectors/chains/zoraSepolia.mjs";import"./connectors/chains/zoraTestnet.mjs";import"tinycolor2";function d(t,a,i){let d,p,m,u,g,f,C,y,b,w,W,A,j,M,O,v,U=i?console.warn:()=>{};a?.loginMethods?(d=a.loginMethods.includes("email"),p=a.loginMethods.includes("sms"),u=a.loginMethods.includes("wallet"),g=a.loginMethods.includes("google"),f=a.loginMethods.includes("twitter"),C=a.loginMethods.includes("discord"),b=a.loginMethods.includes("spotify"),w=a.loginMethods.includes("instagram"),y=a.loginMethods.includes("tiktok"),A=a.loginMethods.includes("github"),W=a.loginMethods.includes("linkedin"),j=a.loginMethods.includes("apple"),M=a.loginMethods.includes("farcaster"),O=a.loginMethods.includes("telegram")):(d=t.emailAuth,p=t.smsAuth,u=t.walletAuth||t.solanaWalletAuth,g=t.googleOAuth,f=t.twitterOAuth,C=t.discordOAuth,A=t.githubOAuth,b=t.spotifyOAuth,w=t.instagramOAuth,y=t.tiktokOAuth,W=t.linkedinOAuth,j=t.appleOAuth,M=t.farcasterAuth,O=t.telegramAuth),"undefined"!=typeof window&&"function"!=typeof window.PublicKeyCredential?m=!1:t.passkeyAuth&&(m=!0);let P=[d,p].filter(Boolean),k=[g,f,C,A,b,w,y,W,j,M,O].filter(Boolean),x=[u].filter(Boolean);if(P.length+k.length+x.length===0)throw Error("You must enable at least one login method");let S=void 0!==a?.appearance?.showWalletLoginFirst?a?.appearance?.showWalletLoginFirst:t.showWalletLoginFirst;S&&0===x.length?(U("You should only enable `showWalletLoginFirst` when `wallet` logins are also enabled. `showWalletLoginFirst` has been set to false"),S=!1):S||k.length+P.length!==0||(U("You should only disable `showWalletLoginFirst` when `email`, `sms`, or social logins are also enabled. `showWalletLoginFirst` has been set to true"),S=!0);let T=a?.externalWallets?.walletConnect?.enabled??!0;a?.loginMethods&&a.loginMethodsAndOrder&&U("You should only configure one of `loginMethods` or `loginMethodsAndOrder`");let F=o({input:a?.appearance?.walletList,overrides:a?.loginMethodsAndOrder}),E=n({input:a?.loginMethodsAndOrder}),L=a?.intl?.defaultCountry??"US",{chains:I,defaultChain:q}=h({additionalChains:a?.additionalChains,supportedChains:a?.supportedChains,defaultChainFromConfig:a?.defaultChain,hasRpcConfigDefined:Object.keys(a?.rpcConfig?.rpcUrls??{}).length>0}),D=!!a?.defaultChain,R=a?.customAuth?.getCustomAccessToken&&!1!==a?.customAuth?.enabled,Y=!(t.enforceWalletUis??1);if(v=t.legacyWalletUiConfig??1?R?a?.embeddedWallets?.noPromptOnSignature??!0:a?.embeddedWallets?.noPromptOnSignature??Y:Y,!1===a?.embeddedWallets?.waitForTransactionConfirmation&&!0!==v)throw Error("Overriding `config.embeddedWallets.waitForTransactionConfirmation` requires that you disable wallet UIs in the dashboard.");let{requireUserPasswordOnCreate:H,...z}=a?.embeddedWallets??{},B=a?.solanaClusters??[];return t.solanaWalletAuth&&!a?.externalWallets?.solana?.connectors&&console.warn("App configuration has Solana wallet login enabled, but no Solana wallet connectors have been passed to Privy. Make sure to pass Solana connectors to the `config.externalWallets.solana.connectors` field of the `PrivyProvider`"),{id:t.id,name:t.name,allowlistConfig:t.allowlistConfig,legacyWalletUiConfig:t.legacyWalletUiConfig,appearance:{logo:a?.appearance?.logo??t.logoUrl,landingHeader:a?.appearance?.landingHeader??e.appearance.landingHeader,loginMessage:"string"==typeof a?.appearance?.loginMessage?a?.appearance?.loginMessage.slice(0,100):a?.appearance?.loginMessage,palette:c({backgroundTheme:a?.appearance?.theme??e.appearance.theme,accentHex:a?.appearance?.accentColor??t.accentColor??e.appearance.accentColor}),loginGroupPriority:S?"web3-first":"web2-first",hideDirectWeb2Inputs:!!a?.appearance?.hideDirectWeb2Inputs,walletList:F,walletChainType:a?.appearance?.walletChainType??(({evmWalletAuth:e,solanaWalletAuth:n})=>e&&n?"ethereum-and-solana":e?"ethereum-only":n?"solana-only":"ethereum-only")({evmWalletAuth:t.walletAuth??!1,solanaWalletAuth:t.solanaWalletAuth??!1})},loginMethods:{wallet:u,email:d,sms:p,passkey:m,google:g,twitter:f,discord:C,github:A,spotify:b,instagram:w,tiktok:y,linkedin:W,apple:j,farcaster:M,telegram:O},disablePlusEmails:t.disablePlusEmails,loginMethodsAndOrder:E,legal:{termsAndConditionsUrl:a?.legal?.termsAndConditionsUrl??t.termsAndConditionsUrl,privacyPolicyUrl:a?.legal?.privacyPolicyUrl??t.privacyPolicyUrl,requireUsersAcceptTerms:t.requireUsersAcceptTerms??!1},walletConnectCloudProjectId:a?.walletConnectCloudProjectId??t.walletConnectCloudProjectId??e.walletConnectCloudProjectId,rpcConfig:{rpcUrls:a?.rpcConfig?.rpcUrls??e.rpcConfig.rpcUrls,rpcTimeouts:a?.rpcConfig?.rpcTimeouts??e.rpcConfig.rpcTimeouts},chains:I,solanaClusters:{"mainnet-beta":B.find((e=>"mainnet-beta"===e.name))?.rpcUrl||l,testnet:B.find((e=>"testnet"===e.name))?.rpcUrl||s,devnet:B.find((e=>"devnet"===e.name))?.rpcUrl||r},defaultChain:q,intl:{defaultCountry:L},shouldEnforceDefaultChainOnConnect:D,captchaEnabled:t.captchaEnabled??e.captchaEnabled,captchaSiteKey:t.captchaSiteKey,externalWallets:{coinbaseWallet:{connectionOptions:a?.externalWallets?.coinbaseWallet?.connectionOptions??e.externalWallets.coinbaseWallet.connectionOptions},walletConnect:{enabled:T},solana:{connectors:a?.externalWallets?.solana?.connectors}},embeddedWallets:{...t.embeddedWalletConfig,..."boolean"==typeof H?{requireUserOwnedRecoveryOnCreate:H}:{},...R?{createOnLogin:"all-users",requireUserOwnedRecoveryOnCreate:!1,userOwnedRecoveryOptions:["user-passcode"]}:{},waitForTransactionConfirmation:!0,priceDisplay:{primary:"fiat-currency",secondary:"native-token"},...z,noPromptOnSignature:v,showWalletUIs:a?.embeddedWallets?.showWalletUIs,extendedCalldataDecoding:a?.embeddedWallets?.extendedCalldataDecoding},mfa:{methods:t.mfaMethods??[],noPromptOnMfaRequired:a?.mfa?.noPromptOnMfaRequired??!1},customAuth:R?{enabled:!0,...a.customAuth}:void 0,loginConfig:{telegramAuthConfiguration:t.telegramAuthConfiguration},headless:!!a?.headless,render:{standalone:a?._render?.standalone??e._render.standalone},fundingConfig:t.fundingConfig,fundingMethodConfig:{...a?.fundingMethodConfig??e.fundingMethodConfig,moonpay:{...a?.fundingMethodConfig?.moonpay??e.fundingMethodConfig.moonpay,useSandbox:a?.fundingMethodConfig?.moonpay.useSandbox??a?.fiatOnRamp?.useSandbox??e.fundingMethodConfig.moonpay.useSandbox}}}}function p(e,n){if(!e)return{legacyCreateEmbeddedWalletFlag:n};let{appearance:o,additionalChains:t,supportedChains:a,defaultChain:i,externalWallets:l,...s}=e;return{...s,...t?{additionalChains:t.map((e=>e.id))}:void 0,...a?{supportedChains:a.map((e=>e.id))}:void 0,...i?{defaultChain:i.id}:void 0,...l?{walletConnect:l.walletConnect,coinbaseWallet:l.coinbaseWallet,solana:{connectors:l.solana?.connectors?.get().map((e=>e.walletClientType))}}:void 0,legacyCreateEmbeddedWalletFlag:n}}function h({additionalChains:e,supportedChains:n,defaultChainFromConfig:o,hasRpcConfigDefined:l}){let s;if(e&&n&&console.warn("You should only specify one of `additionalChains` or `supportedChains`. Using `supportedChains`."),n){if(0===n.length)throw Error("`supportedChains` must contain at least one chain");n.filter((e=>e.rpcUrls.privyWalletOverride)).length>0&&l&&console.warn("You have specified at least one `supportedChain` with `privyWalletOverride` but also have `rpcConfig` defined. The `rpcConfig` will be ignored. `rpcConfig` is deprecated and you should use `privyWalletOverride` in a `supportedChain`."),s=n.map((e=>{if(e.rpcUrls.privyWalletOverride)return e;let n=t.find((n=>n.id===e.id)),o=n?.rpcUrls.privy?.http[0];return o?i(e,o):e}))}else s=t.concat(e??[]);let r=n?s[0]:a,c=o??r;if(!s.find((e=>e.id===c.id)))throw Error("`defaultChain` must be included in `supportedChains`");return{chains:s,defaultChain:c}}export{h as buildChainsAndDefaultChain,d as generateAppConfig,p as generateClientConfigAnalyticsPayload};
