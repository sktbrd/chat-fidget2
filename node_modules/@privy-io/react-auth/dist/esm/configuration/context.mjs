import{jsx as o}from"react/jsx-runtime";import{useState as n,useMemo as t,useEffect as e,useContext as i,createContext as r}from"react";import{generateAppConfig as s,generateClientConfigAnalyticsPayload as c}from"../config.mjs";import{cyrb53 as a}from"../lib/cybr53.mjs";import"./defaultClientConfig.mjs";import"../constants.mjs";import"./login-methods.mjs";import"./wallets.mjs";import"../connectors/chains/index.mjs";import"../connectors/chains/arbitrum.mjs";import"../connectors/chains/arbitrumSepolia.mjs";import"../connectors/chains/avalanche.mjs";import"../connectors/chains/avalancheFuji.mjs";import"../connectors/chains/base.mjs";import"../connectors/chains/baseSepolia.mjs";import"../connectors/chains/berachainArtio.mjs";import"../connectors/chains/celo.mjs";import"../connectors/chains/celoAlfajores.mjs";import"../connectors/chains/filecoin.mjs";import"../connectors/chains/filecoinCalibration.mjs";import"../connectors/chains/garnetHolesky.mjs";import"../connectors/chains/holesky.mjs";import"../connectors/chains/linea.mjs";import"../connectors/chains/lineaTestnet.mjs";import"../connectors/chains/lukso.mjs";import"../connectors/chains/mainnet.mjs";import"../connectors/chains/optimism.mjs";import"../connectors/chains/optimismSepolia.mjs";import"../connectors/chains/polygon.mjs";import"../connectors/chains/polygonAmoy.mjs";import"../connectors/chains/redstone.mjs";import"../connectors/chains/sepolia.mjs";import"../connectors/chains/zora.mjs";import"../connectors/chains/zoraSepolia.mjs";import"../connectors/chains/zoraTestnet.mjs";import"../connectors/chains/utils.mjs";import"../lib/solana/index.mjs";import"../theme.mjs";import"tinycolor2";let m={showWalletLoginFirst:!0,allowlistConfig:{errorTitle:null,errorDetail:null,errorCtaText:null,errorCtaLink:null},walletAuth:!0,emailAuth:!0,smsAuth:!1,googleOAuth:!1,twitterOAuth:!1,discordOAuth:!1,githubOAuth:!1,linkedinOAuth:!1,appleOAuth:!1,disablePlusEmails:!1,termsAndConditionsUrl:null,privacyPolicyUrl:null,embeddedWalletConfig:{createOnLogin:"off",requireUserOwnedRecoveryOnCreate:!1,userOwnedRecoveryOptions:["user-passcode"]},fiatOnRampEnabled:!1,captchaEnabled:!1,captchaSiteKey:"",enforceWalletUis:!1,legacyWalletUiConfig:!1};const l=s(m,void 0,!1);let p=/*#__PURE__*/r({appConfig:l,isServerConfigLoaded:!1});const h=({children:i,legacyCreateEmbeddedWalletFlag:r,client:l,clientConfig:h})=>{let[j,d]=n(null),u=t((()=>s(j??m,h,!!j)),[j,h]);return e((()=>{if(!j)return;let o=c(h,r),n=a(JSON.stringify(o)).toString(),t=`privy:sent:${j.id}:${n}`;localStorage.getItem(t)||(l.createAnalyticsEvent({eventName:"sdk_initialize",payload:o}),localStorage.setItem(t,"t"))}),[h,r,j]),e((()=>{j||(async()=>{try{let o=await l.getServerConfig();o.customApiUrl&&l.updateApiUrl(o.customApiUrl),d(o)}catch(o){console.warn("Error generating app config: ",o)}})()}),[]),/*#__PURE__*/o(p.Provider,{value:{appConfig:u,isServerConfigLoaded:!!j},children:i})},j=()=>{let{appConfig:o}=i(p);return o},d=()=>{let{isServerConfigLoaded:o}=i(p);return o};export{l as DEFAULT_APP_CONFIG,h as PrivyAppConfigProvider,j as useAppConfig,d as useIsServerConfigLoaded};
