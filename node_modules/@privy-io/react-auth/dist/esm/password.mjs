import t from"fast-password-entropy";import*as e from"secure-password-utilities";import{DEFAULT_WORDLIST as r}from"secure-password-utilities/wordlists";let s=/[a-z]/,n=/[A-Z]/,i=/[0-9]/,a="!@#$%^&*()\\-_+.",o=`a-zA-Z0-9${a}`,l=RegExp(`[${a}]`),u=RegExp(`[${o}]`);const p=RegExp(`^[${o}]{6,}$`),f=(t="")=>[...new Set(t.split("").filter((t=>!u.test(t))).map((t=>t.replace(" ","SPACE"))))],m=()=>e.generatePassphrase(4,r),c=t=>{let e=t.split("-");return!((e?.length??0)<4)&&e.every((t=>r.includes(t)))};function g(t){return t>.9?"Strong":t>.5?"Medium":"Weak"}function d(t){if(t.length<8)return 0;let e=0;return s.test(t)&&(e+=1),n.test(t)&&(e+=1),i.test(t)&&(e+=1),l.test(t)&&(e+=1),Math.max(0,Math.min(1,e/3))}function $(e=""){return(.3*d(e)+t(e)/95)/2}function h(t=""){let e=$(t);return{value:e,label:g(e)}}export{d as calculatePasswordDiversityScore,m as generatePassphrase,f as getInvalidCharacters,$ as getPasswordStrength,g as getPasswordStrengthLabel,h as getPasswordSummary,c as isPassphrase,p as validPasswordRegex};
