var $hzore$zod = require("zod");
var $hzore$privyioapibase = require("@privy-io/api-base");
var $hzore$bs58 = require("bs58");
var $hzore$ethers = require("ethers");
var $hzore$libphonenumberjsmax = require("libphonenumber-js/max");


function $parcel$exportWildcard(dest, source) {
  Object.keys(source).forEach(function(key) {
    if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) {
      return;
    }

    Object.defineProperty(dest, key, {
      enumerable: true,
      get: function get() {
        return source[key];
      }
    });
  });

  return dest;
}

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $21de056d90b64a69$exports = {};
var $cc774e379bccfe7c$exports = {};

$parcel$export($cc774e379bccfe7c$exports, "AnalyticsEvent", () => $cc774e379bccfe7c$export$30b7662faa307ee);
const $cc774e379bccfe7c$export$30b7662faa307ee = {
    path: "/api/v1/analytics_events",
    method: "POST"
};


var $6d4d7712ae66e06d$exports = {};

$parcel$export($6d4d7712ae66e06d$exports, "AppConfig", () => $6d4d7712ae66e06d$export$d67e1898834e3885);
const $6d4d7712ae66e06d$export$d67e1898834e3885 = {
    path: "/api/v1/apps/:app_id",
    method: "GET"
};


var $bcaae0f0a79c70dc$exports = {};

$parcel$export($bcaae0f0a79c70dc$exports, "CoinbaseOnRampInit", () => $bcaae0f0a79c70dc$export$4d795ff6fee0e993);
$parcel$export($bcaae0f0a79c70dc$exports, "CoinbaseOnRampStatus", () => $bcaae0f0a79c70dc$export$56adef0ec94545fa);
const $bcaae0f0a79c70dc$export$4d795ff6fee0e993 = {
    path: "/api/v1/funding/coinbase_on_ramp/init",
    method: "POST"
};
const $bcaae0f0a79c70dc$export$56adef0ec94545fa = {
    path: "/api/v1/funding/coinbase_on_ramp/status",
    method: "GET"
};


var $a0ea915511f31bc6$exports = {};

$parcel$export($a0ea915511f31bc6$exports, "GetCrossAppConnections", () => $a0ea915511f31bc6$export$b9aa74fef6e2a10e);
const $a0ea915511f31bc6$export$b9aa74fef6e2a10e = {
    path: "/api/v1/apps/:app_id/cross-app/connections",
    method: "GET"
};


var $d28e9c57b9c94caa$exports = {};

$parcel$export($d28e9c57b9c94caa$exports, "CustomJWTAuthenticate", () => $d28e9c57b9c94caa$export$cca9af2746f9b569);
const $d28e9c57b9c94caa$export$cca9af2746f9b569 = {
    path: "/api/v1/custom_jwt_account/authenticate",
    method: "POST"
};


var $19ce39bca54cfa55$exports = {};

$parcel$export($19ce39bca54cfa55$exports, "FarcasterInit", () => $19ce39bca54cfa55$export$7ed9dd4c28ecc8b6);
$parcel$export($19ce39bca54cfa55$exports, "FarcasterAuthenticate", () => $19ce39bca54cfa55$export$c5985ffc97c7fdbb);
$parcel$export($19ce39bca54cfa55$exports, "FarcasterLink", () => $19ce39bca54cfa55$export$d51549470a941fce);
$parcel$export($19ce39bca54cfa55$exports, "FarcasterUnlink", () => $19ce39bca54cfa55$export$6017b5ccb660b0c8);
$parcel$export($19ce39bca54cfa55$exports, "FarcasterStatus", () => $19ce39bca54cfa55$export$a14f766edcdfe001);
$parcel$export($19ce39bca54cfa55$exports, "FarcasterV2Init", () => $19ce39bca54cfa55$export$1fd254d2511870dc);
$parcel$export($19ce39bca54cfa55$exports, "FarcasterV2Authenticate", () => $19ce39bca54cfa55$export$830c712ac562c817);
const $19ce39bca54cfa55$export$7ed9dd4c28ecc8b6 = {
    path: "/api/v1/farcaster/init",
    method: "POST"
};
const $19ce39bca54cfa55$export$c5985ffc97c7fdbb = {
    path: "/api/v1/farcaster/authenticate",
    method: "POST"
};
const $19ce39bca54cfa55$export$d51549470a941fce = {
    path: "/api/v1/farcaster/link",
    method: "POST"
};
const $19ce39bca54cfa55$export$6017b5ccb660b0c8 = {
    path: "/api/v1/farcaster/unlink",
    method: "POST"
};
const $19ce39bca54cfa55$export$a14f766edcdfe001 = {
    path: "/api/v1/farcaster/status",
    method: "GET"
};
const $19ce39bca54cfa55$export$1fd254d2511870dc = {
    path: "/api/v2/farcaster/init",
    method: "POST"
};
const $19ce39bca54cfa55$export$830c712ac562c817 = {
    path: "/api/v2/farcaster/authenticate",
    method: "POST"
};


var $b179cd35c40c02c0$exports = {};

$parcel$export($b179cd35c40c02c0$exports, "FarcasterSignerInit", () => $b179cd35c40c02c0$export$42654a8cac183ef0);
$parcel$export($b179cd35c40c02c0$exports, "FarcasterSignerStatus", () => $b179cd35c40c02c0$export$7f204ee171a84aa2);
const $b179cd35c40c02c0$export$42654a8cac183ef0 = {
    path: "/api/v1/farcaster/signer/init",
    method: "POST"
};
const $b179cd35c40c02c0$export$7f204ee171a84aa2 = {
    path: "/api/v1/farcaster/signer/status",
    method: "POST"
};


var $0078fe557878befc$exports = {};

$parcel$export($0078fe557878befc$exports, "GuestAuthenticate", () => $0078fe557878befc$export$bed08221a49a43ad);
const $0078fe557878befc$export$bed08221a49a43ad = {
    path: "/api/v1/guest/authenticate",
    method: "POST"
};


var $67ff33ab19fcc377$exports = {};

$parcel$export($67ff33ab19fcc377$exports, "MfaPasskeyInit", () => $67ff33ab19fcc377$export$5e38d17588971983);
$parcel$export($67ff33ab19fcc377$exports, "MfaPasskeyVerify", () => $67ff33ab19fcc377$export$52d08a59e63ca968);
$parcel$export($67ff33ab19fcc377$exports, "MfaPasskeyEnrollment", () => $67ff33ab19fcc377$export$d79952c9effdb95b);
const $67ff33ab19fcc377$export$5e38d17588971983 = {
    path: "/api/v1/mfa/passkeys/init",
    method: "POST"
};
const $67ff33ab19fcc377$export$52d08a59e63ca968 = {
    path: "/api/v1/mfa/passkeys/verify",
    method: "POST"
};
const $67ff33ab19fcc377$export$d79952c9effdb95b = {
    path: "/api/v1/mfa/passkeys/enrollment",
    method: "POST"
};


var $2bc648513e2247b0$exports = {};

$parcel$export($2bc648513e2247b0$exports, "MfaPasswordlessSmsEnroll", () => $2bc648513e2247b0$export$2ca9d9da76a9e126);
$parcel$export($2bc648513e2247b0$exports, "MfaPasswordlessSmsVerify", () => $2bc648513e2247b0$export$3308cba1d8516f90);
$parcel$export($2bc648513e2247b0$exports, "MfaPasswordlessSmsInit", () => $2bc648513e2247b0$export$cf4de95cb6da600f);
$parcel$export($2bc648513e2247b0$exports, "MfaPasswordlessSmsUnenroll", () => $2bc648513e2247b0$export$503f112538d6ca09);
const $2bc648513e2247b0$export$2ca9d9da76a9e126 = {
    path: "/api/v1/mfa/passwordless_sms/enroll",
    method: "POST"
};
const $2bc648513e2247b0$export$3308cba1d8516f90 = {
    path: "/api/v1/mfa/passwordless_sms/verify",
    method: "POST"
};
const $2bc648513e2247b0$export$cf4de95cb6da600f = {
    path: "/api/v1/mfa/passwordless_sms/init",
    method: "POST"
};
const $2bc648513e2247b0$export$503f112538d6ca09 = {
    path: "/api/v1/mfa/passwordless_sms/unenroll",
    method: "POST"
};


var $cf34c52e268ae920$exports = {};

$parcel$export($cf34c52e268ae920$exports, "MfaTotpEnroll", () => $cf34c52e268ae920$export$8cde043d756d30a7);
$parcel$export($cf34c52e268ae920$exports, "MfaTotpVerify", () => $cf34c52e268ae920$export$68c952ebd3c622ec);
$parcel$export($cf34c52e268ae920$exports, "MfaTotpInit", () => $cf34c52e268ae920$export$9cfb70b9ef75b776);
$parcel$export($cf34c52e268ae920$exports, "MfaTotpUnenroll", () => $cf34c52e268ae920$export$2241a8a66d2e6498);
const $cf34c52e268ae920$export$8cde043d756d30a7 = {
    path: "/api/v1/mfa/totp/enroll",
    method: "POST"
};
const $cf34c52e268ae920$export$68c952ebd3c622ec = {
    path: "/api/v1/mfa/totp/verify",
    method: "POST"
};
const $cf34c52e268ae920$export$9cfb70b9ef75b776 = {
    path: "/api/v1/mfa/totp/init",
    method: "POST"
};
const $cf34c52e268ae920$export$2241a8a66d2e6498 = {
    path: "/api/v1/mfa/totp/unenroll",
    method: "POST"
};


var $32ff3a0be337a079$exports = {};

$parcel$export($32ff3a0be337a079$exports, "OAuthAuthenticate", () => $32ff3a0be337a079$export$866d3936787f21ca);
$parcel$export($32ff3a0be337a079$exports, "OAuthInit", () => $32ff3a0be337a079$export$7dd94108c3c957b6);
$parcel$export($32ff3a0be337a079$exports, "OAuthLink", () => $32ff3a0be337a079$export$b555c05c68965095);
$parcel$export($32ff3a0be337a079$exports, "OAuthUnlink", () => $32ff3a0be337a079$export$7246a40b726a26ea);
const $32ff3a0be337a079$export$866d3936787f21ca = {
    path: "/api/v1/oauth/authenticate",
    method: "POST"
};
const $32ff3a0be337a079$export$7dd94108c3c957b6 = {
    path: "/api/v1/oauth/init",
    method: "POST"
};
const $32ff3a0be337a079$export$b555c05c68965095 = {
    path: "/api/v1/oauth/link",
    method: "POST"
};
const $32ff3a0be337a079$export$7246a40b726a26ea = {
    path: "/api/v1/oauth/unlink",
    method: "POST"
};


var $57ff9547fc832eef$exports = {};

$parcel$export($57ff9547fc832eef$exports, "OAuthProviderAuthorize", () => $57ff9547fc832eef$export$3251d162865f5fbf);
$parcel$export($57ff9547fc832eef$exports, "OAuthProviderVerify", () => $57ff9547fc832eef$export$e2c685498411d101);
const $57ff9547fc832eef$export$3251d162865f5fbf = {
    path: "/oauth/authorization_code",
    method: "POST"
};
const $57ff9547fc832eef$export$e2c685498411d101 = {
    path: "/oauth/verify",
    method: "POST"
};


var $1f52950acf953d8a$exports = {};

$parcel$export($1f52950acf953d8a$exports, "PasskeyLink", () => $1f52950acf953d8a$export$8cc9b733d1d27bf);
$parcel$export($1f52950acf953d8a$exports, "PasskeyAuthenticate", () => $1f52950acf953d8a$export$dd91b2a2913f179);
$parcel$export($1f52950acf953d8a$exports, "PasskeyRegister", () => $1f52950acf953d8a$export$6c765e6aa2cc600d);
$parcel$export($1f52950acf953d8a$exports, "PasskeyAuthenticateInit", () => $1f52950acf953d8a$export$fbd0752c8f04789a);
$parcel$export($1f52950acf953d8a$exports, "PasskeyRegisterInit", () => $1f52950acf953d8a$export$fbda2eea42eab208);
$parcel$export($1f52950acf953d8a$exports, "PasskeyLinkInit", () => $1f52950acf953d8a$export$908a107a443c8819);
$parcel$export($1f52950acf953d8a$exports, "PasskeyUnlink", () => $1f52950acf953d8a$export$73b251c34ecfbbd2);
const $1f52950acf953d8a$export$8cc9b733d1d27bf = {
    path: "/api/v1/passkeys/link",
    method: "POST"
};
const $1f52950acf953d8a$export$dd91b2a2913f179 = {
    path: "/api/v1/passkeys/authenticate",
    method: "POST"
};
const $1f52950acf953d8a$export$6c765e6aa2cc600d = {
    path: "/api/v1/passkeys/register",
    method: "POST"
};
const $1f52950acf953d8a$export$fbd0752c8f04789a = {
    path: "/api/v1/passkeys/authenticate/init",
    method: "POST"
};
const $1f52950acf953d8a$export$fbda2eea42eab208 = {
    path: "/api/v1/passkeys/register/init",
    method: "POST"
};
const $1f52950acf953d8a$export$908a107a443c8819 = {
    path: "/api/v1/passkeys/link/init",
    method: "POST"
};
const $1f52950acf953d8a$export$73b251c34ecfbbd2 = {
    path: "/api/v1/passkeys/unlink",
    method: "POST"
};


var $c6ea36c5e4d482dc$exports = {};

$parcel$export($c6ea36c5e4d482dc$exports, "PasswordlessAuthenticate", () => $c6ea36c5e4d482dc$export$2399ea1e38345a53);
$parcel$export($c6ea36c5e4d482dc$exports, "PasswordlessInit", () => $c6ea36c5e4d482dc$export$90dfa8041dde28f7);
$parcel$export($c6ea36c5e4d482dc$exports, "PasswordlessLink", () => $c6ea36c5e4d482dc$export$c9ba5b5d6d996387);
$parcel$export($c6ea36c5e4d482dc$exports, "PasswordlessUnlink", () => $c6ea36c5e4d482dc$export$770e866201444bcd);
$parcel$export($c6ea36c5e4d482dc$exports, "PasswordlessUpdate", () => $c6ea36c5e4d482dc$export$95d6a76319eb3229);
const $c6ea36c5e4d482dc$export$2399ea1e38345a53 = {
    path: "/api/v1/passwordless/authenticate",
    method: "POST"
};
const $c6ea36c5e4d482dc$export$90dfa8041dde28f7 = {
    path: "/api/v1/passwordless/init",
    method: "POST"
};
const $c6ea36c5e4d482dc$export$c9ba5b5d6d996387 = {
    path: "/api/v1/passwordless/link",
    method: "POST"
};
const $c6ea36c5e4d482dc$export$770e866201444bcd = {
    path: "/api/v1/passwordless/unlink",
    method: "POST"
};
const $c6ea36c5e4d482dc$export$95d6a76319eb3229 = {
    path: "/api/v1/passwordless/update",
    method: "POST"
};


var $06be54f7ab316e74$exports = {};

$parcel$export($06be54f7ab316e74$exports, "PasswordlessSmsAuthenticate", () => $06be54f7ab316e74$export$7e171ae579c30d39);
$parcel$export($06be54f7ab316e74$exports, "PasswordlessSmsInit", () => $06be54f7ab316e74$export$5c9a94090bb8ee8b);
$parcel$export($06be54f7ab316e74$exports, "PasswordlessSmsLink", () => $06be54f7ab316e74$export$e1b8c2813604d498);
$parcel$export($06be54f7ab316e74$exports, "PasswordlessSmsUnlink", () => $06be54f7ab316e74$export$140d5f525bd53d81);
$parcel$export($06be54f7ab316e74$exports, "PasswordlessSmsUpdate", () => $06be54f7ab316e74$export$3a4526cc549be74f);
const $06be54f7ab316e74$export$7e171ae579c30d39 = {
    path: "/api/v1/passwordless_sms/authenticate",
    method: "POST"
};
const $06be54f7ab316e74$export$5c9a94090bb8ee8b = {
    path: "/api/v1/passwordless_sms/init",
    method: "POST"
};
const $06be54f7ab316e74$export$e1b8c2813604d498 = {
    path: "/api/v1/passwordless_sms/link",
    method: "POST"
};
const $06be54f7ab316e74$export$140d5f525bd53d81 = {
    path: "/api/v1/passwordless_sms/unlink",
    method: "POST"
};
const $06be54f7ab316e74$export$3a4526cc549be74f = {
    path: "/api/v1/passwordless_sms/update",
    method: "POST"
};


var $0fbc347572fd0ba7$exports = {};

$parcel$export($0fbc347572fd0ba7$exports, "RecoveryKeyMaterial", () => $0fbc347572fd0ba7$export$53205c78d6e0d37f);
$parcel$export($0fbc347572fd0ba7$exports, "RecoveryOAuthInit", () => $0fbc347572fd0ba7$export$f75c08c106aa5263);
$parcel$export($0fbc347572fd0ba7$exports, "RecoveryOAuthAuthenticate", () => $0fbc347572fd0ba7$export$c4a18348874706ae);
$parcel$export($0fbc347572fd0ba7$exports, "RecoveryOAuthInitICloud", () => $0fbc347572fd0ba7$export$4af466c8016ee40a);
$parcel$export($0fbc347572fd0ba7$exports, "RecoveryOAuthCallbackICloudExpo", () => $0fbc347572fd0ba7$export$7b1580cc69e35e8);
$parcel$export($0fbc347572fd0ba7$exports, "RecoveryConfigurationICloud", () => $0fbc347572fd0ba7$export$bce86382d6c75077);
const $0fbc347572fd0ba7$export$53205c78d6e0d37f = {
    path: "/api/v1/embedded_wallets/:address/recovery/key_material",
    method: "POST"
};
const $0fbc347572fd0ba7$export$f75c08c106aa5263 = {
    path: "/api/v1/recovery/oauth/init",
    method: "POST"
};
const $0fbc347572fd0ba7$export$c4a18348874706ae = {
    path: "/api/v1/recovery/oauth/authenticate",
    method: "POST"
};
const $0fbc347572fd0ba7$export$4af466c8016ee40a = {
    path: "/api/v1/recovery/oauth/init_icloud",
    method: "POST"
};
const $0fbc347572fd0ba7$export$7b1580cc69e35e8 = {
    path: "/api/v1/recovery/oauth/callback_icloud/:app_id/expo_ios",
    method: "GET"
};
const $0fbc347572fd0ba7$export$bce86382d6c75077 = {
    path: "/api/v1/recovery/configuration_icloud",
    method: "POST"
};


var $46edbad5b5b66406$exports = {};

$parcel$export($46edbad5b5b66406$exports, "getPathWithParams", () => $46edbad5b5b66406$export$e2939f516ef264b4);
const $46edbad5b5b66406$export$e2939f516ef264b4 = (path, params)=>{
    if (!params) return path;
    return Object.entries(params).reduce((acc, [key, value])=>{
        return acc.replace(`:${key}`, `${value}`);
    }, path);
};


var $f97e40e2d3026a60$exports = {};

$parcel$export($f97e40e2d3026a60$exports, "RefreshSession", () => $f97e40e2d3026a60$export$99faf8b86d913c70);
$parcel$export($f97e40e2d3026a60$exports, "Logout", () => $f97e40e2d3026a60$export$cad1a703886b4e3a);
const $f97e40e2d3026a60$export$99faf8b86d913c70 = {
    path: "/api/v1/sessions",
    method: "POST"
};
const $f97e40e2d3026a60$export$cad1a703886b4e3a = {
    path: "/api/v1/sessions/logout",
    method: "POST"
};


var $b97d6a4bc70fb62e$exports = {};

$parcel$export($b97d6a4bc70fb62e$exports, "GetSmartWalletConfig", () => $b97d6a4bc70fb62e$export$ac60d564e06c26d5);
$parcel$export($b97d6a4bc70fb62e$exports, "PostSmartWalletConfig", () => $b97d6a4bc70fb62e$export$24ec2b09f284e0b1);
const $b97d6a4bc70fb62e$export$ac60d564e06c26d5 = {
    path: "/api/v1/apps/:app_id/smart_wallets",
    method: "GET"
};
const $b97d6a4bc70fb62e$export$24ec2b09f284e0b1 = {
    path: "/api/v1/apps/:app_id/smart_wallets",
    method: "POST"
};


var $50db31494d7e4790$exports = {};

$parcel$export($50db31494d7e4790$exports, "WalletsRevoke", () => $50db31494d7e4790$export$9babfd8a159b0c8c);
const $50db31494d7e4790$export$9babfd8a159b0c8c = {
    path: "/api/v1/wallets/revoke",
    method: "POST"
};


var $1bdd5dba3e17f5b2$exports = {};

$parcel$export($1bdd5dba3e17f5b2$exports, "SiweInit", () => $1bdd5dba3e17f5b2$export$81e59ade100f8964);
$parcel$export($1bdd5dba3e17f5b2$exports, "SiweAuthenticate", () => $1bdd5dba3e17f5b2$export$5caf5d9f95cfdd58);
$parcel$export($1bdd5dba3e17f5b2$exports, "SiweLink", () => $1bdd5dba3e17f5b2$export$626623f305a79065);
$parcel$export($1bdd5dba3e17f5b2$exports, "SiweLinkSmartWallet", () => $1bdd5dba3e17f5b2$export$dae4aed6dc91c7bf);
$parcel$export($1bdd5dba3e17f5b2$exports, "SiweUnlink", () => $1bdd5dba3e17f5b2$export$cb415236257a3f80);
const $1bdd5dba3e17f5b2$export$81e59ade100f8964 = {
    path: "/api/v1/siwe/init",
    method: "POST"
};
const $1bdd5dba3e17f5b2$export$5caf5d9f95cfdd58 = {
    path: "/api/v1/siwe/authenticate",
    method: "POST"
};
const $1bdd5dba3e17f5b2$export$626623f305a79065 = {
    path: "/api/v1/siwe/link",
    method: "POST"
};
const $1bdd5dba3e17f5b2$export$dae4aed6dc91c7bf = {
    path: "/api/v1/siwe/link_smart_wallet",
    method: "POST"
};
const $1bdd5dba3e17f5b2$export$cb415236257a3f80 = {
    path: "/api/v1/siwe/unlink",
    method: "POST"
};


var $1595cf46b3d7ff35$exports = {};

$parcel$export($1595cf46b3d7ff35$exports, "SiwsInit", () => $1595cf46b3d7ff35$export$dd0e464f35c701ad);
$parcel$export($1595cf46b3d7ff35$exports, "SiwsAuthenticate", () => $1595cf46b3d7ff35$export$93f5e2370a853629);
$parcel$export($1595cf46b3d7ff35$exports, "SiwsLink", () => $1595cf46b3d7ff35$export$c309d30a2a2815ee);
$parcel$export($1595cf46b3d7ff35$exports, "SiwsUnlink", () => $1595cf46b3d7ff35$export$553e646318a6c92f);
const $1595cf46b3d7ff35$export$dd0e464f35c701ad = {
    path: "/api/v1/siws/init",
    method: "POST"
};
const $1595cf46b3d7ff35$export$93f5e2370a853629 = {
    path: "/api/v1/siws/authenticate",
    method: "POST"
};
const $1595cf46b3d7ff35$export$c309d30a2a2815ee = {
    path: "/api/v1/siws/link",
    method: "POST"
};
const $1595cf46b3d7ff35$export$553e646318a6c92f = {
    path: "/api/v1/siws/unlink",
    method: "POST"
};


var $144faad4caf0fdbc$exports = {};

$parcel$export($144faad4caf0fdbc$exports, "AcceptTermsOnUser", () => $144faad4caf0fdbc$export$cae4629dc339a1d3);
const $144faad4caf0fdbc$export$cae4629dc339a1d3 = {
    path: "/api/v1/users/me/accept_terms",
    method: "POST"
};


var $e139c7f9a332bdfb$exports = {};

$parcel$export($e139c7f9a332bdfb$exports, "TelegramAuthenticate", () => $e139c7f9a332bdfb$export$7429ccdbcca0d2ad);
$parcel$export($e139c7f9a332bdfb$exports, "TelegramLink", () => $e139c7f9a332bdfb$export$db55e97c1ee79975);
$parcel$export($e139c7f9a332bdfb$exports, "TelegramUnlink", () => $e139c7f9a332bdfb$export$513feadc9dae72fd);
const $e139c7f9a332bdfb$export$7429ccdbcca0d2ad = {
    path: "/api/v1/telegram/authenticate",
    method: "POST"
};
const $e139c7f9a332bdfb$export$db55e97c1ee79975 = {
    path: "/api/v1/telegram/link",
    method: "POST"
};
const $e139c7f9a332bdfb$export$513feadc9dae72fd = {
    path: "/api/v1/telegram/unlink",
    method: "POST"
};


var $86a72a33118f17e5$exports = {};

$parcel$export($86a72a33118f17e5$exports, "MoonpayOnRampSign", () => $86a72a33118f17e5$export$a3b3bb064af22a7a);
const $86a72a33118f17e5$export$a3b3bb064af22a7a = {
    path: "/api/v1/plugins/moonpay_on_ramp/sign",
    method: "POST"
};


$parcel$exportWildcard($21de056d90b64a69$exports, $cc774e379bccfe7c$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $6d4d7712ae66e06d$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $bcaae0f0a79c70dc$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $a0ea915511f31bc6$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $d28e9c57b9c94caa$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $19ce39bca54cfa55$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $b179cd35c40c02c0$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $0078fe557878befc$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $67ff33ab19fcc377$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $2bc648513e2247b0$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $cf34c52e268ae920$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $32ff3a0be337a079$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $57ff9547fc832eef$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $1f52950acf953d8a$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $c6ea36c5e4d482dc$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $06be54f7ab316e74$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $0fbc347572fd0ba7$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $46edbad5b5b66406$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $f97e40e2d3026a60$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $b97d6a4bc70fb62e$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $50db31494d7e4790$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $1bdd5dba3e17f5b2$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $1595cf46b3d7ff35$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $144faad4caf0fdbc$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $e139c7f9a332bdfb$exports);
$parcel$exportWildcard($21de056d90b64a69$exports, $86a72a33118f17e5$exports);


var $9948fb0e4d6c5293$exports = {};
var $0f04b39e316a38d3$exports = {};

$parcel$export($0f04b39e316a38d3$exports, "AnalyticsEventInput", () => $0f04b39e316a38d3$export$5ac03ce02eff89f4);

const $0f04b39e316a38d3$export$5ac03ce02eff89f4 = (0, $hzore$zod.z).object({
    event_name: (0, $hzore$zod.z).string().max(255),
    client_id: (0, $hzore$zod.z).string().max(255).nullable(),
    payload: (0, $hzore$zod.z).record((0, $hzore$zod.z).any()).optional()
});


var $2a8279f7f73410e6$exports = {};

$parcel$export($2a8279f7f73410e6$exports, "AccountIdFromPath", () => $2a8279f7f73410e6$export$570fdd1008d53ff0);
$parcel$export($2a8279f7f73410e6$exports, "AppIdFromPath", () => $2a8279f7f73410e6$export$85be2ce1a760a71d);
$parcel$export($2a8279f7f73410e6$exports, "Pagination", () => $2a8279f7f73410e6$export$68f5e1453c188a82);


var $70fd7ce05b552209$exports = {};

$parcel$export($70fd7ce05b552209$exports, "UserId", () => $70fd7ce05b552209$export$22a69335b09c6066);
$parcel$export($70fd7ce05b552209$exports, "Email", () => $70fd7ce05b552209$export$5a6b8595f311cbb0);
$parcel$export($70fd7ce05b552209$exports, "PasswordlessCode", () => $70fd7ce05b552209$export$6051224a4b788b5f);
$parcel$export($70fd7ce05b552209$exports, "WalletAddress", () => $70fd7ce05b552209$export$e1ae011f7e31ddec);
$parcel$export($70fd7ce05b552209$exports, "normalizeEthereumAddress", () => $70fd7ce05b552209$export$52d99941c9f2e1af);
$parcel$export($70fd7ce05b552209$exports, "SolanaWalletAddress", () => $70fd7ce05b552209$export$a6c60903ce1c32fc);
$parcel$export($70fd7ce05b552209$exports, "PhoneNumber", () => $70fd7ce05b552209$export$3d623a7758cab61e);
$parcel$export($70fd7ce05b552209$exports, "normalizePhoneNumber", () => $70fd7ce05b552209$export$eeb94ade8d38f116);
$parcel$export($70fd7ce05b552209$exports, "isValidAddress", () => $70fd7ce05b552209$export$1987372119294ebb);
$parcel$export($70fd7ce05b552209$exports, "AuthenticateMode", () => $70fd7ce05b552209$export$1d53282181ae94da);




const $70fd7ce05b552209$export$22a69335b09c6066 = (0, $hzore$zod.z).string({
    required_error: "Privy DID must be included",
    invalid_type_error: "Privy DID is not a valid string"
}).min(1).transform((id)=>id.replace("did:privy:", ""));
const $70fd7ce05b552209$export$5a6b8595f311cbb0 = (0, $hzore$zod.z).string({
    required_error: "Email address must be provided",
    invalid_type_error: "Email address must be a valid string"
}).email("Invalid email address").transform((email)=>email.toLowerCase());
const $70fd7ce05b552209$export$6051224a4b788b5f = (0, $hzore$zod.z).string({
    required_error: "Verification code must be provided",
    invalid_type_error: "Invalid verification code"
}).length(6, "Verification code must have 6 digits.");
const $70fd7ce05b552209$export$e1ae011f7e31ddec = (0, $hzore$zod.z).string({
    required_error: "Ethereum address must be provided",
    invalid_type_error: "Invalid Ethereum address"
}).transform((address, ctx)=>{
    // After verifying that the address is a string, we attempt to
    // checksum it per EIP-55.
    const normalizedAddress = $70fd7ce05b552209$export$52d99941c9f2e1af(address);
    // If our normalization method returns falsy, the address is not
    // a valid Ethereum address, and we mark the input as invalid.
    if (!normalizedAddress) {
        ctx.addIssue({
            code: (0, $hzore$zod.z).ZodIssueCode.custom,
            message: "Invalid Ethereum address"
        });
        return (0, $hzore$zod.z).NEVER;
    }
    // Otherwise, we return the normalized (checksummed) address.
    return normalizedAddress;
});
const $70fd7ce05b552209$export$a6c60903ce1c32fc = (0, $hzore$zod.z).string({
    required_error: "Solana address must be provided",
    invalid_type_error: "Invalid Solana address"
}).trim().transform((address, ctx)=>{
    try {
        // Try to decode. If it fails the address is not a valid base58 string.
        (0, ($parcel$interopDefault($hzore$bs58))).decode(address);
    } catch (error) {
        ctx.addIssue({
            code: (0, $hzore$zod.z).ZodIssueCode.custom,
            message: "Invalid Solana address"
        });
        return (0, $hzore$zod.z).NEVER;
    }
    return address;
});
const $70fd7ce05b552209$export$3d623a7758cab61e = (0, $hzore$zod.z).string({
    required_error: "Phone number must be included",
    invalid_type_error: "Phone number is not a valid string"
}).refine((val)=>{
    try {
        return $70fd7ce05b552209$export$eeb94ade8d38f116(val) !== undefined;
    } catch (e) {
        return false;
    }
}, {
    message: "Phone number is not valid"
}).transform((val)=>$70fd7ce05b552209$export$eeb94ade8d38f116(val) || ""); // This operation is safe because we previously refine the schema and break if it's undefined
function $70fd7ce05b552209$export$eeb94ade8d38f116(inputPhoneNumber) {
    const phoneNumber = (0, $hzore$libphonenumberjsmax.parsePhoneNumber)(inputPhoneNumber, "US");
    // https://www.npmjs.com/package/libphonenumber-js#using-phone-number-validation-feature
    if (phoneNumber?.isPossible()) return phoneNumber.formatInternational();
}
function $70fd7ce05b552209$export$1987372119294ebb(address) {
    return !!$70fd7ce05b552209$export$52d99941c9f2e1af(address);
}
function $70fd7ce05b552209$export$52d99941c9f2e1af(address) {
    if (typeof address !== "string") return;
    try {
        return (0, $hzore$ethers.ethers).utils.getAddress(address.trim());
    } catch (e) {}
}
const $70fd7ce05b552209$export$1d53282181ae94da = (0, $hzore$zod.z).object({
    mode: (0, $hzore$zod.z).enum([
        "no-signup",
        "login-or-sign-up"
    ]).optional()
});


const $2a8279f7f73410e6$export$570fdd1008d53ff0 = (0, $hzore$zod.z).object({
    account_id: (0, $hzore$zod.z).string({
        required_error: "Account ID must be provided",
        invalid_type_error: "Account ID is not a valid string"
    }).min(1)
});
const $2a8279f7f73410e6$export$85be2ce1a760a71d = (0, $hzore$zod.z).object({
    app_id: (0, $hzore$zod.z).string({
        required_error: "App ID must be provided",
        invalid_type_error: "App ID is not a valid string"
    }).min(1)
})/* eslint-disable-next-line @typescript-eslint/naming-convention */ .transform(({ app_id: app_id })=>({
        app_id: app_id,
        appId: app_id
    })).catch(({ error: error })=>{
    throw new (0, $hzore$privyioapibase.InvalidInputError)(error.message, (0, $hzore$privyioapibase.PrivyErrorCode).MISSING_OR_INVALID_PRIVY_APP_ID);
});
const $2a8279f7f73410e6$export$68f5e1453c188a82 = (0, $hzore$zod.z).object({
    cursor: (0, $70fd7ce05b552209$export$22a69335b09c6066).optional(),
    limit: (0, $hzore$zod.z).coerce.number().max(100, {
        message: "Query limit can be at maximum 100 records."
    }).optional()
});


var $de304acea773d937$exports = {};

$parcel$export($de304acea773d937$exports, "AppResponseSchema", () => $de304acea773d937$export$dc5469a0fff5641e);

var $b8e8bb3676cc3feb$exports = {};

$parcel$export($b8e8bb3676cc3feb$exports, "EmbeddedWalletConfigSchema", () => $b8e8bb3676cc3feb$export$95372738a64f3b79);
$parcel$export($b8e8bb3676cc3feb$exports, "TelegramAuthConfigSchema", () => $b8e8bb3676cc3feb$export$367c50094464beeb);
$parcel$export($b8e8bb3676cc3feb$exports, "FundingMethodEnum", () => $b8e8bb3676cc3feb$export$fe80bb11c98cc392);
$parcel$export($b8e8bb3676cc3feb$exports, "FundingMethodArraySchema", () => $b8e8bb3676cc3feb$export$f5d20e939383f95);
$parcel$export($b8e8bb3676cc3feb$exports, "FundingConfigResponseSchema", () => $b8e8bb3676cc3feb$export$9ca1d1c7ecf8a0a);

var $e59fba4ed823b83b$exports = {};

$parcel$export($e59fba4ed823b83b$exports, "Currency", () => $e59fba4ed823b83b$export$b733e092f9f44b2c);

const $e59fba4ed823b83b$var$SUPPORTED_CHAIN_TYPES = [
    "evm",
    "solana"
];
const $e59fba4ed823b83b$export$b733e092f9f44b2c = (0, ($parcel$interopDefault($hzore$zod))).object({
    /**
   * CAIP-2 formatted chain ID
   * Resource: https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md
   */ chain: (0, ($parcel$interopDefault($hzore$zod))).string(),
    // Defaulting to `native` token for now, so not specifying anything beyond chain
    // Currency asset
    asset: (0, ($parcel$interopDefault($hzore$zod))).enum([
        "native-currency",
        "USDC"
    ]).optional()
});


const $b8e8bb3676cc3feb$export$95372738a64f3b79 = (0, ($parcel$interopDefault($hzore$zod))).object({
    /**
   * Whether to create embedded wallets on login. Note that this still requires distinct API
   * calls, rather than the server creating one on the /authenticate call.
   *
   * Default: 'users-without-wallets'
   *
   * Overridable from client.
   */ create_on_login: (0, ($parcel$interopDefault($hzore$zod))).enum([
        "users-without-wallets",
        "all-users",
        "off"
    ]),
    /**
   * Will be one or more of `user-passcode` | `google-drive` | `icloud`
   * - all enabled methods other than `password` require prior configuration
   */ user_owned_recovery_options: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).enum([
        "user-passcode",
        "google-drive",
        "icloud"
    ])),
    /**
   * If true, this will prompt the user use one of the enabled recovery methods
   * to secure the recovery share of their embedded wallet.
   *
   * Otherwise (the default), Privy will secure the recovery share, and the embedded wallet
   * will be created without showing any UIs to the user.
   *
   * Overridable from client.
   */ require_user_owned_recovery_on_create: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional(),
    /**
   * @deprecated use `require_user_owned_recovery_on_create`
   *
   * If true, this will prompt the user to enter a password to secure the recovery share of
   * their embedded wallet.
   *
   * Otherwise (the default), Privy will secure the recovery share, and the embedded wallet
   * will be created without showing any UIs to the user.
   *
   * Overridable from client.
   */ require_user_password_on_create: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
});
const $b8e8bb3676cc3feb$export$367c50094464beeb = (0, ($parcel$interopDefault($hzore$zod))).object({
    bot_id: (0, ($parcel$interopDefault($hzore$zod))).string(),
    bot_name: (0, ($parcel$interopDefault($hzore$zod))).string(),
    link_enabled: (0, ($parcel$interopDefault($hzore$zod))).boolean(),
    seamless_auth_enabled: (0, ($parcel$interopDefault($hzore$zod))).boolean()
});
const $b8e8bb3676cc3feb$export$fe80bb11c98cc392 = (0, ($parcel$interopDefault($hzore$zod))).enum([
    "moonpay",
    "coinbase-onramp",
    "external"
]);
const $b8e8bb3676cc3feb$export$f5d20e939383f95 = (0, ($parcel$interopDefault($hzore$zod))).array($b8e8bb3676cc3feb$export$fe80bb11c98cc392);
const $b8e8bb3676cc3feb$export$9ca1d1c7ecf8a0a = (0, ($parcel$interopDefault($hzore$zod))).object({
    default_recommended_currency: (0, $e59fba4ed823b83b$export$b733e092f9f44b2c),
    default_recommended_amount: (0, ($parcel$interopDefault($hzore$zod))).string(),
    methods: $b8e8bb3676cc3feb$export$f5d20e939383f95,
    options: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).object({
        method: (0, ($parcel$interopDefault($hzore$zod))).string(),
        provider: (0, ($parcel$interopDefault($hzore$zod))).string()
    })),
    prompt_funding_on_wallet_creation: (0, ($parcel$interopDefault($hzore$zod))).boolean(),
    cross_chain_bridging_enabled: (0, ($parcel$interopDefault($hzore$zod))).boolean()
});


const $de304acea773d937$export$dc5469a0fff5641e = (0, $hzore$zod.z).object({
    id: (0, $hzore$zod.z).string(),
    name: (0, $hzore$zod.z).string(),
    logo_url: (0, $hzore$zod.z).string().nullable(),
    icon_url: (0, $hzore$zod.z).string().nullable(),
    terms_and_conditions_url: (0, $hzore$zod.z).string().nullable(),
    privacy_policy_url: (0, $hzore$zod.z).string().nullable(),
    require_users_accept_terms: (0, $hzore$zod.z).boolean().nullable(),
    theme: (0, $hzore$zod.z).string(),
    accent_color: (0, $hzore$zod.z).string().nullable(),
    show_wallet_login_first: (0, $hzore$zod.z).boolean(),
    allowed_domains: (0, $hzore$zod.z).array((0, $hzore$zod.z).string()),
    allowed_native_app_ids: (0, $hzore$zod.z).array((0, $hzore$zod.z).string()),
    allowed_native_app_url_schemes: (0, $hzore$zod.z).array((0, $hzore$zod.z).string()),
    wallet_auth: (0, $hzore$zod.z).boolean(),
    email_auth: (0, $hzore$zod.z).boolean(),
    sms_auth: (0, $hzore$zod.z).boolean(),
    google_oauth: (0, $hzore$zod.z).boolean(),
    twitter_oauth: (0, $hzore$zod.z).boolean(),
    discord_oauth: (0, $hzore$zod.z).boolean(),
    github_oauth: (0, $hzore$zod.z).boolean(),
    spotify_oauth: (0, $hzore$zod.z).boolean(),
    instagram_oauth: (0, $hzore$zod.z).boolean(),
    tiktok_oauth: (0, $hzore$zod.z).boolean(),
    linkedin_oauth: (0, $hzore$zod.z).boolean(),
    apple_oauth: (0, $hzore$zod.z).boolean(),
    farcaster_auth: (0, $hzore$zod.z).boolean(),
    passkey_auth: (0, $hzore$zod.z).boolean(),
    passkeys_for_signup_enabled: (0, $hzore$zod.z).boolean(),
    telegram_auth: (0, $hzore$zod.z).boolean(),
    guest_auth: (0, $hzore$zod.z).boolean(),
    solana_wallet_auth: (0, $hzore$zod.z).boolean(),
    disable_plus_emails: (0, $hzore$zod.z).boolean(),
    // TODO: allowlist_enabled should be moved to AdminOnlyAppResponseSchema but is technically in older
    // versions of the server-auth getAppSettings response
    allowlist_enabled: (0, $hzore$zod.z).boolean(),
    allowlist_config: (0, $hzore$zod.z).object({
        error_title: (0, $hzore$zod.z).string().nullable(),
        error_detail: (0, $hzore$zod.z).string().nullable(),
        cta_text: (0, $hzore$zod.z).string().nullable(),
        cta_link: (0, $hzore$zod.z).string().nullable()
    }),
    wallet_connect_cloud_project_id: (0, $hzore$zod.z).string().nullable(),
    custom_api_url: (0, $hzore$zod.z).string().nullable(),
    embedded_wallet_config: (0, $b8e8bb3676cc3feb$export$95372738a64f3b79),
    enforce_wallet_uis: (0, $hzore$zod.z).boolean(),
    legacy_wallet_ui_config: (0, $hzore$zod.z).boolean(),
    fiat_on_ramp_enabled: (0, $hzore$zod.z).boolean(),
    captcha_enabled: (0, $hzore$zod.z).boolean(),
    twitter_oauth_on_mobile_enabled: (0, $hzore$zod.z).boolean(),
    mfa_methods: (0, $hzore$zod.z).array((0, $hzore$zod.z).enum([
        "sms",
        "totp",
        "passkey"
    ])),
    captcha_site_key: (0, $hzore$zod.z).string().optional(),
    verification_key: (0, $hzore$zod.z).string(),
    telegram_auth_config: (0, $b8e8bb3676cc3feb$export$367c50094464beeb).optional(),
    funding_config: (0, $b8e8bb3676cc3feb$export$9ca1d1c7ecf8a0a).optional(),
    max_linked_wallets_per_user: (0, $hzore$zod.z).number().nullable(),
    farcaster_link_wallets_enabled: (0, $hzore$zod.z).boolean()
});



var $d30b85902746f835$exports = {};

$parcel$export($d30b85902746f835$exports, "CoinbaseOnRampInitInput", () => $d30b85902746f835$export$f01d538aa036a41a);
$parcel$export($d30b85902746f835$exports, "CoinbaseOnRampInitResponse", () => $d30b85902746f835$export$4731ee7c27e49d6e);
$parcel$export($d30b85902746f835$exports, "CoinbaseOnRampStatusResponse", () => $d30b85902746f835$export$146ab3c80d47ce12);


const $d30b85902746f835$var$Blockchain = (0, $hzore$zod.z).enum([
    "ethereum",
    "bitcoin",
    "base",
    "avacchain",
    "optimism",
    "solana",
    "polygon",
    "arbitrum",
    "stellar"
]);
// Assets must be capitalized to work with Coinbase Onramp. We preserve 'eth' here for backwards
// compatibility with older SDKs when Coinbase Onramp did not require capitalization
const $d30b85902746f835$var$EthereumAssets = (0, $hzore$zod.z).enum([
    "eth",
    "ETH",
    "USDC"
]).transform((asset)=>asset.toUpperCase());
const $d30b85902746f835$var$SolanaAssets = (0, $hzore$zod.z).enum([
    "SOL",
    "USDC"
]).transform((asset)=>asset.toUpperCase());
const $d30b85902746f835$var$CoinbaseOnRampInitEthereumInput = (0, $hzore$zod.z).object({
    addresses: (0, $hzore$zod.z).array((0, $hzore$zod.z).object({
        address: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec),
        blockchains: (0, $hzore$zod.z).array($d30b85902746f835$var$Blockchain)
    })).max(1).min(1),
    assets: (0, $hzore$zod.z).array($d30b85902746f835$var$EthereumAssets).optional()
});
const $d30b85902746f835$var$CoinbaseOnRampInitSolanaInput = (0, $hzore$zod.z).object({
    addresses: (0, $hzore$zod.z).array((0, $hzore$zod.z).object({
        address: (0, $70fd7ce05b552209$export$a6c60903ce1c32fc),
        blockchains: (0, $hzore$zod.z).array($d30b85902746f835$var$Blockchain)
    })).max(1).min(1),
    assets: (0, $hzore$zod.z).array($d30b85902746f835$var$SolanaAssets).optional()
});
const $d30b85902746f835$export$f01d538aa036a41a = (0, $hzore$zod.z).union([
    $d30b85902746f835$var$CoinbaseOnRampInitEthereumInput,
    $d30b85902746f835$var$CoinbaseOnRampInitSolanaInput
]);
const $d30b85902746f835$export$4731ee7c27e49d6e = (0, $hzore$zod.z).object({
    app_id: (0, $hzore$zod.z).string(),
    session_token: (0, $hzore$zod.z).string(),
    channel_id: (0, $hzore$zod.z).string(),
    partner_user_id: (0, $hzore$zod.z).string()
});
const $d30b85902746f835$export$146ab3c80d47ce12 = (0, $hzore$zod.z).object({
    status: (0, $hzore$zod.z).enum([
        "pending",
        "success",
        "failure"
    ])
});



var $aa486b9acfd14dc1$exports = {};

$parcel$export($aa486b9acfd14dc1$exports, "CrossAppConnectionsResponse", () => $aa486b9acfd14dc1$export$39ad28598f91ae95);

const $aa486b9acfd14dc1$export$39ad28598f91ae95 = (0, $hzore$zod.z).object({
    connections: (0, $hzore$zod.z).array((0, $hzore$zod.z).object({
        provider_app_id: (0, $hzore$zod.z).string(),
        provider_app_name: (0, $hzore$zod.z).string(),
        provider_app_icon_url: (0, $hzore$zod.z).string().url().nullable(),
        provider_app_custom_api_url: (0, $hzore$zod.z).string().url().nullable(),
        read_only: (0, $hzore$zod.z).boolean()
    }))
});



var $7d982f25ac911b62$exports = {};

$parcel$export($7d982f25ac911b62$exports, "AuthenticateJwtInput", () => $7d982f25ac911b62$export$ad1e2c0abc3d279d);

const $7d982f25ac911b62$export$ad1e2c0abc3d279d = (0, ($parcel$interopDefault($hzore$zod))).object({
    /** A JWT from the custom authentication provider */ token: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
});


var $74c27671d122e7b6$exports = {};

$parcel$export($74c27671d122e7b6$exports, "VerifyEmailInput", () => $74c27671d122e7b6$export$ca08e252312baf4);
$parcel$export($74c27671d122e7b6$exports, "AuthenticateEmailInput", () => $74c27671d122e7b6$export$161958b06841b78e);
$parcel$export($74c27671d122e7b6$exports, "InitEmailInput", () => $74c27671d122e7b6$export$ef1330eae1875774);
$parcel$export($74c27671d122e7b6$exports, "UnlinkEmailInput", () => $74c27671d122e7b6$export$b0a53354e7257ebb);
$parcel$export($74c27671d122e7b6$exports, "UpdateEmailInput", () => $74c27671d122e7b6$export$9ad98d5ba2865624);
$parcel$export($74c27671d122e7b6$exports, "TransferEmailInput", () => $74c27671d122e7b6$export$950dcc3b67d595fb);


const $fa43b8c6f6e93cd6$export$820fe5dd3e07cd33 = (0, $hzore$zod.z).object({
    nonce: (0, $hzore$zod.z).string()
});



const $74c27671d122e7b6$export$ca08e252312baf4 = (0, $hzore$zod.z).object({
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f),
    email: (0, $70fd7ce05b552209$export$5a6b8595f311cbb0)
});
const $74c27671d122e7b6$export$161958b06841b78e = $74c27671d122e7b6$export$ca08e252312baf4.merge((0, $70fd7ce05b552209$export$1d53282181ae94da));
const $74c27671d122e7b6$export$ef1330eae1875774 = (0, $hzore$zod.z).object({
    email: (0, $70fd7ce05b552209$export$5a6b8595f311cbb0),
    token: (0, $hzore$zod.z).string().optional()
});
const $74c27671d122e7b6$export$b0a53354e7257ebb = (0, $hzore$zod.z).object({
    address: (0, $70fd7ce05b552209$export$5a6b8595f311cbb0)
});
const $74c27671d122e7b6$export$9ad98d5ba2865624 = (0, $hzore$zod.z).object({
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ oldAddress: (0, $70fd7ce05b552209$export$5a6b8595f311cbb0),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ newAddress: (0, $70fd7ce05b552209$export$5a6b8595f311cbb0),
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f)
});
const $74c27671d122e7b6$export$950dcc3b67d595fb = (0, $fa43b8c6f6e93cd6$export$820fe5dd3e07cd33).extend({
    email: (0, $70fd7ce05b552209$export$5a6b8595f311cbb0)
});


var $051eee4fb5ed5a5d$exports = {};

$parcel$export($051eee4fb5ed5a5d$exports, "JsonWebKey", () => $051eee4fb5ed5a5d$export$d3aaee921473d84f);
$parcel$export($051eee4fb5ed5a5d$exports, "JsonWebKeySet", () => $051eee4fb5ed5a5d$export$c8fd35505bb1704a);

const $051eee4fb5ed5a5d$export$d3aaee921473d84f = (0, $hzore$zod.z).object({
    kty: (0, $hzore$zod.z).string(),
    use: (0, $hzore$zod.z).enum([
        "sig",
        "enc"
    ]).optional(),
    key_ops: (0, $hzore$zod.z).array((0, $hzore$zod.z).enum([
        "sign",
        "verify",
        "encrypt",
        "decrypt",
        "wrapKey",
        "unwrapKey",
        "deriveKey",
        "deriveBits"
    ])).optional(),
    alg: (0, $hzore$zod.z).enum([
        "RS256"
    ]),
    kid: (0, $hzore$zod.z).string().optional(),
    x5u: (0, $hzore$zod.z).string().optional(),
    x5c: (0, $hzore$zod.z).array((0, $hzore$zod.z).string()).optional(),
    x5t: (0, $hzore$zod.z).string().optional(),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ "x5t#S256": (0, $hzore$zod.z).string().optional(),
    n: (0, $hzore$zod.z).string().optional(),
    e: (0, $hzore$zod.z).string().optional(),
    d: (0, $hzore$zod.z).string().optional()
});
const $051eee4fb5ed5a5d$export$c8fd35505bb1704a = (0, $hzore$zod.z).object({
    keys: (0, $hzore$zod.z).array($051eee4fb5ed5a5d$export$d3aaee921473d84f)
});


var $eb679e4239177804$exports = {};

$parcel$export($eb679e4239177804$exports, "FarcasterConnectInitResponse", () => $eb679e4239177804$export$6ddd112193bb4f42);
$parcel$export($eb679e4239177804$exports, "FarcasterConnectStatusCompletedResponse", () => $eb679e4239177804$export$10e572b3d0f4fe4f);
$parcel$export($eb679e4239177804$exports, "FarcasterConnectStatusPendingResponse", () => $eb679e4239177804$export$430853814f05cdc4);
$parcel$export($eb679e4239177804$exports, "FarcasterAuthenticateInput", () => $eb679e4239177804$export$2c59d6b32b518c6e);
$parcel$export($eb679e4239177804$exports, "FarcasterLinkInput", () => $eb679e4239177804$export$40d6546edc9ccfd3);
$parcel$export($eb679e4239177804$exports, "FarcasterInitInput", () => $eb679e4239177804$export$8dd30088cf36d3f5);
$parcel$export($eb679e4239177804$exports, "FarcasterUnlinkInput", () => $eb679e4239177804$export$325ad26071643d09);
$parcel$export($eb679e4239177804$exports, "TransferFarcasterInput", () => $eb679e4239177804$export$c3501b02c91b7cf6);
$parcel$export($eb679e4239177804$exports, "FarcasterV2InitInput", () => $eb679e4239177804$export$23aefcbca0cf697f);
$parcel$export($eb679e4239177804$exports, "FarcasterV2InitResponse", () => $eb679e4239177804$export$adb9e233aa20093);
$parcel$export($eb679e4239177804$exports, "FarcasterV2AuthenticateInput", () => $eb679e4239177804$export$d960cd5dfc1ec120);



const $eb679e4239177804$export$6ddd112193bb4f42 = (0, $hzore$zod.z).object({
    channel_token: (0, $hzore$zod.z).string(),
    connect_uri: (0, $hzore$zod.z).string()
});
const $eb679e4239177804$export$10e572b3d0f4fe4f = (0, $hzore$zod.z).object({
    state: (0, $hzore$zod.z).literal("completed"),
    nonce: (0, $hzore$zod.z).string(),
    message: (0, $hzore$zod.z).string(),
    signature: (0, $hzore$zod.z).string(),
    fid: (0, $hzore$zod.z).number(),
    username: (0, $hzore$zod.z).string(),
    display_name: (0, $hzore$zod.z).string(),
    bio: (0, $hzore$zod.z).string(),
    pfp_url: (0, $hzore$zod.z).string()
});
const $eb679e4239177804$export$430853814f05cdc4 = (0, $hzore$zod.z).object({
    state: (0, $hzore$zod.z).literal("pending"),
    nonce: (0, $hzore$zod.z).string()
});
const $eb679e4239177804$export$2c59d6b32b518c6e = (0, $hzore$zod.z).object({
    channel_token: (0, $hzore$zod.z).string(),
    message: (0, $hzore$zod.z).string(),
    signature: (0, $hzore$zod.z).string(),
    fid: (0, $hzore$zod.z).number()
}).merge((0, $70fd7ce05b552209$export$1d53282181ae94da));
const $eb679e4239177804$export$40d6546edc9ccfd3 = (0, $hzore$zod.z).object({
    channel_token: (0, $hzore$zod.z).string(),
    message: (0, $hzore$zod.z).string(),
    signature: (0, $hzore$zod.z).string(),
    fid: (0, $hzore$zod.z).number()
});
const $eb679e4239177804$export$8dd30088cf36d3f5 = (0, $hzore$zod.z).object({
    token: (0, $hzore$zod.z).string().optional(),
    redirect_url: (0, $hzore$zod.z).string().url().optional(),
    relying_party: (0, $hzore$zod.z).string().optional()
});
const $eb679e4239177804$export$325ad26071643d09 = (0, $hzore$zod.z).object({
    fid: (0, $hzore$zod.z).number()
});
const $eb679e4239177804$export$c3501b02c91b7cf6 = (0, $fa43b8c6f6e93cd6$export$820fe5dd3e07cd33).extend({
    farcaster_id: (0, $hzore$zod.z).string(),
    farcaster_embedded_address: (0, $hzore$zod.z).string()
});
const $eb679e4239177804$export$23aefcbca0cf697f = (0, $hzore$zod.z).object({});
const $eb679e4239177804$export$adb9e233aa20093 = (0, $hzore$zod.z).object({
    nonce: (0, $hzore$zod.z).string(),
    expires_at: (0, $hzore$zod.z).string()
});
const $eb679e4239177804$export$d960cd5dfc1ec120 = (0, $hzore$zod.z).object({
    fid: (0, $hzore$zod.z).number(),
    message: (0, $hzore$zod.z).string(),
    signature: (0, $hzore$zod.z).string()
}).merge((0, $70fd7ce05b552209$export$1d53282181ae94da));


var $d1082def8e5e297b$exports = {};

$parcel$export($d1082def8e5e297b$exports, "FarcasterSignerInitInput", () => $d1082def8e5e297b$export$809802d572486db);
$parcel$export($d1082def8e5e297b$exports, "FarcasterSignerInitResponse", () => $d1082def8e5e297b$export$327461233dec5bf6);
$parcel$export($d1082def8e5e297b$exports, "FarcasterSignerStatusResponse", () => $d1082def8e5e297b$export$2a58492abd647af5);

const $d1082def8e5e297b$export$809802d572486db = (0, $hzore$zod.z).object({
    // TODO: Down the line, we should support specifying developer's own app FID
    // request_fid: z.bigint().optional(),
    /** Must be an ed25519 key, NOT secp256k1 (ethereum native curve) */ ed25519_public_key: (0, $hzore$zod.z).string().refine((key)=>key.startsWith("0x") && key.length === 66),
    /**
   * The deadline for a signer request to succeed. After the deadline, the request will no longer
   * succeed. Defaults to 1 hour.
   */ deadline: (0, $hzore$zod.z).bigint().optional().default(()=>{
        const now = Math.floor(Date.now() / 1000);
        const oneHour = 3600;
        return BigInt(now + oneHour);
    })
});
const $d1082def8e5e297b$export$327461233dec5bf6 = (0, $hzore$zod.z).discriminatedUnion("status", [
    (0, $hzore$zod.z).object({
        /** The public key reflected back from the API
     * ie 0x2087e48968ca16a8954d0da041de84b66392b2821c2af42bc28aa079bcbe1dfe
     */ public_key: (0, $hzore$zod.z).string(),
        status: (0, $hzore$zod.z).literal("pending_approval"),
        signer_approval_url: (0, $hzore$zod.z).string()
    }),
    (0, $hzore$zod.z).object({
        /** The public key reflected back from the API
     * ie 0x2087e48968ca16a8954d0da041de84b66392b2821c2af42bc28aa079bcbe1dfe
     */ public_key: (0, $hzore$zod.z).string(),
        status: (0, $hzore$zod.z).literal("approved"),
        /** The FID of the user who approved the signer */ fid: (0, $hzore$zod.z).bigint()
    }),
    (0, $hzore$zod.z).object({
        /** The public key reflected back from the API
     * ie 0x2087e48968ca16a8954d0da041de84b66392b2821c2af42bc28aa079bcbe1dfe
     */ public_key: (0, $hzore$zod.z).string(),
        status: (0, $hzore$zod.z).literal("revoked"),
        /** The FID of the user who approved the signer */ fid: (0, $hzore$zod.z).bigint()
    })
]);
const $d1082def8e5e297b$export$2a58492abd647af5 = (0, $hzore$zod.z).discriminatedUnion("status", [
    (0, $hzore$zod.z).object({
        /** The public key reflected back from the API
     * ie 0x2087e48968ca16a8954d0da041de84b66392b2821c2af42bc28aa079bcbe1dfe
     */ public_key: (0, $hzore$zod.z).string(),
        status: (0, $hzore$zod.z).literal("pending_approval")
    }),
    (0, $hzore$zod.z).object({
        /** The public key reflected back from the API
     * ie 0x2087e48968ca16a8954d0da041de84b66392b2821c2af42bc28aa079bcbe1dfe
     */ public_key: (0, $hzore$zod.z).string(),
        status: (0, $hzore$zod.z).literal("approved"),
        /** The FID of the user who approved the signer */ fid: (0, $hzore$zod.z).bigint()
    }),
    (0, $hzore$zod.z).object({
        /** The public key reflected back from the API
     * ie 0x2087e48968ca16a8954d0da041de84b66392b2821c2af42bc28aa079bcbe1dfe
     */ public_key: (0, $hzore$zod.z).string(),
        status: (0, $hzore$zod.z).literal("revoked"),
        /** The FID of the user who approved the signer */ fid: (0, $hzore$zod.z).bigint()
    })
]);


var $c7240fca9e97885b$exports = {};

$parcel$export($c7240fca9e97885b$exports, "AuthenticateGuestInput", () => $c7240fca9e97885b$export$494be569a247ec9a);

const $c7240fca9e97885b$export$494be569a247ec9a = (0, $hzore$zod.z).object({
    /**
     * Locally-persisted guest secret.
     * This credential should have as much entropy as embedded wallet entropy.
     */ guest_credential: (0, $hzore$zod.z).string().length(43)
}).strict();


var $b529354c2182e52b$exports = {};

$parcel$export($b529354c2182e52b$exports, "EmailIdTokenEntry", () => $b529354c2182e52b$export$783ee7c583b70bea);
$parcel$export($b529354c2182e52b$exports, "PhoneIdTokenEntry", () => $b529354c2182e52b$export$5050d0079ef11bc6);
$parcel$export($b529354c2182e52b$exports, "WalletIdTokenEntry", () => $b529354c2182e52b$export$fd3f2073209314f0);
$parcel$export($b529354c2182e52b$exports, "FarcasterIdTokenEntry", () => $b529354c2182e52b$export$7d91b89a98a32206);
$parcel$export($b529354c2182e52b$exports, "PasskeyIdTokenEntry", () => $b529354c2182e52b$export$3da0109396521ad1);
$parcel$export($b529354c2182e52b$exports, "TelegramIdTokenEntry", () => $b529354c2182e52b$export$883001ac4b913adc);
$parcel$export($b529354c2182e52b$exports, "GoogleOauthIdTokenEntry", () => $b529354c2182e52b$export$10bcfd05b1db0bfb);
$parcel$export($b529354c2182e52b$exports, "TwitterOauthIdTokenEntry", () => $b529354c2182e52b$export$5cf36acae8eed78);
$parcel$export($b529354c2182e52b$exports, "DiscordOauthIdTokenEntry", () => $b529354c2182e52b$export$18e770e71ddcac8b);
$parcel$export($b529354c2182e52b$exports, "GithubOauthIdTokenEntry", () => $b529354c2182e52b$export$2fd8fb76725390c8);
$parcel$export($b529354c2182e52b$exports, "LinkedInOauthIdTokenEntry", () => $b529354c2182e52b$export$7325b1b9ff5b138f);
$parcel$export($b529354c2182e52b$exports, "SpotifyOauthIdTokenEntry", () => $b529354c2182e52b$export$5991ad07a5ac6061);
$parcel$export($b529354c2182e52b$exports, "InstagramOauthIdTokenEntry", () => $b529354c2182e52b$export$d50f791175bcd25a);
$parcel$export($b529354c2182e52b$exports, "TiktokOauthIdTokenEntry", () => $b529354c2182e52b$export$ad548be3bcd74188);
$parcel$export($b529354c2182e52b$exports, "AppleOauthIdTokenEntry", () => $b529354c2182e52b$export$b8a150e8882d7617);
$parcel$export($b529354c2182e52b$exports, "CustomJwtIdTokenEntry", () => $b529354c2182e52b$export$4a1709b5a6406ed8);
$parcel$export($b529354c2182e52b$exports, "CrossAppIdTokenEntry", () => $b529354c2182e52b$export$23abd82a93e245c8);
$parcel$export($b529354c2182e52b$exports, "SmartWalletIdTokenEntry", () => $b529354c2182e52b$export$18ff60c21403359);
// This file contains zod schemas for the linked account entries that appear with the `user` claim of
// Privy's identity token. These are a subset of the full linked account object that only contains
// critical data about the account (e.g. type and address for email). When developers request more fields
// about an account to be returned in the identity token, we can add them to the schemas here.

var $8342c8786d4fa209$exports = {};

$parcel$export($8342c8786d4fa209$exports, "EmailAccount", () => $8342c8786d4fa209$export$b291b2a8281f162e);
$parcel$export($8342c8786d4fa209$exports, "PhoneAccount", () => $8342c8786d4fa209$export$e461068a75eb0fb3);
$parcel$export($8342c8786d4fa209$exports, "BaseWalletAccount", () => $8342c8786d4fa209$export$16168ca1ad2afd69);
$parcel$export($8342c8786d4fa209$exports, "EthereumAccount", () => $8342c8786d4fa209$export$e72ed3751242ab66);
$parcel$export($8342c8786d4fa209$exports, "SmartWalletAccount", () => $8342c8786d4fa209$export$9847d582941f64b6);
$parcel$export($8342c8786d4fa209$exports, "SolanaAccount", () => $8342c8786d4fa209$export$d08a38b431a135bc);
$parcel$export($8342c8786d4fa209$exports, "FarcasterAccount", () => $8342c8786d4fa209$export$70b11e99555e84cb);
$parcel$export($8342c8786d4fa209$exports, "PasskeyAccount", () => $8342c8786d4fa209$export$c7ead6bbfb2c42a0);
$parcel$export($8342c8786d4fa209$exports, "TelegramAccount", () => $8342c8786d4fa209$export$70ddd50daefc295f);
$parcel$export($8342c8786d4fa209$exports, "EthereumEmbeddedWalletAccount", () => $8342c8786d4fa209$export$42e79fc33a58a2f5);
$parcel$export($8342c8786d4fa209$exports, "SolanaEmbeddedWalletAccount", () => $8342c8786d4fa209$export$734c44f2e990ba65);
$parcel$export($8342c8786d4fa209$exports, "BitcoinSegwitEmbeddedWalletAccount", () => $8342c8786d4fa209$export$c05834be0df10117);
$parcel$export($8342c8786d4fa209$exports, "BitcoinTaprootEmbeddedWalletAccount", () => $8342c8786d4fa209$export$4d795c7186f7e1f1);
$parcel$export($8342c8786d4fa209$exports, "GoogleOauthAccount", () => $8342c8786d4fa209$export$ab3c40bebc4d6f36);
$parcel$export($8342c8786d4fa209$exports, "TwitterOauthAccount", () => $8342c8786d4fa209$export$31cc32c7bc65c2e0);
$parcel$export($8342c8786d4fa209$exports, "DiscordOauthAccount", () => $8342c8786d4fa209$export$cb35596f96141125);
$parcel$export($8342c8786d4fa209$exports, "GithubOauthAccount", () => $8342c8786d4fa209$export$55430b29b82d98a8);
$parcel$export($8342c8786d4fa209$exports, "LinkedInOauthAccount", () => $8342c8786d4fa209$export$25b982740d2e431c);
$parcel$export($8342c8786d4fa209$exports, "SpotifyOauthAccount", () => $8342c8786d4fa209$export$260592be4b1062f4);
$parcel$export($8342c8786d4fa209$exports, "InstagramOauthAccount", () => $8342c8786d4fa209$export$c683d35f732c1912);
$parcel$export($8342c8786d4fa209$exports, "TiktokOauthAccount", () => $8342c8786d4fa209$export$5e8143c3f32ac816);
$parcel$export($8342c8786d4fa209$exports, "AppleOauthAccount", () => $8342c8786d4fa209$export$67af8a2e34850611);
$parcel$export($8342c8786d4fa209$exports, "CustomJwtAccount", () => $8342c8786d4fa209$export$5da87a1cf22b57d0);
$parcel$export($8342c8786d4fa209$exports, "CrossAppEmbeddedWallet", () => $8342c8786d4fa209$export$ccd62fbf4b025fee);
$parcel$export($8342c8786d4fa209$exports, "CrossAppSmartWallet", () => $8342c8786d4fa209$export$8f1f4ad4f8276ad7);
$parcel$export($8342c8786d4fa209$exports, "CrossAppAccount", () => $8342c8786d4fa209$export$564035ac82295c40);
$parcel$export($8342c8786d4fa209$exports, "LinkedAccount", () => $8342c8786d4fa209$export$70ab2a322f92399);
$parcel$export($8342c8786d4fa209$exports, "SmsMfaMethod", () => $8342c8786d4fa209$export$3250154351927c42);
$parcel$export($8342c8786d4fa209$exports, "TotpMfaMethod", () => $8342c8786d4fa209$export$27837b14d6717da8);
$parcel$export($8342c8786d4fa209$exports, "PasskeyMfaMethod", () => $8342c8786d4fa209$export$dd0fcfda522da705);
$parcel$export($8342c8786d4fa209$exports, "LinkedMfaMethod", () => $8342c8786d4fa209$export$7d2a870b119c9ff4);
$parcel$export($8342c8786d4fa209$exports, "CustomMetadata", () => $8342c8786d4fa209$export$58677eb7a73b7d5a);
$parcel$export($8342c8786d4fa209$exports, "OAuthTokens", () => $8342c8786d4fa209$export$fdfea991b75c2811);
$parcel$export($8342c8786d4fa209$exports, "User", () => $8342c8786d4fa209$export$1f44aaf2ec115b54);
$parcel$export($8342c8786d4fa209$exports, "SessionUpdateActionEnum", () => $8342c8786d4fa209$export$bbd8e1b014079dc1);
$parcel$export($8342c8786d4fa209$exports, "AuthenticatedUser", () => $8342c8786d4fa209$export$7de20aee312d6767);
$parcel$export($8342c8786d4fa209$exports, "LoggedOutUser", () => $8342c8786d4fa209$export$8339543958fe900f);
$parcel$export($8342c8786d4fa209$exports, "MaybeUser", () => $8342c8786d4fa209$export$2b6251d563a4e626);


var $2c33e80b1754f54f$exports = {};

$parcel$export($2c33e80b1754f54f$exports, "SmartWalletProvider", () => $2c33e80b1754f54f$export$96b3537f43197348);
$parcel$export($2c33e80b1754f54f$exports, "AlchemyPaymasterContextSchema", () => $2c33e80b1754f54f$export$2a5d583dc6eed366);
$parcel$export($2c33e80b1754f54f$exports, "SmartWalletNetworkConfigurationInputSchema", () => $2c33e80b1754f54f$export$524bc600c78a5033);
$parcel$export($2c33e80b1754f54f$exports, "SmartWalletConfigurationSchema", () => $2c33e80b1754f54f$export$721df9a9735783ee);
$parcel$export($2c33e80b1754f54f$exports, "SmartWalletConfigurationInputSchema", () => $2c33e80b1754f54f$export$8501bbb82f9b8fbb);
$parcel$export($2c33e80b1754f54f$exports, "SmartWalletConfigurationResponseSchema", () => $2c33e80b1754f54f$export$3744ee3bf2e1e5e2);
$parcel$export($2c33e80b1754f54f$exports, "SAFE", () => $95778ee21212b7c4$export$467c4d345d20536b);
$parcel$export($2c33e80b1754f54f$exports, "KERNEL", () => $95778ee21212b7c4$export$5a7fd86629827df3);
$parcel$export($2c33e80b1754f54f$exports, "LIGHT_ACCOUNT", () => $95778ee21212b7c4$export$619884a26e96e55d);
$parcel$export($2c33e80b1754f54f$exports, "BICONOMY", () => $95778ee21212b7c4$export$96c76464f555e39d);
$parcel$export($2c33e80b1754f54f$exports, "COINBASE_SMART_WALLET", () => $95778ee21212b7c4$export$404e03620b321d9e);
$parcel$export($2c33e80b1754f54f$exports, "SUPPORTED_SMART_WALLET_TYPES", () => $95778ee21212b7c4$export$9a0b8cb5335f5046);

const $95778ee21212b7c4$export$467c4d345d20536b = "safe";
const $95778ee21212b7c4$export$5a7fd86629827df3 = "kernel";
const $95778ee21212b7c4$export$96c76464f555e39d = "biconomy";
const $95778ee21212b7c4$export$619884a26e96e55d = "light_account";
const $95778ee21212b7c4$export$404e03620b321d9e = "coinbase_smart_wallet";
const $95778ee21212b7c4$export$9a0b8cb5335f5046 = [
    $95778ee21212b7c4$export$467c4d345d20536b,
    $95778ee21212b7c4$export$5a7fd86629827df3,
    $95778ee21212b7c4$export$96c76464f555e39d,
    $95778ee21212b7c4$export$619884a26e96e55d,
    $95778ee21212b7c4$export$404e03620b321d9e
];


const $2c33e80b1754f54f$export$96b3537f43197348 = (0, $hzore$zod.z).enum((0, $95778ee21212b7c4$export$9a0b8cb5335f5046), {
    invalid_type_error: "Please specify a supported provider.",
    required_error: "Please specify a supported provider."
});
const $2c33e80b1754f54f$var$Eip155Schema = (0, $hzore$zod.z).string().regex(/^eip155:\d+$/, "Chain ID must be an eip155 chain ID");
const $2c33e80b1754f54f$export$2a5d583dc6eed366 = (0, $hzore$zod.z).object({
    policy_id: (0, $hzore$zod.z).string().uuid()
});
const $2c33e80b1754f54f$var$SmartWalletNetworkConfigurationSchema = (0, $hzore$zod.z).object({
    chain_id: $2c33e80b1754f54f$var$Eip155Schema,
    bundler_url: (0, $hzore$zod.z).string(),
    paymaster_url: (0, $hzore$zod.z).string().optional(),
    rpc_url: (0, $hzore$zod.z).string().optional(),
    chain_name: (0, $hzore$zod.z).string().optional(),
    paymaster_context: $2c33e80b1754f54f$export$2a5d583dc6eed366.optional()
});
const $2c33e80b1754f54f$export$524bc600c78a5033 = (0, $hzore$zod.z).object({
    chain_id: $2c33e80b1754f54f$var$Eip155Schema,
    bundler_url: (0, $hzore$zod.z).string().optional(),
    paymaster_url: (0, $hzore$zod.z).string().optional(),
    rpc_url: (0, $hzore$zod.z).string().optional(),
    chain_name: (0, $hzore$zod.z).string().optional(),
    paymaster_context: $2c33e80b1754f54f$export$2a5d583dc6eed366.optional()
});
const $2c33e80b1754f54f$export$721df9a9735783ee = (0, $hzore$zod.z).discriminatedUnion("enabled", [
    (0, $hzore$zod.z).object({
        enabled: (0, $hzore$zod.z).literal(false)
    }),
    (0, $hzore$zod.z).object({
        enabled: (0, $hzore$zod.z).literal(true),
        smart_wallet_type: $2c33e80b1754f54f$export$96b3537f43197348,
        configured_networks: (0, $hzore$zod.z).array($2c33e80b1754f54f$var$SmartWalletNetworkConfigurationSchema).min(1)
    })
]);
const $2c33e80b1754f54f$export$8501bbb82f9b8fbb = (0, $hzore$zod.z).discriminatedUnion("enabled", [
    (0, $hzore$zod.z).object({
        enabled: (0, $hzore$zod.z).literal(false)
    }),
    (0, $hzore$zod.z).object({
        enabled: (0, $hzore$zod.z).literal(true),
        smart_wallet_type: $2c33e80b1754f54f$export$96b3537f43197348,
        configured_networks: (0, $hzore$zod.z).array($2c33e80b1754f54f$export$524bc600c78a5033).min(1)
    })
]);
const $2c33e80b1754f54f$export$3744ee3bf2e1e5e2 = $2c33e80b1754f54f$export$721df9a9735783ee;


const $8342c8786d4fa209$export$b291b2a8281f162e = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("email"),
    address: (0, $hzore$zod.z).string(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$e461068a75eb0fb3 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("phone"),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $hzore$zod.z).string(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$16168ca1ad2afd69 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).enum([
        "wallet",
        "smart_wallet"
    ]),
    address: (0, $hzore$zod.z).string(),
    chain_type: (0, $hzore$zod.z).enum([
        "solana",
        "ethereum"
    ])
});
const $8342c8786d4fa209$export$e72ed3751242ab66 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("wallet"),
    address: (0, $hzore$zod.z).string(),
    /**
   * @deprecated Will be removed in a future release
   */ chain_id: (0, $hzore$zod.z).string().optional(),
    chain_type: (0, $hzore$zod.z).literal("ethereum"),
    /**
   * @deprecated Use `wallet_client_type` instead.
   */ wallet_client: (0, $hzore$zod.z).literal("unknown"),
    wallet_client_type: (0, $hzore$zod.z).string().optional(),
    connector_type: (0, $hzore$zod.z).string().optional(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$9847d582941f64b6 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("smart_wallet"),
    address: (0, $hzore$zod.z).string(),
    smart_wallet_type: (0, $2c33e80b1754f54f$export$96b3537f43197348),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$d08a38b431a135bc = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("wallet"),
    address: (0, $hzore$zod.z).string(),
    chain_type: (0, $hzore$zod.z).literal("solana"),
    /**
   * @deprecated Use `wallet_client_type` instead.
   */ wallet_client: (0, $hzore$zod.z).literal("unknown"),
    wallet_client_type: (0, $hzore$zod.z).string().optional(),
    connector_type: (0, $hzore$zod.z).string().optional(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$70b11e99555e84cb = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("farcaster"),
    fid: (0, $hzore$zod.z).number(),
    owner_address: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec),
    username: (0, $hzore$zod.z).string().optional(),
    display_name: (0, $hzore$zod.z).string().optional(),
    bio: (0, $hzore$zod.z).string().optional(),
    // The `profile_picture` interface is deprecated in favor of `profile_picture_url`
    // as of `react-auth@1.55.2`.
    profile_picture: (0, $hzore$zod.z).string().optional(),
    profile_picture_url: (0, $hzore$zod.z).string().optional(),
    homepage_url: (0, $hzore$zod.z).string().optional(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable(),
    signer_public_key: (0, $hzore$zod.z).string().optional()
});
const $8342c8786d4fa209$export$c7ead6bbfb2c42a0 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("passkey"),
    created_with_browser: (0, $hzore$zod.z).string().optional(),
    created_with_os: (0, $hzore$zod.z).string().optional(),
    created_with_device: (0, $hzore$zod.z).string().optional(),
    credential_id: (0, $hzore$zod.z).string(),
    authenticator_name: (0, $hzore$zod.z).string().optional(),
    enrolled_in_mfa: (0, $hzore$zod.z).boolean(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$70ddd50daefc295f = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("telegram"),
    telegram_user_id: (0, $hzore$zod.z).string(),
    first_name: (0, $hzore$zod.z).string().nullish(),
    last_name: (0, $hzore$zod.z).string().nullish(),
    username: (0, $hzore$zod.z).string().nullish(),
    photo_url: (0, $hzore$zod.z).string().nullish(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
}).transform((value)=>({
        ...value,
        // TODO: We keep this for backwards compatibility. Remove this after we make sure no one uses this version of the response
        /* eslint-disable-next-line @typescript-eslint/naming-convention */ telegramUserId: value.telegram_user_id,
        /* eslint-disable-next-line @typescript-eslint/naming-convention */ firstName: value.first_name
    }));
const $8342c8786d4fa209$var$RecoveryMethod = (0, $hzore$zod.z).enum([
    "privy",
    "user-passcode",
    "google-drive",
    "icloud"
]);
const $8342c8786d4fa209$var$EmbeddedWalletAccount = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("wallet"),
    address: (0, $hzore$zod.z).string(),
    imported: (0, $hzore$zod.z).boolean().default(false),
    delegated: (0, $hzore$zod.z).boolean().default(false),
    wallet_index: (0, $hzore$zod.z).number(),
    /**
   * @deprecated Will be removed in a future release
   */ chain_id: (0, $hzore$zod.z).string(),
    chain_type: (0, $hzore$zod.z).string(),
    /**
   * @deprecated Use `wallet_client_type` instead.
   */ wallet_client: (0, $hzore$zod.z).literal("privy"),
    wallet_client_type: (0, $hzore$zod.z).literal("privy"),
    connector_type: (0, $hzore$zod.z).literal("embedded"),
    recovery_method: $8342c8786d4fa209$var$RecoveryMethod,
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$42e79fc33a58a2f5 = $8342c8786d4fa209$var$EmbeddedWalletAccount.merge((0, $hzore$zod.z).object({
    chain_type: (0, $hzore$zod.z).literal("ethereum")
}));
const $8342c8786d4fa209$export$734c44f2e990ba65 = $8342c8786d4fa209$var$EmbeddedWalletAccount.merge((0, $hzore$zod.z).object({
    chain_type: (0, $hzore$zod.z).literal("solana"),
    /** @deprecated use `address` instead. */ public_key: (0, $hzore$zod.z).string()
}));
const $8342c8786d4fa209$export$c05834be0df10117 = $8342c8786d4fa209$var$EmbeddedWalletAccount.merge((0, $hzore$zod.z).object({
    chain_type: (0, $hzore$zod.z).literal("bitcoin-segwit"),
    public_key: (0, $hzore$zod.z).string()
}));
const $8342c8786d4fa209$export$4d795c7186f7e1f1 = $8342c8786d4fa209$var$EmbeddedWalletAccount.merge((0, $hzore$zod.z).object({
    chain_type: (0, $hzore$zod.z).literal("bitcoin-taproot"),
    public_key: (0, $hzore$zod.z).string()
}));
const $8342c8786d4fa209$export$ab3c40bebc4d6f36 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("google_oauth"),
    subject: (0, $hzore$zod.z).string(),
    email: (0, $hzore$zod.z).string(),
    name: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$31cc32c7bc65c2e0 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("twitter_oauth"),
    subject: (0, $hzore$zod.z).string(),
    username: (0, $hzore$zod.z).string().nullable(),
    name: (0, $hzore$zod.z).string().nullable(),
    profile_picture_url: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$cb35596f96141125 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("discord_oauth"),
    subject: (0, $hzore$zod.z).string(),
    username: (0, $hzore$zod.z).string().nullable(),
    email: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$55430b29b82d98a8 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("github_oauth"),
    subject: (0, $hzore$zod.z).string(),
    username: (0, $hzore$zod.z).string().nullable(),
    name: (0, $hzore$zod.z).string().nullable(),
    email: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$25b982740d2e431c = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("linkedin_oauth"),
    subject: (0, $hzore$zod.z).string(),
    name: (0, $hzore$zod.z).string().optional(),
    email: (0, $hzore$zod.z).string().nullable(),
    vanity_name: (0, $hzore$zod.z).string().optional(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$260592be4b1062f4 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("spotify_oauth"),
    subject: (0, $hzore$zod.z).string(),
    email: (0, $hzore$zod.z).string().nullable(),
    name: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$c683d35f732c1912 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("instagram_oauth"),
    subject: (0, $hzore$zod.z).string(),
    username: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$5e8143c3f32ac816 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("tiktok_oauth"),
    subject: (0, $hzore$zod.z).string(),
    username: (0, $hzore$zod.z).string().nullable(),
    name: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$67af8a2e34850611 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("apple_oauth"),
    subject: (0, $hzore$zod.z).string(),
    email: (0, $hzore$zod.z).string().nullable(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$5da87a1cf22b57d0 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("custom_auth"),
    custom_user_id: (0, $hzore$zod.z).string(),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$ccd62fbf4b025fee = (0, $hzore$zod.z).object({
    address: (0, $hzore$zod.z).string()
});
const $8342c8786d4fa209$export$8f1f4ad4f8276ad7 = (0, $hzore$zod.z).object({
    address: (0, $hzore$zod.z).string()
});
const $8342c8786d4fa209$export$564035ac82295c40 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("cross_app"),
    subject: (0, $hzore$zod.z).string(),
    provider_app_id: (0, $hzore$zod.z).string(),
    embedded_wallets: (0, $hzore$zod.z).array($8342c8786d4fa209$export$ccd62fbf4b025fee),
    smart_wallets: (0, $hzore$zod.z).array($8342c8786d4fa209$export$8f1f4ad4f8276ad7),
    /** @deprecated use `first_verified_at` instead. */ verified_at: (0, $hzore$zod.z).number(),
    first_verified_at: (0, $hzore$zod.z).number().nullable(),
    latest_verified_at: (0, $hzore$zod.z).number().nullable()
});
const $8342c8786d4fa209$export$70ab2a322f92399 = (0, $hzore$zod.z).union([
    $8342c8786d4fa209$export$b291b2a8281f162e,
    $8342c8786d4fa209$export$e461068a75eb0fb3,
    $8342c8786d4fa209$export$e72ed3751242ab66,
    $8342c8786d4fa209$export$d08a38b431a135bc,
    $8342c8786d4fa209$export$9847d582941f64b6,
    $8342c8786d4fa209$export$42e79fc33a58a2f5,
    $8342c8786d4fa209$export$734c44f2e990ba65,
    $8342c8786d4fa209$export$c05834be0df10117,
    $8342c8786d4fa209$export$4d795c7186f7e1f1,
    $8342c8786d4fa209$export$ab3c40bebc4d6f36,
    $8342c8786d4fa209$export$31cc32c7bc65c2e0,
    $8342c8786d4fa209$export$cb35596f96141125,
    $8342c8786d4fa209$export$55430b29b82d98a8,
    $8342c8786d4fa209$export$260592be4b1062f4,
    $8342c8786d4fa209$export$c683d35f732c1912,
    $8342c8786d4fa209$export$5e8143c3f32ac816,
    $8342c8786d4fa209$export$25b982740d2e431c,
    $8342c8786d4fa209$export$67af8a2e34850611,
    $8342c8786d4fa209$export$5da87a1cf22b57d0,
    $8342c8786d4fa209$export$70b11e99555e84cb,
    $8342c8786d4fa209$export$c7ead6bbfb2c42a0,
    $8342c8786d4fa209$export$70ddd50daefc295f,
    $8342c8786d4fa209$export$564035ac82295c40
]);
const $8342c8786d4fa209$export$3250154351927c42 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("sms"),
    verified_at: (0, $hzore$zod.z).number()
});
const $8342c8786d4fa209$export$27837b14d6717da8 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("totp"),
    verified_at: (0, $hzore$zod.z).number()
});
const $8342c8786d4fa209$export$dd0fcfda522da705 = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("passkey"),
    verified_at: (0, $hzore$zod.z).number()
});
const $8342c8786d4fa209$export$7d2a870b119c9ff4 = (0, $hzore$zod.z).union([
    $8342c8786d4fa209$export$3250154351927c42,
    $8342c8786d4fa209$export$27837b14d6717da8,
    $8342c8786d4fa209$export$dd0fcfda522da705
]);
const $8342c8786d4fa209$export$58677eb7a73b7d5a = (0, $hzore$zod.z).record((0, $hzore$zod.z).string(), (0, $hzore$zod.z).union([
    (0, $hzore$zod.z).string(),
    (0, $hzore$zod.z).number(),
    (0, $hzore$zod.z).boolean()
]));
const $8342c8786d4fa209$export$fdfea991b75c2811 = (0, $hzore$zod.z).object({
    provider: (0, $hzore$zod.z).string(),
    access_token: (0, $hzore$zod.z).string(),
    // The following additional parameters are optional as some OAuth providers may not return them.
    // Being conservative with marking them optional for now.
    access_token_expires_in_seconds: (0, $hzore$zod.z).number().optional(),
    refresh_token: (0, $hzore$zod.z).string().optional(),
    refresh_token_expires_in_seconds: (0, $hzore$zod.z).number().optional(),
    scopes: (0, $hzore$zod.z).array((0, $hzore$zod.z).string()).optional()
});
const $8342c8786d4fa209$export$1f44aaf2ec115b54 = (0, $hzore$zod.z).object({
    id: (0, $hzore$zod.z).string(),
    linked_accounts: (0, $hzore$zod.z).array($8342c8786d4fa209$export$70ab2a322f92399),
    mfa_methods: (0, $hzore$zod.z).array($8342c8786d4fa209$export$7d2a870b119c9ff4),
    created_at: (0, $hzore$zod.z).number(),
    has_accepted_terms: (0, $hzore$zod.z).boolean(),
    is_guest: (0, $hzore$zod.z).boolean(),
    custom_metadata: $8342c8786d4fa209$export$58677eb7a73b7d5a.optional()
});
const $8342c8786d4fa209$export$bbd8e1b014079dc1 = (0, $hzore$zod.z).enum([
    "set",
    "ignore",
    "clear"
]);
const $8342c8786d4fa209$export$7de20aee312d6767 = (0, $hzore$zod.z).object({
    user: $8342c8786d4fa209$export$1f44aaf2ec115b54,
    token: (0, $hzore$zod.z).string().min(1).nullable(),
    privy_access_token: (0, $hzore$zod.z).string().min(1).nullable(),
    refresh_token: (0, $hzore$zod.z).string().min(1).nullable(),
    identity_token: (0, $hzore$zod.z).string().min(1).optional(),
    is_new_user: (0, $hzore$zod.z).boolean().optional(),
    oauth_tokens: $8342c8786d4fa209$export$fdfea991b75c2811.optional(),
    // TODO: deprecate once Deform moves off of the legacy method
    oauth_provider_tokens: (0, $hzore$zod.z).object({
        provider: (0, $hzore$zod.z).string(),
        access_token: (0, $hzore$zod.z).string(),
        // The following additional parameters are optional as some OAuth providers may not return them.
        // Being conservative with marking them optional for now.
        access_token_expires_in_seconds: (0, $hzore$zod.z).number().optional(),
        refresh_token: (0, $hzore$zod.z).string().optional(),
        scopes: (0, $hzore$zod.z).array((0, $hzore$zod.z).string()).optional()
    }).optional(),
    /**
   * Instructs the client on how to handle tokens received from /sessions endpoint
   * Seeks to mimic the behavior of cookies with manual storage
   *
   * - `set`: _write both tokens to storage_
   * - `clear`: _remove tokens from storage_
   * - `ignore`: _leave tokens storage unchanged_
   */ session_update_action: $8342c8786d4fa209$export$bbd8e1b014079dc1
});
const $8342c8786d4fa209$export$8339543958fe900f = (0, $hzore$zod.z).object({
    user: (0, $hzore$zod.z).null(),
    token: (0, $hzore$zod.z).null(),
    refresh_token: (0, $hzore$zod.z).null(),
    /** Instructs the client to clear any persisted tokens */ session_update_action: (0, $hzore$zod.z).literal($8342c8786d4fa209$export$bbd8e1b014079dc1.Values.clear)
});
const $8342c8786d4fa209$export$2b6251d563a4e626 = (0, $hzore$zod.z).union([
    $8342c8786d4fa209$export$7de20aee312d6767,
    $8342c8786d4fa209$export$8339543958fe900f
]);


const $b529354c2182e52b$var$latestVerifiedAt = {
    lv: (0, $hzore$zod.z).number().nullable()
};
const $b529354c2182e52b$export$783ee7c583b70bea = (0, $8342c8786d4fa209$export$b291b2a8281f162e).pick({
    type: true,
    address: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$5050d0079ef11bc6 = (0, $8342c8786d4fa209$export$e461068a75eb0fb3).pick({
    type: true,
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: true
}).extend($b529354c2182e52b$var$latestVerifiedAt).transform(({ phoneNumber: phoneNumber, ...rest })=>({
        phone_number: phoneNumber,
        ...rest
    }));
const $b529354c2182e52b$export$fd3f2073209314f0 = (0, $8342c8786d4fa209$export$e72ed3751242ab66).pick({
    type: true,
    address: true,
    chain_type: true,
    wallet_client_type: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$7d91b89a98a32206 = (0, $8342c8786d4fa209$export$70b11e99555e84cb).pick({
    type: true,
    fid: true,
    username: true,
    owner_address: true
}).extend($b529354c2182e52b$var$latestVerifiedAt)// Owner address abbriviated to oa to be efficient in cookie-space
.transform(({ owner_address: owner_address, ...rest })=>({
        oa: owner_address,
        ...rest
    }));
const $b529354c2182e52b$export$3da0109396521ad1 = (0, $8342c8786d4fa209$export$c7ead6bbfb2c42a0).pick({
    type: true,
    credential_id: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$883001ac4b913adc = (0, $hzore$zod.z).object({
    type: (0, $hzore$zod.z).literal("telegram"),
    telegram_user_id: (0, $hzore$zod.z).string(),
    username: (0, $hzore$zod.z).string().nullish(),
    lv: (0, $hzore$zod.z).number().nullable()
});
const $b529354c2182e52b$export$10bcfd05b1db0bfb = (0, $8342c8786d4fa209$export$ab3c40bebc4d6f36).pick({
    type: true,
    subject: true,
    email: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$5cf36acae8eed78 = (0, $8342c8786d4fa209$export$31cc32c7bc65c2e0).pick({
    type: true,
    subject: true,
    username: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$18e770e71ddcac8b = (0, $8342c8786d4fa209$export$cb35596f96141125).pick({
    type: true,
    subject: true,
    username: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$2fd8fb76725390c8 = (0, $8342c8786d4fa209$export$55430b29b82d98a8).pick({
    type: true,
    subject: true,
    username: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$7325b1b9ff5b138f = (0, $8342c8786d4fa209$export$25b982740d2e431c).pick({
    type: true,
    subject: true,
    email: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$5991ad07a5ac6061 = (0, $8342c8786d4fa209$export$260592be4b1062f4).pick({
    type: true,
    subject: true,
    email: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$d50f791175bcd25a = (0, $8342c8786d4fa209$export$c683d35f732c1912).pick({
    type: true,
    subject: true,
    username: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$ad548be3bcd74188 = (0, $8342c8786d4fa209$export$5e8143c3f32ac816).pick({
    type: true,
    subject: true,
    username: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$b8a150e8882d7617 = (0, $8342c8786d4fa209$export$67af8a2e34850611).pick({
    type: true,
    subject: true,
    email: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$4a1709b5a6406ed8 = (0, $8342c8786d4fa209$export$5da87a1cf22b57d0).pick({
    type: true,
    custom_user_id: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$23abd82a93e245c8 = (0, $8342c8786d4fa209$export$564035ac82295c40).pick({
    type: true,
    subject: true,
    provider_app_id: true,
    embedded_wallets: true,
    smart_wallets: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);
const $b529354c2182e52b$export$18ff60c21403359 = (0, $8342c8786d4fa209$export$9847d582941f64b6).pick({
    type: true,
    smart_wallet_type: true,
    address: true
}).extend($b529354c2182e52b$var$latestVerifiedAt);


var $6c1ac28b391e6887$exports = {};

$parcel$export($6c1ac28b391e6887$exports, "MfaVerifyResponse", () => $6c1ac28b391e6887$export$2a073761fe65eeb);
$parcel$export($6c1ac28b391e6887$exports, "MfaSmsInitInput", () => $6c1ac28b391e6887$export$5f85d1e59e4b8093);
$parcel$export($6c1ac28b391e6887$exports, "MfaSmsAuthenticateEnrollInput", () => $6c1ac28b391e6887$export$d79e41bdbeb33bc8);
$parcel$export($6c1ac28b391e6887$exports, "MfaSmsEnrollInput", () => $6c1ac28b391e6887$export$44ba6bee6f8c49bc);
$parcel$export($6c1ac28b391e6887$exports, "MfaSmsVerifyInput", () => $6c1ac28b391e6887$export$826840b7b6a37c22);
$parcel$export($6c1ac28b391e6887$exports, "MfaTotpInput", () => $6c1ac28b391e6887$export$c5079467361455e6);
$parcel$export($6c1ac28b391e6887$exports, "ResponseTotpInitMfa", () => $6c1ac28b391e6887$export$2e0b8857111f6a95);


const $6c1ac28b391e6887$export$2a073761fe65eeb = (0, ($parcel$interopDefault($hzore$zod))).object({
    token: (0, ($parcel$interopDefault($hzore$zod))).string()
}).strict();
/**
 * SMS MFA enrollment and verification inputs.
 */ const $6c1ac28b391e6887$var$MfaSmsInitVerifyInput = (0, ($parcel$interopDefault($hzore$zod))).object({
    action: (0, ($parcel$interopDefault($hzore$zod))).literal("verify")
}).strict();
const $6c1ac28b391e6887$var$MfaSmsInitEnrollInput = (0, ($parcel$interopDefault($hzore$zod))).object({
    action: (0, ($parcel$interopDefault($hzore$zod))).literal("enroll"),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $70fd7ce05b552209$export$3d623a7758cab61e)
}).strict();
const $6c1ac28b391e6887$export$5f85d1e59e4b8093 = (0, ($parcel$interopDefault($hzore$zod))).union([
    $6c1ac28b391e6887$var$MfaSmsInitVerifyInput,
    $6c1ac28b391e6887$var$MfaSmsInitEnrollInput
]);
const $6c1ac28b391e6887$export$d79e41bdbeb33bc8 = (0, ($parcel$interopDefault($hzore$zod))).object({
    action: (0, ($parcel$interopDefault($hzore$zod))).literal("enroll").optional(),
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $70fd7ce05b552209$export$3d623a7758cab61e)
}).strict();
const $6c1ac28b391e6887$export$44ba6bee6f8c49bc = (0, ($parcel$interopDefault($hzore$zod))).object({
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $70fd7ce05b552209$export$3d623a7758cab61e)
}).strict();
const $6c1ac28b391e6887$export$826840b7b6a37c22 = (0, ($parcel$interopDefault($hzore$zod))).object({
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f)
}).strict();
const $6c1ac28b391e6887$export$c5079467361455e6 = (0, ($parcel$interopDefault($hzore$zod))).object({
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f)
}).strict();
const $6c1ac28b391e6887$export$2e0b8857111f6a95 = (0, ($parcel$interopDefault($hzore$zod))).object({
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ totpSecret: (0, ($parcel$interopDefault($hzore$zod))).string(),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ totpAuthUrl: (0, ($parcel$interopDefault($hzore$zod))).string()
}).strict();


var $20d0fccc5568a382$exports = {};

$parcel$export($20d0fccc5568a382$exports, "MfaPasskeyInitInput", () => $20d0fccc5568a382$export$2d6bddbbdba11994);
$parcel$export($20d0fccc5568a382$exports, "ResponsePasskeyInitMfa", () => $20d0fccc5568a382$export$94c076e2d3cd7355);
$parcel$export($20d0fccc5568a382$exports, "MfaPasskeyVerifyInput", () => $20d0fccc5568a382$export$afc24607eeb5f33e);
$parcel$export($20d0fccc5568a382$exports, "MfaEnrollmentPasskeyInput", () => $20d0fccc5568a382$export$3c909b91f5e6545f);

var $e57b7edfe6122667$exports = {};

$parcel$export($e57b7edfe6122667$exports, "PasskeyAuthenticatorVerifyOptions", () => $e57b7edfe6122667$export$7b01305e0ab33ea3);
$parcel$export($e57b7edfe6122667$exports, "PasskeyAuthenticatorEnrollmentOptions", () => $e57b7edfe6122667$export$1c8fd79a94eba09d);
$parcel$export($e57b7edfe6122667$exports, "PasskeyAuthenticatorVerifyResponse", () => $e57b7edfe6122667$export$96203b761bf7cadb);
$parcel$export($e57b7edfe6122667$exports, "PasskeyAuthenticatorEnrollmentResponse", () => $e57b7edfe6122667$export$49424bcfec0159aa);
$parcel$export($e57b7edfe6122667$exports, "PasskeyInitInput", () => $e57b7edfe6122667$export$8c48c68e39a52ea);
$parcel$export($e57b7edfe6122667$exports, "ResponsePasskeyInitAuthenticate", () => $e57b7edfe6122667$export$2741be68c8db9b43);
$parcel$export($e57b7edfe6122667$exports, "ResponsePasskeyInitLink", () => $e57b7edfe6122667$export$b968e9f4fdc5f0b2);
$parcel$export($e57b7edfe6122667$exports, "ResponsePasskeyInitRegister", () => $e57b7edfe6122667$export$88c08ece0d5f563d);
$parcel$export($e57b7edfe6122667$exports, "PasskeyLinkInput", () => $e57b7edfe6122667$export$9bd14c1a22f65d2);
$parcel$export($e57b7edfe6122667$exports, "PasskeyRegisterInput", () => $e57b7edfe6122667$export$6f9781ad5a96bdcf);
$parcel$export($e57b7edfe6122667$exports, "PasskeyAuthenticateInput", () => $e57b7edfe6122667$export$8525265affc59e4b);
$parcel$export($e57b7edfe6122667$exports, "UnlinkPasskeyInput", () => $e57b7edfe6122667$export$1d32dd5b05e1d4dd);

const $e57b7edfe6122667$export$7b01305e0ab33ea3 = (0, ($parcel$interopDefault($hzore$zod))).object({
    challenge: (0, ($parcel$interopDefault($hzore$zod))).string(),
    timeout: (0, ($parcel$interopDefault($hzore$zod))).number().optional(),
    rp_id: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    allow_credentials: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).object({
        id: (0, ($parcel$interopDefault($hzore$zod))).string(),
        type: (0, ($parcel$interopDefault($hzore$zod))).string(),
        transports: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).string()).optional()
    })).optional(),
    user_verification: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    extensions: (0, ($parcel$interopDefault($hzore$zod))).object({
        app_id: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        cred_props: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional(),
        hmac_create_secret: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
    }).optional()
});
const $e57b7edfe6122667$export$1c8fd79a94eba09d = (0, ($parcel$interopDefault($hzore$zod))).object({
    rp: (0, ($parcel$interopDefault($hzore$zod))).object({
        name: (0, ($parcel$interopDefault($hzore$zod))).string(),
        id: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
    }),
    user: (0, ($parcel$interopDefault($hzore$zod))).object({
        id: (0, ($parcel$interopDefault($hzore$zod))).string(),
        name: (0, ($parcel$interopDefault($hzore$zod))).string(),
        display_name: (0, ($parcel$interopDefault($hzore$zod))).string()
    }),
    challenge: (0, ($parcel$interopDefault($hzore$zod))).string(),
    pub_key_cred_params: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).object({
        alg: (0, ($parcel$interopDefault($hzore$zod))).number(),
        type: (0, ($parcel$interopDefault($hzore$zod))).literal("public-key")
    })),
    timeout: (0, ($parcel$interopDefault($hzore$zod))).number().optional(),
    exclude_credentials: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).object({
        id: (0, ($parcel$interopDefault($hzore$zod))).string(),
        type: (0, ($parcel$interopDefault($hzore$zod))).string(),
        transports: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).string()).optional()
    })).optional(),
    authenticator_selection: (0, ($parcel$interopDefault($hzore$zod))).object({
        authenticator_attachment: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        require_resident_key: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional(),
        resident_key: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        user_verification: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
    }).optional(),
    attestation: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    extensions: (0, ($parcel$interopDefault($hzore$zod))).object({
        app_id: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        cred_props: (0, ($parcel$interopDefault($hzore$zod))).object({
            rk: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
        }).optional(),
        hmac_create_secret: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
    }).optional()
});
const $e57b7edfe6122667$export$96203b761bf7cadb = (0, ($parcel$interopDefault($hzore$zod))).object({
    id: (0, ($parcel$interopDefault($hzore$zod))).string(),
    raw_id: (0, ($parcel$interopDefault($hzore$zod))).string(),
    response: (0, ($parcel$interopDefault($hzore$zod))).object({
        client_data_json: (0, ($parcel$interopDefault($hzore$zod))).string(),
        authenticator_data: (0, ($parcel$interopDefault($hzore$zod))).string(),
        signature: (0, ($parcel$interopDefault($hzore$zod))).string(),
        user_handle: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
    }),
    authenticator_attachment: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    client_extension_results: (0, ($parcel$interopDefault($hzore$zod))).object({
        app_id: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional(),
        cred_props: (0, ($parcel$interopDefault($hzore$zod))).object({
            rk: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
        }).optional(),
        hmac_create_secret: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
    }),
    type: (0, ($parcel$interopDefault($hzore$zod))).literal("public-key")
});
const $e57b7edfe6122667$export$49424bcfec0159aa = (0, ($parcel$interopDefault($hzore$zod))).object({
    id: (0, ($parcel$interopDefault($hzore$zod))).string(),
    raw_id: (0, ($parcel$interopDefault($hzore$zod))).string(),
    response: (0, ($parcel$interopDefault($hzore$zod))).object({
        client_data_json: (0, ($parcel$interopDefault($hzore$zod))).string(),
        attestation_object: (0, ($parcel$interopDefault($hzore$zod))).string(),
        authenticator_data: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        // TODO: Type this to AuthenticatorTransportFuture[]
        transports: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).any()).optional(),
        public_key_algorithm: (0, ($parcel$interopDefault($hzore$zod))).number().optional(),
        public_key: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
    }),
    authenticator_attachment: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    client_extension_results: (0, ($parcel$interopDefault($hzore$zod))).object({
        app_id: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional(),
        cred_props: (0, ($parcel$interopDefault($hzore$zod))).object({
            rk: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
        }).optional(),
        hmac_create_secret: (0, ($parcel$interopDefault($hzore$zod))).boolean().optional()
    }),
    type: (0, ($parcel$interopDefault($hzore$zod))).literal("public-key")
});
const $e57b7edfe6122667$export$8c48c68e39a52ea = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional(),
    token: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
}).strict();
const $e57b7edfe6122667$export$2741be68c8db9b43 = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional(),
    options: $e57b7edfe6122667$export$7b01305e0ab33ea3
}).strict();
const $e57b7edfe6122667$export$b968e9f4fdc5f0b2 = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional(),
    options: $e57b7edfe6122667$export$1c8fd79a94eba09d
}).strict();
const $e57b7edfe6122667$export$88c08ece0d5f563d = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional(),
    options: $e57b7edfe6122667$export$1c8fd79a94eba09d
}).strict();
const $e57b7edfe6122667$export$9bd14c1a22f65d2 = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional(),
    authenticator_response: $e57b7edfe6122667$export$49424bcfec0159aa
}).strict();
const $e57b7edfe6122667$export$6f9781ad5a96bdcf = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional(),
    authenticator_response: $e57b7edfe6122667$export$49424bcfec0159aa
}).strict();
const $e57b7edfe6122667$export$8525265affc59e4b = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional(),
    challenge: (0, ($parcel$interopDefault($hzore$zod))).string(),
    authenticator_response: $e57b7edfe6122667$export$96203b761bf7cadb
}).strict();
const $e57b7edfe6122667$export$1d32dd5b05e1d4dd = (0, ($parcel$interopDefault($hzore$zod))).object({
    credential_id: (0, ($parcel$interopDefault($hzore$zod))).string()
});


const $20d0fccc5568a382$export$2d6bddbbdba11994 = (0, ($parcel$interopDefault($hzore$zod))).object({
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional()
}).strict();
const $20d0fccc5568a382$export$94c076e2d3cd7355 = (0, ($parcel$interopDefault($hzore$zod))).object({
    options: (0, $e57b7edfe6122667$export$7b01305e0ab33ea3)
}).strict();
const $20d0fccc5568a382$export$afc24607eeb5f33e = (0, ($parcel$interopDefault($hzore$zod))).object({
    authenticator_response: (0, $e57b7edfe6122667$export$96203b761bf7cadb),
    relying_party: (0, ($parcel$interopDefault($hzore$zod))).string().url().optional()
}).strict();
const $20d0fccc5568a382$export$3c909b91f5e6545f = (0, ($parcel$interopDefault($hzore$zod))).object({
    credential_ids: (0, ($parcel$interopDefault($hzore$zod))).array((0, ($parcel$interopDefault($hzore$zod))).string())
});


var $4545bc9d6ad2b5b1$exports = {};

$parcel$export($4545bc9d6ad2b5b1$exports, "ExternalOAuthProvider", () => $4545bc9d6ad2b5b1$export$16a6de659e03cb8c);
$parcel$export($4545bc9d6ad2b5b1$exports, "OAuthProvider", () => $4545bc9d6ad2b5b1$export$96d4e4cf27d59030);
$parcel$export($4545bc9d6ad2b5b1$exports, "AuthenticateOauthInput", () => $4545bc9d6ad2b5b1$export$3a815e8ae7821b6e);
$parcel$export($4545bc9d6ad2b5b1$exports, "OAuthInitInput", () => $4545bc9d6ad2b5b1$export$25d68298fd675d8b);
$parcel$export($4545bc9d6ad2b5b1$exports, "LinkOAuthInput", () => $4545bc9d6ad2b5b1$export$5169dcfff85dfbff);
$parcel$export($4545bc9d6ad2b5b1$exports, "OAuthUnlinkInput", () => $4545bc9d6ad2b5b1$export$100da24bb64f0e09);
$parcel$export($4545bc9d6ad2b5b1$exports, "OAuthInitResponse", () => $4545bc9d6ad2b5b1$export$98ade43b6adcef0b);
$parcel$export($4545bc9d6ad2b5b1$exports, "OAuthLinkResponse", () => $4545bc9d6ad2b5b1$export$ae2e7f22cae2163f);
$parcel$export($4545bc9d6ad2b5b1$exports, "TransferOAuthInput", () => $4545bc9d6ad2b5b1$export$259a6aeda60f92c3);
$parcel$export($4545bc9d6ad2b5b1$exports, "SUPPORTED_OAUTH_PROVIDERS", () => $aa4b7b4f7e636066$export$b5266d2768e29008);


// Casting as const makes it immutable.
const $aa4b7b4f7e636066$export$b5266d2768e29008 = [
    "google",
    "discord",
    "twitter",
    "github",
    "spotify",
    "instagram",
    "tiktok",
    "linkedin",
    "apple"
];





const $4545bc9d6ad2b5b1$export$16a6de659e03cb8c = (0, $hzore$zod.z).enum((0, $aa4b7b4f7e636066$export$b5266d2768e29008), {
    invalid_type_error: "Please specify a supported provider.",
    required_error: "Please specify a supported provider."
});
const $4545bc9d6ad2b5b1$export$96d4e4cf27d59030 = $4545bc9d6ad2b5b1$export$16a6de659e03cb8c.or((0, $hzore$zod.z).custom((value)=>{
    return typeof value === "string" ? /^privy:[a-z0-9]{25}$/i.test(value) : false;
}, {
    message: "Please specify a supported provider."
}));
const $4545bc9d6ad2b5b1$export$3a815e8ae7821b6e = (0, $hzore$zod.z).object({
    authorization_code: (0, $hzore$zod.z).string(),
    state_code: (0, $hzore$zod.z).string(),
    code_verifier: (0, $hzore$zod.z).string().min(43).max(128).optional(),
    code_type: (0, $hzore$zod.z).enum([
        "raw"
    ]).optional()
}).merge((0, $70fd7ce05b552209$export$1d53282181ae94da)).catch(()=>{
    throw new (0, $hzore$privyioapibase.UnauthorizedError)("Please specify authorization_code and state_code.", (0, $hzore$privyioapibase.PrivyErrorCode).INVALID_CREDENTIALS);
});
const $4545bc9d6ad2b5b1$export$25d68298fd675d8b = (0, $hzore$zod.z).object({
    redirect_to: (0, $hzore$zod.z).string({
        required_error: "Please provide a redirect_to value."
    }),
    provider: $4545bc9d6ad2b5b1$export$96d4e4cf27d59030,
    token: (0, $hzore$zod.z).string().optional(),
    state_code: (0, $hzore$zod.z).string().optional(),
    code_challenge: (0, $hzore$zod.z).string().optional()
});
const $4545bc9d6ad2b5b1$export$5169dcfff85dfbff = (0, $hzore$zod.z).object({
    authorization_code: (0, $hzore$zod.z).string(),
    state_code: (0, $hzore$zod.z).string(),
    code_verifier: (0, $hzore$zod.z).string().min(43).max(128).optional(),
    code_type: (0, $hzore$zod.z).enum([
        "raw"
    ]).optional()
});
const $4545bc9d6ad2b5b1$export$100da24bb64f0e09 = (0, $hzore$zod.z).object({
    subject: (0, $hzore$zod.z).string(),
    provider: $4545bc9d6ad2b5b1$export$96d4e4cf27d59030
});
const $4545bc9d6ad2b5b1$export$98ade43b6adcef0b = (0, $hzore$zod.z).object({
    url: (0, $hzore$zod.z).string()
});
const $4545bc9d6ad2b5b1$export$ae2e7f22cae2163f = (0, $8342c8786d4fa209$export$1f44aaf2ec115b54).extend({
    oauth_tokens: (0, $8342c8786d4fa209$export$fdfea991b75c2811).optional()
});
const $4545bc9d6ad2b5b1$export$259a6aeda60f92c3 = (0, $fa43b8c6f6e93cd6$export$820fe5dd3e07cd33).extend({
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ userInfo: (0, $hzore$zod.z).object({
        subject: (0, $hzore$zod.z).string(),
        name: (0, $hzore$zod.z).string().optional(),
        username: (0, $hzore$zod.z).string().optional(),
        /* eslint-disable-next-line @typescript-eslint/naming-convention */ profilePictureUrl: (0, $hzore$zod.z).string().optional(),
        email: (0, $hzore$zod.z).string().optional().nullable(),
        /* eslint-disable-next-line @typescript-eslint/naming-convention */ vanityName: (0, $hzore$zod.z).string().optional()
    })
});


var $32eb0e57bb9de784$exports = {};

$parcel$export($32eb0e57bb9de784$exports, "AuthorizationCodeInput", () => $32eb0e57bb9de784$export$b20be2048fbb4ed4);

const $32eb0e57bb9de784$export$b20be2048fbb4ed4 = (0, $hzore$zod.z).object({
    redirect_to: (0, $hzore$zod.z).string(),
    state: (0, $hzore$zod.z).string(),
    code_challenge: (0, $hzore$zod.z).string()
});


var $09afb50f849e485e$exports = {};

$parcel$export($09afb50f849e485e$exports, "EmptyObject", () => $09afb50f849e485e$export$2441567ff18621e0);
$parcel$export($09afb50f849e485e$exports, "SuccessObject", () => $09afb50f849e485e$export$8aed050e83c45a78);

const $09afb50f849e485e$export$2441567ff18621e0 = (0, $hzore$zod.z).record((0, $hzore$zod.z).string(), (0, $hzore$zod.z).never());
const $09afb50f849e485e$export$8aed050e83c45a78 = (0, $hzore$zod.z).object({
    success: (0, $hzore$zod.z).boolean()
});



var $3a3fea8829d477e0$exports = {};

$parcel$export($3a3fea8829d477e0$exports, "RecoveryKeyMaterialInput", () => $3a3fea8829d477e0$export$5133f8b99ced310e);
$parcel$export($3a3fea8829d477e0$exports, "RecoveryKeyMaterialResponse", () => $3a3fea8829d477e0$export$52cacd413024ecd);
$parcel$export($3a3fea8829d477e0$exports, "OAuthAuthenticateRecoveryResponse", () => $3a3fea8829d477e0$export$8d23e6b066801647);
$parcel$export($3a3fea8829d477e0$exports, "OAuthInitRecoveryInput", () => $3a3fea8829d477e0$export$eb513813549270a);
$parcel$export($3a3fea8829d477e0$exports, "OAuthInitICloudRecoveryInput", () => $3a3fea8829d477e0$export$425e6a14ed44c52f);
$parcel$export($3a3fea8829d477e0$exports, "OAuthCallbackICloudExpoInput", () => $3a3fea8829d477e0$export$bec1efaa57e00983);
$parcel$export($3a3fea8829d477e0$exports, "OAuthCallbackICloudExpoResponse", () => $3a3fea8829d477e0$export$ea90bf451d6cb856);
$parcel$export($3a3fea8829d477e0$exports, "RecoveryConfigurationICloudInput", () => $3a3fea8829d477e0$export$dfb75001bba12cf3);
$parcel$export($3a3fea8829d477e0$exports, "RecoveryConfigurationICloudResponse", () => $3a3fea8829d477e0$export$a53156909e5ca052);



const $3a3fea8829d477e0$export$5133f8b99ced310e = (0, $hzore$zod.z).object({
    chain_type: (0, $hzore$zod.z).string().optional()
});
const $3a3fea8829d477e0$export$52cacd413024ecd = (0, $hzore$zod.z).object({
    recovery_type: (0, $hzore$zod.z).enum([
        "user_passcode_derived_recovery_key",
        "privy_passcode_derived_recovery_key",
        "privy_generated_recovery_key",
        "google_drive_recovery_secret",
        "icloud_recovery_secret"
    ]),
    recovery_key_derivation_salt: (0, $hzore$zod.z).string(),
    recovery_code: (0, $hzore$zod.z).string(),
    recovery_key: (0, $hzore$zod.z).string(),
    file_id: (0, $hzore$zod.z).string(),
    icloud_record_name: (0, $hzore$zod.z).string()
});
const $3a3fea8829d477e0$export$8d23e6b066801647 = (0, $hzore$zod.z).object({
    access_token: (0, $hzore$zod.z).string()
});
const $3a3fea8829d477e0$export$eb513813549270a = (0, $hzore$zod.z).object({
    redirect_to: (0, $hzore$zod.z).string({
        required_error: "Please provide a redirect_to value."
    }),
    token: (0, $hzore$zod.z).string().optional(),
    state_code: (0, $hzore$zod.z).string().optional(),
    code_challenge: (0, $hzore$zod.z).string().optional()
});
const $3a3fea8829d477e0$export$425e6a14ed44c52f = (0, $hzore$zod.z).object({
    client_type: (0, $hzore$zod.z).enum([
        "web",
        "expo-ios"
    ])
});
const $3a3fea8829d477e0$export$bec1efaa57e00983 = (0, $hzore$zod.z).object({
    /**
     * The authorization code from apple
     */ /* eslint-disable-next-line @typescript-eslint/naming-convention */ ckWebAuthToken: (0, $hzore$zod.z).string()
}).transform((input)=>({
        /* eslint-disable-next-line @typescript-eslint/naming-convention */ ckWebAuthToken: input.ckWebAuthToken
    })).catch(()=>{
    throw new (0, $hzore$privyioapibase.UnauthorizedError)("Missing ckWebAuthToken.", (0, $hzore$privyioapibase.PrivyErrorCode).INVALID_DATA);
});
const $3a3fea8829d477e0$export$ea90bf451d6cb856 = (0, $09afb50f849e485e$export$2441567ff18621e0);
const $3a3fea8829d477e0$export$dfb75001bba12cf3 = (0, $hzore$zod.z).object({
    client_type: (0, $hzore$zod.z).enum([
        "web",
        "expo-ios"
    ])
});
const $3a3fea8829d477e0$export$a53156909e5ca052 = (0, $hzore$zod.z).object({
    api_token: (0, $hzore$zod.z).string(),
    container_identifier: (0, $hzore$zod.z).string(),
    environment: (0, $hzore$zod.z).string()
});


var $5c1243b2d8ae7453$exports = {};

$parcel$export($5c1243b2d8ae7453$exports, "SiweInput", () => $5c1243b2d8ae7453$export$1c8c55e22e1d8d9);
$parcel$export($5c1243b2d8ae7453$exports, "SmartWalletSiweInput", () => $5c1243b2d8ae7453$export$1317218caaacf800);
$parcel$export($5c1243b2d8ae7453$exports, "AuthenticateSiweInput", () => $5c1243b2d8ae7453$export$3435c4883fbaeb7f);
$parcel$export($5c1243b2d8ae7453$exports, "SiweAddressInput", () => $5c1243b2d8ae7453$export$b5b65f417dc17888);
$parcel$export($5c1243b2d8ae7453$exports, "SiweInitInput", () => $5c1243b2d8ae7453$export$6c957bbdcf62135c);
$parcel$export($5c1243b2d8ae7453$exports, "SiweNonce", () => $5c1243b2d8ae7453$export$8535d2f477730820);
$parcel$export($5c1243b2d8ae7453$exports, "TransferSiweInput", () => $5c1243b2d8ae7453$export$c072e3bc69534ade);




const $5c1243b2d8ae7453$export$1c8c55e22e1d8d9 = (0, $hzore$zod.z).object({
    message: (0, $hzore$zod.z).string({
        invalid_type_error: "Invalid SIWE message"
    }),
    signature: (0, $hzore$zod.z).string({
        invalid_type_error: "Invalid SIWE signature"
    }),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ chainId: (0, $hzore$zod.z).string().max(41).nullable().default(null),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ walletClientType: (0, $hzore$zod.z).string().max(64).nullable().default(null),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ connectorType: (0, $hzore$zod.z).string().max(64).nullable().default(null)
});
const $5c1243b2d8ae7453$export$1317218caaacf800 = (0, $hzore$zod.z).object({
    message: (0, $hzore$zod.z).string({
        invalid_type_error: "Invalid SIWE message"
    }),
    signature: (0, $hzore$zod.z).string({
        invalid_type_error: "Invalid SIWE signature"
    }),
    smart_wallet_type: (0, $2c33e80b1754f54f$export$96b3537f43197348)
});
const $5c1243b2d8ae7453$export$3435c4883fbaeb7f = $5c1243b2d8ae7453$export$1c8c55e22e1d8d9.merge((0, $70fd7ce05b552209$export$1d53282181ae94da));
const $5c1243b2d8ae7453$export$b5b65f417dc17888 = (0, $hzore$zod.z).object({
    address: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec)
});
const $5c1243b2d8ae7453$export$6c957bbdcf62135c = (0, $hzore$zod.z).object({
    address: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec),
    token: (0, $hzore$zod.z).string().optional()
});
const $5c1243b2d8ae7453$export$8535d2f477730820 = (0, $hzore$zod.z).object({
    nonce: (0, $hzore$zod.z).string(),
    address: (0, $hzore$zod.z).string(),
    expires_at: (0, $hzore$zod.z).string()
});
const $5c1243b2d8ae7453$export$c072e3bc69534ade = (0, $fa43b8c6f6e93cd6$export$820fe5dd3e07cd33).extend({
    address: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ chainId: (0, $hzore$zod.z).string().max(41).nullable().default(null),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ walletClientType: (0, $hzore$zod.z).string().max(64).nullable().default(null),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ connectorType: (0, $hzore$zod.z).string().max(64).nullable().default(null)
});


var $7431b8694955cf60$exports = {};

$parcel$export($7431b8694955cf60$exports, "SiwsInput", () => $7431b8694955cf60$export$fa2883d1fd7d2f4d);
$parcel$export($7431b8694955cf60$exports, "AuthenticateSiwsInput", () => $7431b8694955cf60$export$defac42dc31eb54f);
$parcel$export($7431b8694955cf60$exports, "SiwsAddressInput", () => $7431b8694955cf60$export$767d61e052aa619c);
$parcel$export($7431b8694955cf60$exports, "SiwsInitInput", () => $7431b8694955cf60$export$334006f5cf1e2e10);
$parcel$export($7431b8694955cf60$exports, "SiwsNonce", () => $7431b8694955cf60$export$678e538743698961);


const $7431b8694955cf60$export$fa2883d1fd7d2f4d = (0, $hzore$zod.z).object({
    message: (0, $hzore$zod.z).string({
        invalid_type_error: "Invalid SIWS message"
    }),
    signature: (0, $hzore$zod.z).string({
        invalid_type_error: "Invalid SIWS signature"
    }),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ walletClientType: (0, $hzore$zod.z).string().max(64).nullable().default(null),
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ connectorType: (0, $hzore$zod.z).string().max(64).nullable().default(null)
});
const $7431b8694955cf60$export$defac42dc31eb54f = $7431b8694955cf60$export$fa2883d1fd7d2f4d.merge((0, $70fd7ce05b552209$export$1d53282181ae94da));
const $7431b8694955cf60$export$767d61e052aa619c = (0, $hzore$zod.z).object({
    address: (0, $70fd7ce05b552209$export$a6c60903ce1c32fc)
});
const $7431b8694955cf60$export$334006f5cf1e2e10 = (0, $hzore$zod.z).object({
    address: (0, $70fd7ce05b552209$export$a6c60903ce1c32fc),
    token: (0, $hzore$zod.z).string().optional()
});
const $7431b8694955cf60$export$678e538743698961 = (0, $hzore$zod.z).object({
    nonce: (0, $hzore$zod.z).string(),
    address: (0, $hzore$zod.z).string(),
    expires_at: (0, $hzore$zod.z).string()
});


var $e53d247be2daf67c$exports = {};

$parcel$export($e53d247be2daf67c$exports, "VerifyPhoneInput", () => $e53d247be2daf67c$export$1bbb8302b8922d52);
$parcel$export($e53d247be2daf67c$exports, "AuthenticatePhoneInput", () => $e53d247be2daf67c$export$d57783821ffbf377);
$parcel$export($e53d247be2daf67c$exports, "PasswordlessSmsPhoneInput", () => $e53d247be2daf67c$export$794b219acd817434);
$parcel$export($e53d247be2daf67c$exports, "UnlinkPhoneInput", () => $e53d247be2daf67c$export$63fc94c9f0d4eea8);
$parcel$export($e53d247be2daf67c$exports, "UpdatePhoneInput", () => $e53d247be2daf67c$export$bbf6b1d1316adec);
$parcel$export($e53d247be2daf67c$exports, "TransferPhoneInput", () => $e53d247be2daf67c$export$c7b05f9abdd2e9cc);




const $e53d247be2daf67c$export$1bbb8302b8922d52 = (0, $hzore$zod.z).object({
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f).catch(()=>{
        throw new (0, $hzore$privyioapibase.LegacyInvalidInputError)("Invalid SMS verification code", (0, $hzore$privyioapibase.PrivyErrorCode).INVALID_CREDENTIALS);
    }),
    // Not a mistake, it's actually camelCase
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $70fd7ce05b552209$export$3d623a7758cab61e).catch(()=>{
        throw new (0, $hzore$privyioapibase.LegacyInvalidInputError)("Invalid phone number", (0, $hzore$privyioapibase.PrivyErrorCode).INVALID_CREDENTIALS);
    })
});
const $e53d247be2daf67c$export$d57783821ffbf377 = $e53d247be2daf67c$export$1bbb8302b8922d52.merge((0, $70fd7ce05b552209$export$1d53282181ae94da));
const $e53d247be2daf67c$export$794b219acd817434 = (0, $hzore$zod.z).object({
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $70fd7ce05b552209$export$3d623a7758cab61e).catch(()=>{
        throw new (0, $hzore$privyioapibase.LegacyInvalidInputError)("Invalid phone number, not formatted correctly", (0, $hzore$privyioapibase.PrivyErrorCode).INVALID_DATA);
    }),
    token: (0, $hzore$zod.z).string().optional()
});
const $e53d247be2daf67c$export$63fc94c9f0d4eea8 = (0, $hzore$zod.z).object({
    // Not a mistake, it's actually camelCase
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $70fd7ce05b552209$export$3d623a7758cab61e)
});
const $e53d247be2daf67c$export$bbf6b1d1316adec = (0, $hzore$zod.z).object({
    old_phone_number: (0, $70fd7ce05b552209$export$3d623a7758cab61e),
    new_phone_number: (0, $70fd7ce05b552209$export$3d623a7758cab61e),
    code: (0, $70fd7ce05b552209$export$6051224a4b788b5f)
});
const $e53d247be2daf67c$export$c7b05f9abdd2e9cc = (0, $fa43b8c6f6e93cd6$export$820fe5dd3e07cd33).extend({
    /* eslint-disable-next-line @typescript-eslint/naming-convention */ phoneNumber: (0, $70fd7ce05b552209$export$3d623a7758cab61e)
});



var $b76dc99e9b12858b$exports = {};

$parcel$export($b76dc99e9b12858b$exports, "TelegramAuthenticateInput", () => $b76dc99e9b12858b$export$fb9405d8cbdd092d);
$parcel$export($b76dc99e9b12858b$exports, "TelegramLinkInput", () => $b76dc99e9b12858b$export$303a24e5db03ece6);
$parcel$export($b76dc99e9b12858b$exports, "TelegramUnlinkInput", () => $b76dc99e9b12858b$export$aad710dcc06a76fc);
$parcel$export($b76dc99e9b12858b$exports, "TransferTelegramInput", () => $b76dc99e9b12858b$export$835d5d8163cea1a1);



const $b76dc99e9b12858b$var$TelegramAuthResult = (0, ($parcel$interopDefault($hzore$zod))).object({
    id: (0, ($parcel$interopDefault($hzore$zod))).coerce.number(),
    first_name: (0, ($parcel$interopDefault($hzore$zod))).string(),
    auth_date: (0, ($parcel$interopDefault($hzore$zod))).coerce.number(),
    hash: (0, ($parcel$interopDefault($hzore$zod))).string(),
    username: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    last_name: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    photo_url: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
});
const $b76dc99e9b12858b$export$fb9405d8cbdd092d = (0, ($parcel$interopDefault($hzore$zod))).object({
    captcha_token: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
    telegram_auth_result: $b76dc99e9b12858b$var$TelegramAuthResult.optional(),
    telegram_web_app_data: (0, ($parcel$interopDefault($hzore$zod))).object({
        // query id provided by Telegram. It's present when logging in from a chat button but it's not when logging in from a direct link to the mini-app
        query_id: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        // This is the timestamp the auth result was verified at, in seconds from epoch
        auth_date: (0, ($parcel$interopDefault($hzore$zod))).coerce.number(),
        // hash provided by Telegram to verify the payload is authentic
        hash: (0, ($parcel$interopDefault($hzore$zod))).string(),
        // user data provided by Telegram, it is a JSON string with a shape similar to TelegramAuthResult
        user: (0, ($parcel$interopDefault($hzore$zod))).string(),
        // chat instance provided by Telegram. It's present when logging in from a direct link to the mini-app but not when logging in from a chat button
        chat_instance: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        // chat type provided by Telegram. It's present when logging in from a direct link to the mini-app but not when logging in from a chat button
        chat_type: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        // start param provided by Telegram. It's present when logging in from a direct link to the mini-app but not when logging in from a chat button
        start_param: (0, ($parcel$interopDefault($hzore$zod))).string().optional(),
        // signature provided by Telegram
        signature: (0, ($parcel$interopDefault($hzore$zod))).string().optional()
    }).optional()
}).merge((0, $70fd7ce05b552209$export$1d53282181ae94da));
const $b76dc99e9b12858b$export$303a24e5db03ece6 = $b76dc99e9b12858b$export$fb9405d8cbdd092d.omit({
    telegram_web_app_data: true
}).required({
    telegram_auth_result: true
});
const $b76dc99e9b12858b$export$aad710dcc06a76fc = (0, ($parcel$interopDefault($hzore$zod))).object({
    telegram_user_id: (0, ($parcel$interopDefault($hzore$zod))).string()
});
const $b76dc99e9b12858b$export$835d5d8163cea1a1 = (0, $fa43b8c6f6e93cd6$export$820fe5dd3e07cd33).extend({
    telegram_auth_result: $b76dc99e9b12858b$var$TelegramAuthResult
});


var $6f65a687af25ebd8$exports = {};

$parcel$export($6f65a687af25ebd8$exports, "RefreshTokenInput", () => $6f65a687af25ebd8$export$6aa3af8166ea5386);
$parcel$export($6f65a687af25ebd8$exports, "OptionalRefreshTokenInput", () => $6f65a687af25ebd8$export$3ea9bae16087a241);
$parcel$export($6f65a687af25ebd8$exports, "ForkedToken", () => $6f65a687af25ebd8$export$874b0538e4f42518);

const $6f65a687af25ebd8$export$6aa3af8166ea5386 = (0, $hzore$zod.z).object({
    refresh_token: (0, $hzore$zod.z).string()
});
const $6f65a687af25ebd8$export$3ea9bae16087a241 = $6f65a687af25ebd8$export$6aa3af8166ea5386.partial();
const $6f65a687af25ebd8$export$874b0538e4f42518 = (0, $hzore$zod.z).object({
    token: (0, $hzore$zod.z).string(),
    refresh_token: (0, $hzore$zod.z).string(),
    new_session_refresh_token: (0, $hzore$zod.z).string()
});



var $eda7629f6ef43204$exports = {};

$parcel$export($eda7629f6ef43204$exports, "DelegatedActionsConsentInput", () => $eda7629f6ef43204$export$5b3e61549b992e7e);
$parcel$export($eda7629f6ef43204$exports, "WalletApiRevokeResponse", () => $eda7629f6ef43204$export$60ba52d20922d865);

const $eda7629f6ef43204$export$5b3e61549b992e7e = (0, $hzore$zod.z).object({
    encrypted_tee_share: (0, $hzore$zod.z).string(),
    app_share: (0, $hzore$zod.z).string(),
    // array of specific wallets the user has delegated access to
    delegated_addresses: (0, $hzore$zod.z).array((0, $hzore$zod.z).object({
        chain_type: (0, $hzore$zod.z).union([
            (0, $hzore$zod.z).literal("solana"),
            (0, $hzore$zod.z).literal("ethereum")
        ]),
        address: (0, $hzore$zod.z).string(),
        wallet_index: (0, $hzore$zod.z).number().default(0)
    }))
});
const $eda7629f6ef43204$export$60ba52d20922d865 = (0, $hzore$zod.z).object({
    /** Success message */ message: (0, $hzore$zod.z).string()
});


var $97f156e6a43a8aee$exports = {};

$parcel$export($97f156e6a43a8aee$exports, "CAIP2", () => $97f156e6a43a8aee$export$3e5f628c87c944ea);
$parcel$export($97f156e6a43a8aee$exports, "AuthorizationKeyRole", () => $97f156e6a43a8aee$export$e00d5c89c01be30a);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiSolanaSignTransactionRpcInput", () => $97f156e6a43a8aee$export$8e148d8e0fa27f14);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiSolanaSignAndSendTransactionRpcInput", () => $97f156e6a43a8aee$export$9b59b888d99d2b7);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiSolanaSignMessageRpcInput", () => $97f156e6a43a8aee$export$97fa15d15442509a);
$parcel$export($97f156e6a43a8aee$exports, "UnsignedEthereumTransaction", () => $97f156e6a43a8aee$export$4dd5c56c048ca51c);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumSignTransactionRpcInput", () => $97f156e6a43a8aee$export$6d6b46e54d62b80f);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumSendTransactionRpcInput", () => $97f156e6a43a8aee$export$6a1a144657f01857);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumPersonalSignRpcInputParams", () => $97f156e6a43a8aee$export$47e0aa7143de6eba);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumPersonalSignRpcInput", () => $97f156e6a43a8aee$export$b1c3bd1406731d97);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumSignTypedDataRpcInput", () => $97f156e6a43a8aee$export$c4aa7e4bbb51693f);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumRpcInput", () => $97f156e6a43a8aee$export$86729abbdf3cb00d);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiSolanaRpcInput", () => $97f156e6a43a8aee$export$56c132d7290bb7ea);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiRpcInput", () => $97f156e6a43a8aee$export$a965e12848db29a7);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiSolanaSignTransactionRpcResponse", () => $97f156e6a43a8aee$export$310e1d354b294aac);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiSolanaSignAndSendTransactionRpcResponse", () => $97f156e6a43a8aee$export$1aae029e61aa62e3);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiSolanaSignMessageRpcResponse", () => $97f156e6a43a8aee$export$261cb1d601edd7b1);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumSignTransactionRpcResponse", () => $97f156e6a43a8aee$export$2f7b6ef5cdff0e98);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumSendTransactionRpcResponse", () => $97f156e6a43a8aee$export$c62c1852c4cb6e04);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumPersonalSignRpcResponse", () => $97f156e6a43a8aee$export$f31262cd6c9b0637);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiEthereumSignTypedDataRpcResponse", () => $97f156e6a43a8aee$export$21a19a0ce9a88106);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiRpcResponse", () => $97f156e6a43a8aee$export$e53e6185409931b0);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiRegisterAuthorizationKeyInput", () => $97f156e6a43a8aee$export$1022a916e1be96e);
$parcel$export($97f156e6a43a8aee$exports, "WalletResponse", () => $97f156e6a43a8aee$export$9f7c9fccce46ad2a);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiCreateInput", () => $97f156e6a43a8aee$export$ccfd4ef2d9850a86);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiCreateResponse", () => $97f156e6a43a8aee$export$7041defd4179afea);
$parcel$export($97f156e6a43a8aee$exports, "WalletIdFromPath", () => $97f156e6a43a8aee$export$690ece09e17200e1);
$parcel$export($97f156e6a43a8aee$exports, "WalletApiRevokeAuthorizationKeyInput", () => $97f156e6a43a8aee$export$255e70f0df8a680a);
$parcel$export($97f156e6a43a8aee$exports, "AuthorizationKey", () => $97f156e6a43a8aee$export$9465dc060ac9c626);



const $97f156e6a43a8aee$export$3e5f628c87c944ea = (0, $hzore$zod.z).string().regex(// regex from the spec https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#specification
/^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}$/, "Chain ID must be a valid CAIP-2 chain ID, e.g. 'eip155:1'");
const $97f156e6a43a8aee$var$BaseSolanaRpcInput = (0, $hzore$zod.z).object({
    /** Address of the wallet. */ address: (0, $70fd7ce05b552209$export$a6c60903ce1c32fc).optional(),
    /** Chain type of the wallet. */ chain_type: (0, $hzore$zod.z).literal("solana").optional()
});
const $97f156e6a43a8aee$var$BaseEthereumRpcInput = (0, $hzore$zod.z).object({
    /** Address of the wallet. */ address: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec).optional(),
    /** Chain type of the wallet. */ chain_type: (0, $hzore$zod.z).literal("ethereum").optional()
});
const $97f156e6a43a8aee$export$e00d5c89c01be30a = (0, $hzore$zod.z).enum([
    "root",
    "manager"
]).nullable();
const $97f156e6a43a8aee$export$8e148d8e0fa27f14 = (0, $hzore$zod.z).object({
    /** RPC method to execute with the wallet. */ method: (0, $hzore$zod.z).literal("signTransaction"),
    /** Parameters for the RPC method.  */ params: (0, $hzore$zod.z).object({
        /** Serialized transaction object to sign with the wallet. Must be encoded per the scheme in `encoding`. */ transaction: (0, $hzore$zod.z).string(),
        /** Encoding scheme for the transaction. */ encoding: (0, $hzore$zod.z).literal("base64")
    })
}).merge($97f156e6a43a8aee$var$BaseSolanaRpcInput);
const $97f156e6a43a8aee$export$9b59b888d99d2b7 = (0, $hzore$zod.z).object({
    /** RPC method to execute with the wallet. */ method: (0, $hzore$zod.z).literal("signAndSendTransaction"),
    /** The CAIP-2 chain id to send the transaction on. */ caip2: $97f156e6a43a8aee$export$3e5f628c87c944ea,
    /** Parameters for the RPC method.  */ params: (0, $hzore$zod.z).object({
        /** Serialized transaction object to sign and send with the wallet. Must be encoded per the scheme in `encoding`. */ transaction: (0, $hzore$zod.z).string(),
        /** Encoding scheme for the transaction. */ encoding: (0, $hzore$zod.z).literal("base64")
    })
}).merge($97f156e6a43a8aee$var$BaseSolanaRpcInput);
const $97f156e6a43a8aee$export$97fa15d15442509a = (0, $hzore$zod.z).object({
    /** RPC method to execute with the wallet. */ method: (0, $hzore$zod.z).literal("signMessage"),
    /** Parameters for the RPC method.  */ params: (0, $hzore$zod.z).object({
        /** Message to sign with the wallet. Must be encoded per the scheme in `encoding`. */ message: (0, $hzore$zod.z).string(),
        /** Encoding scheme for the message. */ encoding: (0, $hzore$zod.z).literal("base64")
    })
}).merge($97f156e6a43a8aee$var$BaseSolanaRpcInput);
const $97f156e6a43a8aee$var$Hex = (0, $hzore$zod.z).string().startsWith("0x");
const $97f156e6a43a8aee$var$Quantity = (0, $hzore$zod.z).union([
    $97f156e6a43a8aee$var$Hex,
    (0, $hzore$zod.z).number()
]);
const $97f156e6a43a8aee$export$4dd5c56c048ca51c = (0, $hzore$zod.z).object({
    /** The address the transaction is sent from. Must be hexadecimal formatted. */ from: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec).optional(),
    /** Destination address of the transaction. */ to: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec).optional(),
    /** The chain ID of network your transaction will  be sent on (hexadecimal or number). */ chain_id: $97f156e6a43a8aee$var$Quantity.optional(),
    /** (optional) The nonce to be used for the transaction (hexadecimal or number). */ nonce: $97f156e6a43a8aee$var$Quantity.optional(),
    /** (optional) Data to send to the receiving address, especially when calling smart contracts. Must be hexadecimal formatted. */ data: $97f156e6a43a8aee$var$Hex.optional(),
    /** (optional) The value (in wei) be sent with the transaction (hexadecimal or number). */ value: $97f156e6a43a8aee$var$Quantity.optional(),
    /** (optional) The EIP-2718 transction type (e.g. `2` for EIP-1559 transactions). */ type: (0, $hzore$zod.z).union([
        (0, $hzore$zod.z).literal(0),
        (0, $hzore$zod.z).literal(1),
        (0, $hzore$zod.z).literal(2)
    ]).optional(),
    /** (optional) The max units of gas that can be used by this transaction (hexadecimal or number). */ gas_limit: $97f156e6a43a8aee$var$Quantity.optional(),
    /** (optional) The price (in wei) per unit of gas for this transaction (hexadecimal or number), for use in non EIP-1559 transactions (type 0 or 1). */ gas_price: $97f156e6a43a8aee$var$Quantity.optional(),
    /** (optional) The maxFeePerGas (hexadecimal or number) to be used in this transaction, for use in EIP-1559 (type 2) transactions. */ max_fee_per_gas: $97f156e6a43a8aee$var$Quantity.optional(),
    /** (optional) The maxPriorityFeePerGas (hexadecimal or number) to be used in this transaction, for use in EIP-1559 (type 2) transactions. */ max_priority_fee_per_gas: $97f156e6a43a8aee$var$Quantity.optional()
});
const $97f156e6a43a8aee$export$6d6b46e54d62b80f = (0, $hzore$zod.z).object({
    /** RPC method to execute with the wallet. */ method: (0, $hzore$zod.z).literal("eth_signTransaction"),
    /** Parameters for the RPC method.  */ params: (0, $hzore$zod.z).object({
        /** Transaction object to sign with the wallet. */ transaction: $97f156e6a43a8aee$export$4dd5c56c048ca51c
    })
}).merge($97f156e6a43a8aee$var$BaseEthereumRpcInput);
const $97f156e6a43a8aee$export$6a1a144657f01857 = (0, $hzore$zod.z).object({
    /** RPC method to execute with the wallet. */ method: (0, $hzore$zod.z).literal("eth_sendTransaction"),
    /** The CAIP-2 chain id to send the transaction on. */ caip2: $97f156e6a43a8aee$export$3e5f628c87c944ea,
    /** Parameters for the RPC method.  */ params: (0, $hzore$zod.z).object({
        /** Transaction object to sign with the wallet. */ transaction: $97f156e6a43a8aee$export$4dd5c56c048ca51c
    })
}).merge($97f156e6a43a8aee$var$BaseEthereumRpcInput);
const $97f156e6a43a8aee$export$47e0aa7143de6eba = (0, $hzore$zod.z).object({
    /** Message to sign with the wallet. Must be encoded per the scheme in `encoding`. */ message: (0, $hzore$zod.z).string(),
    /** Encoding scheme for the message (utf-8 for plaintext, hex for raw bytes). */ encoding: (0, $hzore$zod.z).union([
        (0, $hzore$zod.z).literal("utf-8"),
        (0, $hzore$zod.z).literal("hex")
    ])
});
const $97f156e6a43a8aee$export$b1c3bd1406731d97 = (0, $hzore$zod.z).object({
    /** RPC method to execute with the wallet. */ method: (0, $hzore$zod.z).literal("personal_sign"),
    /** Parameters for the RPC method.  */ params: $97f156e6a43a8aee$export$47e0aa7143de6eba
}).merge($97f156e6a43a8aee$var$BaseEthereumRpcInput);
const $97f156e6a43a8aee$export$c4aa7e4bbb51693f = (0, $hzore$zod.z).object({
    /** RPC method to execute with the wallet. */ method: (0, $hzore$zod.z).literal("eth_signTypedData_v4"),
    /** Parameters for the RPC method.  */ params: (0, $hzore$zod.z).object({
        /** The JSON typed data to sign with the wallet. */ typed_data: (0, $hzore$zod.z).object({
            domain: (0, $hzore$zod.z).record((0, $hzore$zod.z).string(), (0, $hzore$zod.z).any()),
            types: (0, $hzore$zod.z).record((0, $hzore$zod.z).string(), (0, $hzore$zod.z).any()),
            message: (0, $hzore$zod.z).record((0, $hzore$zod.z).string(), (0, $hzore$zod.z).any()),
            primary_type: (0, $hzore$zod.z).string()
        })
    })
}).merge($97f156e6a43a8aee$var$BaseEthereumRpcInput);
const $97f156e6a43a8aee$export$86729abbdf3cb00d = (0, $hzore$zod.z).discriminatedUnion("method", [
    $97f156e6a43a8aee$export$6d6b46e54d62b80f,
    $97f156e6a43a8aee$export$6a1a144657f01857,
    $97f156e6a43a8aee$export$b1c3bd1406731d97,
    $97f156e6a43a8aee$export$c4aa7e4bbb51693f
]);
const $97f156e6a43a8aee$export$56c132d7290bb7ea = (0, $hzore$zod.z).discriminatedUnion("method", [
    $97f156e6a43a8aee$export$8e148d8e0fa27f14,
    $97f156e6a43a8aee$export$9b59b888d99d2b7,
    $97f156e6a43a8aee$export$97fa15d15442509a
]);
const $97f156e6a43a8aee$export$a965e12848db29a7 = (0, $hzore$zod.z).union([
    $97f156e6a43a8aee$export$86729abbdf3cb00d,
    $97f156e6a43a8aee$export$56c132d7290bb7ea
]);
const $97f156e6a43a8aee$export$310e1d354b294aac = (0, $hzore$zod.z).object({
    /** RPC method executed by the wallet */ method: (0, $hzore$zod.z).literal("signTransaction"),
    /** Data returned by the RPC method. */ data: (0, $hzore$zod.z).object({
        /** Signature produced by the wallet. */ signed_transaction: (0, $hzore$zod.z).string(),
        /** Encoding of the signature */ encoding: (0, $hzore$zod.z).literal("base64")
    })
});
const $97f156e6a43a8aee$export$1aae029e61aa62e3 = (0, $hzore$zod.z).object({
    /** RPC method executed by the wallet */ method: (0, $hzore$zod.z).literal("signAndSendTransaction"),
    /** Data returned by the RPC method. */ data: (0, $hzore$zod.z).object({
        // TODO: add back ID once we store in the database
        // /** A Privy-assigned id for the sent transaction. */
        // id: z.string(),
        /** Blockchain hash of the sent transaction. */ hash: (0, $hzore$zod.z).string(),
        /** The CAIP-2 chain id the transaction was sent on. */ caip2: $97f156e6a43a8aee$export$3e5f628c87c944ea
    }).optional(),
    /** Error object returned by the RPC method. */ error: (0, $hzore$zod.z).object({
        /** Error code */ code: (0, $hzore$zod.z).string(),
        /** Error message */ message: (0, $hzore$zod.z).string()
    }).optional()
});
const $97f156e6a43a8aee$export$261cb1d601edd7b1 = (0, $hzore$zod.z).object({
    /** RPC method executed by the wallet */ method: (0, $hzore$zod.z).literal("signMessage"),
    /** Data returned by the RPC method. */ data: (0, $hzore$zod.z).object({
        /** Signature produced by the wallet. */ signature: (0, $hzore$zod.z).string(),
        /** Encoding of the signature */ encoding: (0, $hzore$zod.z).literal("base64")
    })
});
const $97f156e6a43a8aee$export$2f7b6ef5cdff0e98 = (0, $hzore$zod.z).object({
    /** RPC method executed by the wallet */ method: (0, $hzore$zod.z).literal("eth_signTransaction"),
    /** Data returned by the RPC method. */ data: (0, $hzore$zod.z).object({
        /** Signature produced by the wallet. */ signed_transaction: (0, $hzore$zod.z).string(),
        /** Encoding of the signed transaction */ encoding: (0, $hzore$zod.z).literal("rlp")
    })
});
const $97f156e6a43a8aee$export$c62c1852c4cb6e04 = (0, $hzore$zod.z).object({
    /** RPC method executed by the wallet */ method: (0, $hzore$zod.z).literal("eth_sendTransaction"),
    /** Data returned by the RPC method. */ data: (0, $hzore$zod.z).object({
        // TODO: add back ID once we store in the database
        // /** A Privy-assigned id for the sent transaction. */
        // id: z.string(),
        /** Blockchain hash of the sent transaction. */ hash: (0, $hzore$zod.z).string(),
        /** The CAIP-2 chain id the transaction was sent on. */ caip2: $97f156e6a43a8aee$export$3e5f628c87c944ea
    }).optional(),
    /** Error object returned by the RPC method. */ error: (0, $hzore$zod.z).object({
        /** Error code */ code: (0, $hzore$zod.z).string(),
        /** Error message */ message: (0, $hzore$zod.z).string()
    }).optional()
});
const $97f156e6a43a8aee$export$f31262cd6c9b0637 = (0, $hzore$zod.z).object({
    /** RPC method executed by the wallet */ method: (0, $hzore$zod.z).literal("personal_sign"),
    /** Data returned by the RPC method. */ data: (0, $hzore$zod.z).object({
        /** Signature produced by the wallet. */ signature: (0, $hzore$zod.z).string(),
        /** Encoding of the signature */ encoding: (0, $hzore$zod.z).literal("hex")
    })
});
const $97f156e6a43a8aee$export$21a19a0ce9a88106 = (0, $hzore$zod.z).object({
    /** RPC method executed by the wallet */ method: (0, $hzore$zod.z).literal("eth_signTypedData_v4"),
    /** Data returned by the RPC method. */ data: (0, $hzore$zod.z).object({
        /** Signature produced by the wallet. */ signature: (0, $hzore$zod.z).string(),
        /** Encoding of the signature */ encoding: (0, $hzore$zod.z).literal("hex")
    })
});
const $97f156e6a43a8aee$export$e53e6185409931b0 = (0, $hzore$zod.z).discriminatedUnion("method", [
    $97f156e6a43a8aee$export$310e1d354b294aac,
    $97f156e6a43a8aee$export$1aae029e61aa62e3,
    $97f156e6a43a8aee$export$261cb1d601edd7b1,
    $97f156e6a43a8aee$export$2f7b6ef5cdff0e98,
    $97f156e6a43a8aee$export$c62c1852c4cb6e04,
    $97f156e6a43a8aee$export$f31262cd6c9b0637,
    $97f156e6a43a8aee$export$21a19a0ce9a88106
]);
const $97f156e6a43a8aee$export$1022a916e1be96e = (0, $hzore$zod.z).object({
    display_name: (0, $hzore$zod.z).string().optional(),
    // The PEM-formatted public key used to verify signatures.
    // Overwrites existing values, if they exist.
    public_key: (0, $hzore$zod.z).string(),
    role: $97f156e6a43a8aee$export$e00d5c89c01be30a.optional()
});
const $97f156e6a43a8aee$var$ChainTypes = (0, $hzore$zod.z).union([
    (0, $hzore$zod.z).literal("solana"),
    (0, $hzore$zod.z).literal("ethereum")
]);
const $97f156e6a43a8aee$export$9f7c9fccce46ad2a = (0, $hzore$zod.z).object({
    id: (0, $hzore$zod.z).string(),
    address: (0, $hzore$zod.z).string(),
    chain_type: $97f156e6a43a8aee$var$ChainTypes,
    authorization_threshold: (0, $hzore$zod.z).number().optional()
});
const $97f156e6a43a8aee$export$ccfd4ef2d9850a86 = (0, $hzore$zod.z).object({
    /** Chain to create wallet for. */ chain_type: $97f156e6a43a8aee$var$ChainTypes,
    /** Optional policy ID to create wallet for. */ policy_id: (0, $hzore$zod.z).string().optional(),
    /** The set of authorization key IDs that can authorize actions on this wallet.
     * If unspecified, any request authorized by the app secret is sufficient to take
     * actions with the wallet. */ authorization_key_ids: (0, $hzore$zod.z).array((0, $hzore$zod.z).string()).optional(),
    /** The minimum number of keys required to authorize actions on this wallet.
     * Leave unspecified to require all keys to sign a request for any action. */ authorization_threshold: (0, $hzore$zod.z).number().optional()
}).refine((input)=>input.authorization_threshold === undefined || input.authorization_threshold >= 1 && input.authorization_key_ids && input.authorization_threshold <= input.authorization_key_ids.length, {
    message: "If specified, authorization_threshold must be an integer between 1 and the length of authorization_key_ids."
}).catch(({ error: error })=>{
    throw new (0, $hzore$privyioapibase.InvalidInputError)(error.message, (0, $hzore$privyioapibase.PrivyErrorCode).INVALID_DATA);
});
const $97f156e6a43a8aee$export$7041defd4179afea = (0, $hzore$zod.z).object({
    /** Unique ID for the created wallet. */ id: (0, $hzore$zod.z).string(),
    /** Chain type of the created wallet. */ chain_type: $97f156e6a43a8aee$var$ChainTypes,
    /** Address of the created wallet */ address: (0, $hzore$zod.z).string(),
    /** The optional authorization threshold for the wallet. */ authorization_threshold: (0, $hzore$zod.z).number().optional()
});
const $97f156e6a43a8aee$export$690ece09e17200e1 = (0, $hzore$zod.z).object({
    wallet_id: (0, $hzore$zod.z).string({
        required_error: "Wallet ID must be provided",
        invalid_type_error: "Wallet ID is not a valid string"
    }).min(1)
}).catch(({ error: error })=>{
    throw new (0, $hzore$privyioapibase.InvalidInputError)(error.message, (0, $hzore$privyioapibase.PrivyErrorCode).INVALID_DATA);
});
const $97f156e6a43a8aee$export$255e70f0df8a680a = (0, $hzore$zod.z).object({
    id: (0, $hzore$zod.z).string()
});
const $97f156e6a43a8aee$export$9465dc060ac9c626 = (0, $hzore$zod.z).object({
    id: (0, $hzore$zod.z).string(),
    display_name: (0, $hzore$zod.z).string().nullable(),
    public_key: (0, $hzore$zod.z).string(),
    role: $97f156e6a43a8aee$export$e00d5c89c01be30a,
    created_at: (0, $hzore$zod.z).number()
});


var $b504fa7103334170$exports = {};

$parcel$export($b504fa7103334170$exports, "MoonpayOnRampSignInput", () => $b504fa7103334170$export$6c475a9528377d79);
$parcel$export($b504fa7103334170$exports, "MoonpayOnRampSignResponse", () => $b504fa7103334170$export$2ce1205fd9aec915);


const $b504fa7103334170$var$PaymentMethod = (0, $hzore$zod.z).enum([
    "ach_bank_transfer",
    "credit_debit_card",
    "gbp_bank_transfer",
    "gbp_open_banking_payment",
    "mobile_wallet",
    "sepa_bank_transfer",
    "sepa_open_banking_payment",
    "pix_instant_payment",
    "yellow_card_bank_transfer"
]);
// Adapted from Moonpay's exact currency codes
const $b504fa7103334170$var$CurrencyCode = (0, $hzore$zod.z).enum([
    "AVAX_CCHAIN",
    "CELO_CELO",
    "CUSD_CELO",
    "DAI_ETHEREUM",
    "ETH_ETHEREUM",
    "ETH_ARBITRUM",
    "ETH_OPTIMISM",
    "ETH_POLYGON",
    "ETH_BASE",
    "FIL_FVM",
    "MATIC_ETHEREUM",
    "MATIC_POLYGON",
    "USDC_ETHEREUM",
    "USDC_ARBITRUM",
    "USDC_OPTIMISM",
    "USDC_POLYGON",
    "USDC_BASE",
    "USDT_ETHEREUM",
    "USDT_POLYGON",
    "WETH_POLYGON",
    "WBTC_ETHEREUM",
    "BNB_BNB",
    "BNB_BSC",
    // Transformed Privy Currency Codes
    "CELO",
    "CUSD",
    "DAI",
    "ETH",
    "FIL",
    "MATIC",
    "USDC",
    "USDT",
    "WETH",
    "WBTC"
]);
const $b504fa7103334170$var$MoonpayFiatOnRampConfigInput = (0, $hzore$zod.z).object({
    // eslint-disable-next-line @typescript-eslint/naming-convention
    quoteCurrencyAmount: (0, $hzore$zod.z).number().optional(),
    email: (0, $70fd7ce05b552209$export$5a6b8595f311cbb0).optional(),
    // eslint-disable-next-line @typescript-eslint/naming-convention
    paymentMethod: $b504fa7103334170$var$PaymentMethod.optional(),
    // eslint-disable-next-line @typescript-eslint/naming-convention
    uiConfig: (0, $hzore$zod.z).object({
        // eslint-disable-next-line @typescript-eslint/naming-convention
        accentColor: (0, $hzore$zod.z).string().optional(),
        theme: (0, $hzore$zod.z).enum([
            "light",
            "dark"
        ]).optional()
    }).optional()
});
const $b504fa7103334170$var$MoonpayFiatOnRampEthereumInput = (0, $hzore$zod.z).object({
    address: (0, $70fd7ce05b552209$export$e1ae011f7e31ddec),
    config: $b504fa7103334170$var$MoonpayFiatOnRampConfigInput.extend({
        // eslint-disable-next-line @typescript-eslint/naming-convention
        currencyCode: $b504fa7103334170$var$CurrencyCode.transform((val)=>{
            switch(val){
                case "AVAX_CCHAIN":
                    return "AVAX_CCHAIN";
                case "CELO_CELO":
                    return "CELO";
                case "CUSD_CELO":
                    return "CUSD";
                case "DAI_ETHEREUM":
                    return "DAI";
                case "ETH_ETHEREUM":
                    return "ETH";
                case "ETH_ARBITRUM":
                    return "ETH_ARBITRUM";
                case "ETH_OPTIMISM":
                    return "ETH_OPTIMISM";
                case "ETH_POLYGON":
                    return "ETH_POLYGON";
                case "ETH_BASE":
                    return "ETH_BASE";
                case "FIL_FVM":
                    return "FIL";
                case "MATIC_ETHEREUM":
                    return "MATIC";
                case "MATIC_POLYGON":
                    return "MATIC_POLYGON";
                case "USDC_ETHEREUM":
                    return "USDC";
                case "USDC_ARBITRUM":
                    return "USDC_ARBITRUM";
                case "USDC_OPTIMISM":
                    return "USDC_OPTIMISM";
                case "USDC_POLYGON":
                    return "USDC_POLYGON";
                case "USDC_BASE":
                    return "USDC_BASE";
                case "USDT_ETHEREUM":
                    return "USDT";
                case "USDT_POLYGON":
                    return "USDT_POLYGON";
                case "WETH_POLYGON":
                    return "WETH";
                case "WBTC_ETHEREUM":
                    return "WBTC";
                case "BNB_BNB":
                    return "BNB";
                case "BNB_BSC":
                    return "BNB_BSC";
                // Transformed Privy Currency Codes
                case "CELO":
                case "CUSD":
                case "DAI":
                case "ETH":
                case "FIL":
                case "MATIC":
                case "USDC":
                case "USDT":
                case "WETH":
                case "WBTC":
                    return val;
                default:
                    throw new Error(`Invalid currency code: ${val}`);
            }
        }).optional()
    })
});
const $b504fa7103334170$var$MoonpayFiatOnRampSolanaInput = (0, $hzore$zod.z).object({
    address: (0, $70fd7ce05b552209$export$a6c60903ce1c32fc),
    config: $b504fa7103334170$var$MoonpayFiatOnRampConfigInput.extend({
        // eslint-disable-next-line @typescript-eslint/naming-convention
        currencyCode: (0, $hzore$zod.z).enum([
            "SOL",
            "USDC_SOL"
        ]).optional()
    })
});
const $b504fa7103334170$export$6c475a9528377d79 = (0, $hzore$zod.z).union([
    $b504fa7103334170$var$MoonpayFiatOnRampEthereumInput,
    $b504fa7103334170$var$MoonpayFiatOnRampSolanaInput
]).and((0, $hzore$zod.z).object({
    // eslint-disable-next-line @typescript-eslint/naming-convention
    useSandbox: (0, $hzore$zod.z).boolean().optional().default(false)
}));
const $b504fa7103334170$export$2ce1205fd9aec915 = (0, $hzore$zod.z).object({
    // eslint-disable-next-line @typescript-eslint/naming-convention
    signedUrl: (0, $hzore$zod.z).string(),
    // eslint-disable-next-line @typescript-eslint/naming-convention
    externalTransactionId: (0, $hzore$zod.z).string()
});


$parcel$exportWildcard($9948fb0e4d6c5293$exports, $0f04b39e316a38d3$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $2a8279f7f73410e6$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $de304acea773d937$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $b8e8bb3676cc3feb$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $d30b85902746f835$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $70fd7ce05b552209$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $aa486b9acfd14dc1$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $e59fba4ed823b83b$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $7d982f25ac911b62$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $74c27671d122e7b6$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $051eee4fb5ed5a5d$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $eb679e4239177804$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $d1082def8e5e297b$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $c7240fca9e97885b$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $b529354c2182e52b$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $6c1ac28b391e6887$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $20d0fccc5568a382$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $4545bc9d6ad2b5b1$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $32eb0e57bb9de784$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $09afb50f849e485e$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $e57b7edfe6122667$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $3a3fea8829d477e0$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $5c1243b2d8ae7453$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $7431b8694955cf60$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $e53d247be2daf67c$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $2c33e80b1754f54f$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $b76dc99e9b12858b$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $6f65a687af25ebd8$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $8342c8786d4fa209$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $eda7629f6ef43204$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $97f156e6a43a8aee$exports);
$parcel$exportWildcard($9948fb0e4d6c5293$exports, $b504fa7103334170$exports);


$parcel$exportWildcard(module.exports, $21de056d90b64a69$exports);
$parcel$exportWildcard(module.exports, $9948fb0e4d6c5293$exports);


