import{PasskeyLinkInit as t,PasskeyAuthenticateInit as e,PasskeyAuthenticate as a,PasskeyLink as n}from"@privy-io/public-api";class i{async generateRegistrationOptions(e){return await this._privyInternal.fetch(t,{body:{relying_party:e}})}async generateAuthenticationOptions(t){return await this._privyInternal.fetch(e,{body:{relying_party:t}})}async loginWithPasskey(t,e,n){let i=await this._privyInternal.fetch(a,{body:{relying_party:n,challenge:e,authenticator_response:{type:t.type,id:t.id,raw_id:t.rawId,response:{signature:t.response.signature,client_data_json:t.response.clientDataJSON,authenticator_data:t.response.authenticatorData,user_handle:t.response.userHandle||void 0},authenticator_attachment:t.authenticatorAttachment||void 0,client_extension_results:{app_id:t.clientExtensionResults.appid||void 0,cred_props:t.clientExtensionResults.credProps||void 0,hmac_create_secret:t.clientExtensionResults.hmacCreateSecret||void 0}}}});return await this._privyInternal.session.updateWithTokensResponse(i),this._privyInternal.callbacks?.setUser?.(i.user),i}async linkWithPasskey(t,e){return await this._privyInternal.fetch(n,{body:{relying_party:e,authenticator_response:{type:t.type,id:t.id,raw_id:t.rawId,response:{client_data_json:t.response.clientDataJSON,attestation_object:t.response.attestationObject,authenticator_data:t.response.authenticatorData||void 0,transports:t.response.transports||void 0,public_key:t.response.publicKey||void 0,public_key_algorithm:t.response.publicKeyAlgorithm||void 0},authenticator_attachment:t.authenticatorAttachment||void 0,client_extension_results:{app_id:t.clientExtensionResults.appid||void 0,cred_props:t.clientExtensionResults.credProps||void 0,hmac_create_secret:t.clientExtensionResults.hmacCreateSecret||void 0}}}}),(await this._privyInternal.refreshSession()).user}constructor(t){this._privyInternal=t}}export{i as default};
