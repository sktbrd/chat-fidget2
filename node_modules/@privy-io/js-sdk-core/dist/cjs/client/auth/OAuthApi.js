"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@privy-io/public-api"),t=require("../../Error.js"),r=require("../../pkce.js");require("jose");exports.default=class{async generateURL(t,i){let a=r.createCodeVerifier(),s=r.createStateCode(),o=await r.deriveCodeChallengeFromCodeVerifier({codeVerifier:a,digest:this._crypto?.digest});return await Promise.all([this._storage.put(r.CODE_VERIFIER_KEY,a),this._storage.put(r.STATE_CODE_KEY,s)]),this._privyInternal.fetch(e.OAuthInit,{body:{redirect_to:i,provider:t,code_challenge:o,state_code:s}})}async loginWithCode(i,a,s,o,n){let[_,h]=await Promise.all([this._storage.get(r.CODE_VERIFIER_KEY),this._storage.get(r.STATE_CODE_KEY)]);if(h!==a)throw this._privyInternal.createAnalyticsEvent("possible_phishing_attempt",{flow:"oauth",provider:s,storedStateCode:h??"",returnedStateCode:a??""}),new t.PrivyClientError({code:"pkce_state_code_mismatch",error:"Unexpected auth flow. This may be a phishing attempt."});let l=await this._privyInternal.fetch(e.OAuthAuthenticate,{body:{authorization_code:i,code_type:o,state_code:h,code_verifier:_,mode:n}});return await this._privyInternal.session.updateWithTokensResponse(l),this._privyInternal.callbacks?.setUser?.(l.user),await Promise.all([this._storage.del(r.CODE_VERIFIER_KEY),this._storage.del(r.STATE_CODE_KEY)]),l}async linkWithCode(i,a,s,o){let[n,_]=await Promise.all([this._storage.get(r.CODE_VERIFIER_KEY),this._storage.get(r.STATE_CODE_KEY)]);if(_!==a)throw this._privyInternal.createAnalyticsEvent("possible_phishing_attempt",{flow:"oauth",provider:s,storedStateCode:_??"",returnedStateCode:a??""}),new t.PrivyClientError({code:"pkce_state_code_mismatch",error:"Unexpected auth flow. This may be a phishing attempt."});let h=await this._privyInternal.fetch(e.OAuthLink,{body:{authorization_code:i,code_type:o,state_code:_,code_verifier:n}});await this._privyInternal.session.processOAuthTokens(h.oauth_tokens);let l=await this._privyInternal.refreshSession();return await Promise.all([this._storage.del(r.CODE_VERIFIER_KEY),this._storage.del(r.STATE_CODE_KEY)]),l.user}async unlink(t,r){return await this._privyInternal.fetch(e.OAuthUnlink,{body:{provider:t,subject:r}}),(await this._privyInternal.refreshSession()).user}constructor(e,t,r){this._privyInternal=e,this._storage=t,this._crypto=r}};
