"use strict";var e=require("@ethersproject/units"),t=require("fetch-retry"),o=require("../../chains/polygon.js"),a=require("../../chains/polygonAmoy.js"),r=require("../../chains/polygonMumbai.js");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}let s=/*#__PURE__*/i(t).default(fetch,{retries:3,retryDelay:500});const n=e=>[o.polygon.id,r.polygonMumbai.id,a.polygonAmoy.id].includes(e);let y=t=>({maxPriorityFee:e.parseUnits(t.maxPriorityFee.toFixed(9),"gwei").toHexString(),maxFee:e.parseUnits(t.maxFee.toFixed(9),"gwei").toHexString()}),l=e=>({safeLow:y(e.safeLow),standard:y(e.standard),fast:y(e.fast)});const g=async e=>{let t="";switch(e){case o.polygon.id:t="https://gasstation.polygon.technology/v2";break;case r.polygonMumbai.id:t="https://gasstation-testnet.polygon.technology/v2";break;case a.polygonAmoy.id:t="https://gasstation.polygon.technology/amoy";break;default:throw Error(`chainId ${e} does not support polygon gas stations`)}let i=await s(t),n=await i.json();if(i.status>399)throw n;return l(n)};exports.defaultGasForPolygon=async function(e){if(!n(e.chainId))throw Error("Invalid chain ID for Polygon gas estimation.");if(void 0===e.type&&(e.type=2),e.maxPriorityFeePerGas&&e.maxFeePerGas)return e;try{let{standard:t}=await g(e.chainId);e.maxPriorityFeePerGas||(e.maxPriorityFeePerGas=t.maxPriorityFee),e.maxFeePerGas||(e.maxFeePerGas=t.maxFee),e.gasPrice&&(console.warn("`gasPrice` is not supported on this chain and will be ignored. Use `maxPriorityFeePerGas` and/or `maxFeePerGas` instead."),delete e.gasPrice)}catch(e){throw Error(`Failed to set gas prices from Polygon gas station with error: ${e}.`)}return e},exports.getPolygonGasStationFees=g,exports.isPolygon=n;
