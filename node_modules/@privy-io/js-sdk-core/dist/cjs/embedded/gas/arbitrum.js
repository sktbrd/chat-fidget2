"use strict";var r=require("@ethersproject/bignumber"),e=require("../../chains/arbitrum.js"),i=require("../../chains/arbitrumGoerli.js"),t=require("../../chains/arbitrumSepolia.js"),a=require("../utils/ethers.js");const s=r=>[e.arbitrum.id,i.arbitrumGoerli.id,t.arbitrumSepolia.id].includes(r);exports.defaultGasForArbitrum=async(e,i)=>{if(!s(e.chainId))throw Error("Invalid chain ID for Arbitrum gas estimation.");if(void 0===e.type&&(e.type=2),e.maxFeePerGas)return e;try{let{lastBaseFeePerGas:t}=await i.getFeeData();if(t){let i=t.mul(r.BigNumber.from(120)).div(r.BigNumber.from(100));e.maxFeePerGas=a.convertBigNumberish(i),e.maxPriorityFeePerGas=a.convertBigNumberish(r.BigNumber.from(0))}}catch(r){throw Error(`Failed to set gas price for Arbitrum transaction: ${r}.`)}return e},exports.isArbitrum=s;
